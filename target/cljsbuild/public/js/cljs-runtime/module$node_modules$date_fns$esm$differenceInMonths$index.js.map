{
"version":3,
"file":"module$node_modules$date_fns$esm$differenceInMonths$index.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,0DAAA,CAA8E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAkBtHC,QAASA,uBAAsB,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAAC,WAAP,CAAwBD,GAAxB,CAA8B,CAAE,UAAWA,GAAb,CAAvC,CAfrCE,MAAAC,eAAA,CAAsBL,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CM,MAAO,CAAA,CADoC,CAA7C,CAGAN,QAAA,CAAQ,SAAR,CAAA,CAoCAO,QAA2B,CAACC,aAAD,CAAgBC,cAAhB,CAAgC,CACzD,CAAC,CAAA,CAAGC,OAAA,CAAQ,SAAR,CAAJ,EAAwB,CAAxB,CAA2BC,SAA3B,CACA,KAAIC,SAAW,CAAC,CAAA,CAAGC,MAAA,CAAO,SAAP,CAAJ,EAAuBL,aAAvB,CAAf,CACIM,UAAY,CAAC,CAAA,CAAGD,MAAA,CAAO,SAAP,CAAJ,EAAuBJ,cAAvB,CADhB,CAEIM,KAAO,CAAC,CAAA,CAAGC,OAAA,CAAQ,SAAR,CAAJ,EAAwBJ,QAAxB,CAAkCE,SAAlC,CAFX,CAGIG;AAAaC,IAAAC,IAAA,CAAS,CAAC,CAAA,CAAGC,OAAA,CAAQ,SAAR,CAAJ,EAAwBR,QAAxB,CAAkCE,SAAlC,CAAT,CAGA,EAAjB,CAAIG,UAAJ,CACEI,SADF,CACW,CADX,EAG8B,CAe5B,GAfIT,QAAAU,SAAA,EAeJ,EAfsD,EAetD,CAfiCV,QAAAW,QAAA,EAejC,EAZEX,QAAAY,QAAA,CAAiB,EAAjB,CAYF,CATAZ,QAAAa,SAAA,CAAkBb,QAAAU,SAAA,EAAlB,CAAwCP,IAAxC,CAA+CE,UAA/C,CASA,CANIS,QAMJ,CANyB,CAAC,CAAA,CAAGV,OAAA,CAAQ,SAAR,CAAJ,EAAwBJ,QAAxB,CAAkCE,SAAlC,CAMzB,GAN0E,CAACC,IAM3E,CAJI,CAAC,CAAA,CAAGY,OAAA,CAAQ,SAAR,CAAJ,EAAwB,CAAC,CAAA,CAAGd,MAAA,CAAO,SAAP,CAAJ,EAAuBL,aAAvB,CAAxB,CAIJ,EAJqF,CAIrF,GAJsES,UAItE,EAJgJ,CAIhJ,GAJ0F,CAAC,CAAA,CAAGD,OAAA,CAAQ,SAAR,CAAJ,EAAwBR,aAAxB,CAAuCM,SAAvC,CAI1F,GAHEY,QAGF,CAHuB,CAAA,CAGvB,EAAAL,SAAA,CAASN,IAAT,EAAiBE,UAAjB,CAA8BW,MAAA,CAAOF,QAAP,CAA9B,CAlBF,CAsBA,OAAkB,EAAX,GAAAL,SAAA,CAAe,CAAf,CAAmBA,SA9B+B,CAlC3D,KAAIR,OAASZ,sBAAA,CAAuBH,OAAA,CAAQ,+CAAR,CAAvB,CAAb;AAEIsB,QAAUnB,sBAAA,CAAuBH,OAAA,CAAQ,mEAAR,CAAvB,CAFd,CAIIkB,QAAUf,sBAAA,CAAuBH,OAAA,CAAQ,mDAAR,CAAvB,CAJd,CAMIY,QAAUT,sBAAA,CAAuBH,OAAA,CAAQ,0DAAR,CAAvB,CANd,CAQI6B,QAAU1B,sBAAA,CAAuBH,OAAA,CAAQ,yDAAR,CAAvB,CAhBwG;",
"sources":["node_modules/date-fns/esm/differenceInMonths/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$date_fns$esm$differenceInMonths$index\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = differenceInMonths;\n\nvar _index = _interopRequireDefault(require(\"../toDate/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../differenceInCalendarMonths/index.js\"));\n\nvar _index3 = _interopRequireDefault(require(\"../compareAsc/index.js\"));\n\nvar _index4 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n\nvar _index5 = _interopRequireDefault(require(\"../isLastDayOfMonth/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @description\n * Get the number of full months between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\nfunction differenceInMonths(dirtyDateLeft, dirtyDateRight) {\n  (0, _index4[\"default\"])(2, arguments);\n  var dateLeft = (0, _index[\"default\"])(dirtyDateLeft);\n  var dateRight = (0, _index[\"default\"])(dirtyDateRight);\n  var sign = (0, _index3[\"default\"])(dateLeft, dateRight);\n  var difference = Math.abs((0, _index2[\"default\"])(dateLeft, dateRight));\n  var result; // Check for the difference of less than month\n\n  if (difference < 1) {\n    result = 0;\n  } else {\n    if (dateLeft.getMonth() === 1 && dateLeft.getDate() > 27) {\n      // This will check if the date is end of Feb and assign a higher end of month date\n      // to compare it with Jan\n      dateLeft.setDate(30);\n    }\n\n    dateLeft.setMonth(dateLeft.getMonth() - sign * difference); // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full\n    // If so, result must be decreased by 1 in absolute value\n\n    var isLastMonthNotFull = (0, _index3[\"default\"])(dateLeft, dateRight) === -sign; // Check for cases of one full calendar month\n\n    if ((0, _index5[\"default\"])((0, _index[\"default\"])(dirtyDateLeft)) && difference === 1 && (0, _index3[\"default\"])(dirtyDateLeft, dateRight) === 1) {\n      isLastMonthNotFull = false;\n    }\n\n    result = sign * (difference - Number(isLastMonthNotFull));\n  } // Prevent negative zero\n\n\n  return result === 0 ? 0 : result;\n}\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","obj","__esModule","Object","defineProperty","value","differenceInMonths","dirtyDateLeft","dirtyDateRight","_index4","arguments","dateLeft","_index","dateRight","sign","_index3","difference","Math","abs","_index2","result","getMonth","getDate","setDate","setMonth","isLastMonthNotFull","_index5","Number"]
}
