{"version":3,"sources":["camel_snake_kebab/internals/alter_name.cljc"],"mappings":";AAGA,AAAA;AAAA;;;AAAA,AAAaO;;AAAb,AAAAP,AAAA,AACeQ,AAAKC;AADpB,AAAA,AAAAR,AAAA,AAAA,AAAA,AAAA,AACeO,AAAAA;AADfN,AAAA,AAAAC,AAAA,AAAAC,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACeM,AAAAA,AAAKC,AAAAA;;AADpB,AAAAJ,AAAA,AAAAF,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAE,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACeG,AAAAA,AAAKC,AAAAA;;AADpB,AAAA,AAAAH,AAAA,AACeE;;;;AADf,AAAA;;;AAAA,AACGL,AAAYK,AAAKC;AADpB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACeD,AAAAA;AADf,AACeA,AAAAA,AAAKC;;AADpB,AAAAT,AACeQ,AAAKC;;;;AADpB,AAGA,AAAA,AAAA,AAAAC,AAAAH,AAAA,AAAA;;AAAA,AAAAG,AAAAP,AAAA,AAGE,AAAaK,AAAKC;AAAlB,AACE,AAAID,AAAAA,AAAKC,AAAAA,AAAAA;;;AAJb,AAAA,AAAA,AAAA,AAAAE,AAMEC;;AANF,AAAA,AAAA,AAMEA,AACA,AAAaJ,AAAKC;AAAlB,AAAA,AAAA,AAAaD;AAAb,AACE,AAAI,AAACK,AAAUL;AACb,AAAO,AAAA,AAAA,AAAA,AAACM,AAAwDN;;AAChE,AAAA,AAAAO,AAAA,AAAIP,AAAKQ,AAAOC;AAAhB,AAAA,AAAAF,AAAAA,AAAcN,AAAAA,AAAAA;;;;;AAVpB,AAAA,AAAA,AAAA,AAAAE,AAYEO;;AAZF,AAAA,AAAA,AAYEA,AACA,AAAaV,AAAKC;AAAlB,AAAA,AAAA,AAAaD;AAAb,AACE,AAAI,AAACK,AAAUL;AACb,AAAO,AAAA,AAAA,AAAA,AAACM,AAAuDN;;AAC/D,AAAA,AAAAW,AAAA,AAAIX,AAAKQ,AAAOI;AAAhB,AAAA,AAAAD,AAAAA,AAAcV,AAAAA,AAAAA","names":["camel-snake-kebab$internals$alter-name$AlterName$alter_name$dyn","x__4428__auto__","m__4429__auto__","camel-snake-kebab.internals.alter-name/alter-name","goog/typeOf","m__4426__auto__","cljs.core/missing-protocol","camel-snake-kebab.internals.alter-name/AlterName","this","f","goog.object/set","cljs.core/PROTOCOL_SENTINEL","cljs.core/Keyword","cljs.core/namespace","cljs.core.ex_info","G__79796","cljs.core/name","cljs.core.keyword","cljs.core/Symbol","G__79797","cljs.core.symbol"],"sourcesContent":["(ns camel-snake-kebab.internals.alter-name\n  #?(:clj (:import (clojure.lang Keyword Symbol))))\n\n(defprotocol AlterName\n  (alter-name [this f] \"Alters the name of this with f.\"))\n\n(extend-protocol AlterName\n  #?(:clj String\n     :cljs string)\n  (alter-name [this f]\n    (-> this f))\n\n  Keyword\n  (alter-name [this f]\n    (if (namespace this)\n      (throw (ex-info \"Namespaced keywords are not supported\" {:input this}))\n      (-> this name f keyword)))\n\n  Symbol\n  (alter-name [this f]\n    (if (namespace this)\n      (throw (ex-info \"Namespaced symbols are not supported\" {:input this}))\n      (-> this name f symbol))))\n"]}