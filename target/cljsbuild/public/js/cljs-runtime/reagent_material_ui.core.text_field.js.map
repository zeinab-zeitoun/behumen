{"version":3,"sources":["reagent_material_ui/core/text_field.cljs"],"mappings":";;AAWA,AAAA,AAAgBA,AAAaC;AAA7B,AACMA,AACA,AAAA,AAACC,AAAW,AAAA,AAAWD,AACvB,AAAA,AAACE,AACD,AAACC;;AAEP,AAAeC,AACb,AAACC,AACA,AAAWL;AAAX,AAAA,AAAA,AACU,AAACD,AAAYC;;AAE1B,AAAeM,AACb,AAACD,AACA,AAAcL;AAAd,AAAA,AAAA,AACa,AAACD,AAAYC;;AAE7B,AAAeO,AAAe,AAACC,AAAkB,AAAAC,AAAI,AAAWC;AAAf,AAAA,AAAAD;AAAAA;;AAA6B,AAAaC;;AAA7D;AAE9B,AAAA,AAAA,AAAAC,AAAMM;AAAN,AAAA,AAAAL,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAK,AAAA,AAAA,AAAA,AAAAF;;;AAAA,AAAA,AAAA,AAAA,AAAME,AAAYjB,AAAQuB;AAA1B,AACE,AAAMC,AAAS,AAAA,AAACC,AAAYzB;AACtB0B,AAAU,AAAAC,AAAK,AAAA,AAAY3B;AAAjB,AAAA,AAAA2B;AAAwBH;;AAAxBG;;;AACVC,AAAgB,AAAAnB,AAAI,AAAA,AAACgB,AAAY,AAAA,AAAazB;AAA9B,AAAA,AAAAS;AAAAA;;AACI,AACE,AAAAkB,AAAK,AAAA,AAAY3B;AAAjB,AAAA,AAAA2B;AAAA,AAAAA,AAAwB,AAAA,AAAO3B;AAA/B,AAAA,AAAA2B;AAAsC,AAACE,AAAIL;;AAA3CG;;;AAAAA;;;AACArB;;AAFF,AAIEoB;AACAI;;AALF,AAOE,AAAA,AAAS9B;AAPX;;AAAA,AAWEI;;;;;;;AACtBJ,AAAM,AAAA+B,AAAQ/B;AAAR+B,AAAA,AACEH,AAAgB,AAAAG,AAAA,AAAA,AAAAC,AAACC;AAAD,AAAqB,AAAAD,AAAA,AAACE,AAAiCN;AADzEG;AAAA,AAAA,AAEEL;AAAU,AAAAK,AAAA,AAAA,AAAA,AAACI,AAAkCX;;AAF/CO;;;AAfZ,AAkBE,AAAA,AAACK,AAAM7B,AAAeP,AAAOuB;;;AAnBjC,AAAA,AAAA,AAAMN;;AAAN;AAAA,AAAA,AAAA,AAAAC,AAAMD;AAAN,AAAA,AAAAE,AAAA,AAAAC,AAAAF;AAAAA,AAAA,AAAAG,AAAAH;AAAA,AAAA,AAAAI,AAAA;AAAA,AAAA,AAAAA,AAAAH,AAAAD;;;AAAA","names":["reagent-material-ui.core.text-field/input-props","props","cljs.core.assoc","cljs.core.dissoc","reagent-material-ui.util/remove-undefined-vals","reagent-material-ui.core.text-field/input","reagent.core.reactify_component","reagent-material-ui.core.text-field/textarea","reagent-material-ui.core.text-field/mui-text-field","reagent_material_ui.util.adapt_react_class","or__4126__auto__","js/module$node_modules$$material_ui$core$esm$TextField$index","var_args","args__4742__auto__","len__4736__auto__","i__4737__auto__","argseq__4743__auto__","cljs.core/IndexedSeq","reagent-material-ui.core.text-field/text-field","seq80758","G__80759","cljs.core/first","cljs.core/next","self__4723__auto__","children","rows-max","reagent_material_ui.util.get_anycase","autosize?","and__4115__auto__","input-component","cljs.core/not","reagent-material-ui.core.textarea-autosize/react-textarea-autosize","G__80760","p1__80757#","cljs.core.update","reagent_material_ui.util.assoc_anycase","cljs.core/assoc-in","cljs.core.into"],"sourcesContent":["(ns reagent-material-ui.core.text-field\n  \"Imports @material-ui/core/TextField as a Reagent component.\n   Original documentation is at https://material-ui.com/api/text-field/ .\"\n  (:require [reagent.core :as r]\n            [\"@material-ui/core/TextField\" :as MuiTextField]\n            [reagent-material-ui.core.textarea-autosize :refer [react-textarea-autosize]]\n            [reagent-material-ui.util :refer [adapt-react-class get-anycase assoc-anycase remove-undefined-vals]]))\n\n;; Fix cursor positioning for Reagent\n;; https://github.com/reagent-project/reagent/blob/master/doc/examples/material-ui.md\n\n(defn ^:private input-props [props]\n  (-> props\n      (assoc :ref (:inputRef props))\n      (dissoc :inputRef)\n      (remove-undefined-vals)))\n\n(def ^:private input\n  (r/reactify-component\n   (fn input [props]\n     [:input (input-props props)])))\n\n(def ^:private textarea\n  (r/reactify-component\n   (fn textarea [props]\n     [:textarea (input-props props)])))\n\n(def ^:private mui-text-field (adapt-react-class (or (.-default MuiTextField) (.-TextField MuiTextField)) \"mui-text-field\"))\n\n(defn text-field [props & children]\n  (let [rows-max (get-anycase props :rows-max)\n        autosize? (and (:multiline props) rows-max)\n        input-component (or (get-anycase (:InputProps props) :input-component)\n                            (cond\n                              (and (:multiline props) (:rows props) (not rows-max))\n                              textarea\n\n                              autosize?\n                              react-textarea-autosize\n\n                              (:select props)\n                              nil\n\n                              :else\n                              input))\n        props (cond-> props\n                input-component (update :InputProps #(assoc-anycase % :input-component input-component))\n                autosize? (assoc-in [:input-props :rows-max] rows-max))]\n    (into [mui-text-field props] children)))\n"]}