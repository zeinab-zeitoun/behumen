{"version":3,"sources":["reagent_material_ui/styles.cljs"],"mappings":"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","names":["reagent-material-ui.styles/theme-provider*","reagent_material_ui.util.adapt_react_class","js/module$node_modules$$material_ui$core$esm$styles$index.MuiThemeProvider","var_args","G__80275","reagent-material-ui.styles/make-styles","js/Error","styles","reagent_material_ui.styles.make_styles","opts","use-styles","js/module$node_modules$$material_ui$core$esm$styles$index.makeStyles","reagent-material-ui.util/wrap-jss-styles","cljs.core/clj->js","reagent-material-ui.util/wrap-js-function","G__80278","reagent-material-ui.styles/with-styles","reagent_material_ui.styles.with_styles","hoc","js/module$node_modules$$material_ui$core$esm$styles$index.withStyles","cljs.core.partial","reagent-material-ui.util/apply-hoc","G__80298","reagent-material-ui.styles/styled","component","reagent_material_ui.styles.styled","styled-component","js/module$node_modules$$material_ui$core$esm$styles$index.styled","reagent-material-ui.util/reactify-component","G__80302","G__80303","reagent-material-ui.styles/use-theme","reagent_material_ui.util.js__GT_clj_SINGLEQUOTE_","js/module$node_modules$$material_ui$core$esm$styles$index.useTheme","reagent-material-ui.styles/with-theme","js/module$node_modules$$material_ui$core$esm$styles$index.withTheme","args__4742__auto__","len__4736__auto__","i__4737__auto__","argseq__4743__auto__","cljs.core/IndexedSeq","reagent-material-ui.styles/theme-provider","seq80316","G__80317","cljs.core/first","cljs.core/next","self__4723__auto__","theme","children","cljs.core.into","cljs.core.map","reagent.core/as-element","reagent-material-ui.styles/create-mui-theme","options","js/module$node_modules$$material_ui$core$esm$styles$index.createMuiTheme","reagent-material-ui.util/clj->js'"],"sourcesContent":["(ns reagent-material-ui.styles\n  \"Imports some styles related helpers and components from @material-ui/core/styles.\n   Original documentation is at https://material-ui.com/styles/basics/ .\"\n  (:require [reagent.core :as r]\n            [\"@material-ui/core/styles\" :as mui-styles]\n            [reagent-material-ui.util :as util]))\n\n(def ^:private theme-provider* (util/adapt-react-class mui-styles/MuiThemeProvider \"mui-theme-provider\"))\n\n(defn make-styles\n  \"Takes a styles-generating function or a styles object.\n   Returns a React hook which accepts a props object and returns the mapping from styles to class names.\n   Note: React hooks can't be used in regular Reagent components: http://reagent-project.github.io/docs/master/ReactFeatures.html#hooks\"\n  ([styles]\n   (make-styles styles {}))\n  ([styles opts]\n   (let [use-styles (mui-styles/makeStyles (util/wrap-jss-styles styles) (clj->js opts))]\n     (util/wrap-js-function use-styles))))\n\n(defn with-styles\n  \"Takes a styles-generating function or a styles object.\n   Returns a higher-order component that wraps another component and adds a `:classes` prop to it.\n   Note: input component has to take all its props (including children) in a single map.\"\n  ([styles]\n   (with-styles styles {}))\n  ([styles opts]\n   (let [hoc (mui-styles/withStyles (util/wrap-jss-styles styles) (clj->js opts))]\n     (partial util/apply-hoc hoc))))\n\n(defn styled\n  \"The styled-components pattern. Takes a component and a styles-generating function or a styles object.\n   Creates and returns a new component and gives the input component a `:class-name` prop for applying styles.\n   Note: input component has to take all its props (including children) in a single map.\"\n  ([component styles]\n   (styled component styles {}))\n  ([component styles opts]\n   (let [styled-component (mui-styles/styled (util/reactify-component component))]\n     (util/adapt-react-class\n      (styled-component (util/wrap-jss-styles styles) (clj->js opts))))))\n\n(defn use-theme\n  \"React hook that returns the theme object.\n   Note: React hooks can't be used in regular Reagent components: http://reagent-project.github.io/docs/master/ReactFeatures.html#hooks\"\n  []\n  (util/js->clj' (mui-styles/useTheme)))\n\n(defn with-theme\n  \"Higher order component that provides the theme object as a prop to the input component.\n   Note: input component has to take all its props (including children) in a single map.\"\n  [component]\n  (util/apply-hoc mui-styles/withTheme component))\n\n(defn theme-provider\n  \"Component that takes a theme object and makes it available in child components.\n   It should preferably be used at the root of your component tree.\"\n  [theme & children]\n  (into [theme-provider* {:theme theme}]\n        (map r/as-element children)))\n\n(defn create-mui-theme\n  \"Takes an incomplete theme object and adds the missing parts\"\n  [options]\n  (util/js->clj' (mui-styles/createMuiTheme (util/clj->js' options))))\n"]}