shadow$provide.module$node_modules$$date_io$date_fns$build$index=function(global,require,module,exports){function _interopDefaultLegacy(e){return e&&"object"===typeof e&&"default"in e?e:{"default":e}}var addDays=require("module$node_modules$date_fns$esm$addDays$index"),addSeconds=require("module$node_modules$date_fns$esm$addSeconds$index"),addMinutes=require("module$node_modules$date_fns$esm$addMinutes$index"),addHours=require("module$node_modules$date_fns$esm$addHours$index"),addWeeks=require("module$node_modules$date_fns$esm$addWeeks$index"),
addMonths=require("module$node_modules$date_fns$esm$addMonths$index"),addYears=require("module$node_modules$date_fns$esm$addYears$index"),differenceInYears=require("module$node_modules$date_fns$esm$differenceInYears$index"),differenceInQuarters=require("module$node_modules$date_fns$esm$differenceInQuarters$index"),differenceInMonths=require("module$node_modules$date_fns$esm$differenceInMonths$index"),differenceInWeeks=require("module$node_modules$date_fns$esm$differenceInWeeks$index"),differenceInDays=
require("module$node_modules$date_fns$esm$differenceInDays$index"),differenceInHours=require("module$node_modules$date_fns$esm$differenceInHours$index"),differenceInMinutes=require("module$node_modules$date_fns$esm$differenceInMinutes$index"),differenceInSeconds=require("module$node_modules$date_fns$esm$differenceInSeconds$index"),differenceInMilliseconds=require("module$node_modules$date_fns$esm$differenceInMilliseconds$index"),eachDayOfInterval=require("module$node_modules$date_fns$esm$eachDayOfInterval$index"),
endOfDay=require("module$node_modules$date_fns$esm$endOfDay$index"),endOfWeek=require("module$node_modules$date_fns$esm$endOfWeek$index"),endOfYear=require("module$node_modules$date_fns$esm$endOfYear$index"),format$jscomp$0=require("module$node_modules$date_fns$esm$format$index"),getHours=require("module$node_modules$date_fns$esm$getHours$index"),getSeconds=require("module$node_modules$date_fns$esm$getSeconds$index"),getYear=require("module$node_modules$date_fns$esm$getYear$index"),isAfter=require("module$node_modules$date_fns$esm$isAfter$index"),
isBefore=require("module$node_modules$date_fns$esm$isBefore$index"),isEqual=require("module$node_modules$date_fns$esm$isEqual$index"),isSameDay=require("module$node_modules$date_fns$esm$isSameDay$index"),isSameYear=require("module$node_modules$date_fns$esm$isSameYear$index"),isSameMonth=require("module$node_modules$date_fns$esm$isSameMonth$index"),isSameHour=require("module$node_modules$date_fns$esm$isSameHour$index"),isValid=require("module$node_modules$date_fns$esm$isValid$index"),dateFnsParse=
require("module$node_modules$date_fns$esm$parse$index"),setHours=require("module$node_modules$date_fns$esm$setHours$index"),setMinutes=require("module$node_modules$date_fns$esm$setMinutes$index"),setMonth=require("module$node_modules$date_fns$esm$setMonth$index"),getDay=require("module$node_modules$date_fns$esm$getDay$index"),getDaysInMonth=require("module$node_modules$date_fns$esm$getDaysInMonth$index"),setSeconds=require("module$node_modules$date_fns$esm$setSeconds$index"),setYear=require("module$node_modules$date_fns$esm$setYear$index"),
startOfDay=require("module$node_modules$date_fns$esm$startOfDay$index"),startOfMonth=require("module$node_modules$date_fns$esm$startOfMonth$index"),endOfMonth=require("module$node_modules$date_fns$esm$endOfMonth$index"),startOfWeek=require("module$node_modules$date_fns$esm$startOfWeek$index"),startOfYear=require("module$node_modules$date_fns$esm$startOfYear$index"),isWithinInterval=require("module$node_modules$date_fns$esm$isWithinInterval$index"),longFormatters=require("module$node_modules$date_fns$_lib$format$longFormatters$index"),
defaultLocale=require("module$node_modules$date_fns$esm$locale$en_US$index"),addDays__default=_interopDefaultLegacy(addDays),addSeconds__default=_interopDefaultLegacy(addSeconds),addMinutes__default=_interopDefaultLegacy(addMinutes),addHours__default=_interopDefaultLegacy(addHours),addWeeks__default=_interopDefaultLegacy(addWeeks),addMonths__default=_interopDefaultLegacy(addMonths),addYears__default=_interopDefaultLegacy(addYears),differenceInYears__default=_interopDefaultLegacy(differenceInYears),
differenceInQuarters__default=_interopDefaultLegacy(differenceInQuarters),differenceInMonths__default=_interopDefaultLegacy(differenceInMonths),differenceInWeeks__default=_interopDefaultLegacy(differenceInWeeks),differenceInDays__default=_interopDefaultLegacy(differenceInDays),differenceInHours__default=_interopDefaultLegacy(differenceInHours),differenceInMinutes__default=_interopDefaultLegacy(differenceInMinutes),differenceInSeconds__default=_interopDefaultLegacy(differenceInSeconds),differenceInMilliseconds__default=
_interopDefaultLegacy(differenceInMilliseconds),eachDayOfInterval__default=_interopDefaultLegacy(eachDayOfInterval),endOfDay__default=_interopDefaultLegacy(endOfDay),endOfWeek__default=_interopDefaultLegacy(endOfWeek),endOfYear__default=_interopDefaultLegacy(endOfYear),format__default=_interopDefaultLegacy(format$jscomp$0),getHours__default=_interopDefaultLegacy(getHours),getSeconds__default=_interopDefaultLegacy(getSeconds),getYear__default=_interopDefaultLegacy(getYear),isAfter__default=_interopDefaultLegacy(isAfter),
isBefore__default=_interopDefaultLegacy(isBefore),isEqual__default=_interopDefaultLegacy(isEqual),isSameDay__default=_interopDefaultLegacy(isSameDay),isSameYear__default=_interopDefaultLegacy(isSameYear),isSameMonth__default=_interopDefaultLegacy(isSameMonth),isSameHour__default=_interopDefaultLegacy(isSameHour),isValid__default=_interopDefaultLegacy(isValid),dateFnsParse__default=_interopDefaultLegacy(dateFnsParse),setHours__default=_interopDefaultLegacy(setHours),setMinutes__default=_interopDefaultLegacy(setMinutes),
setMonth__default=_interopDefaultLegacy(setMonth),getDay__default=_interopDefaultLegacy(getDay),getDaysInMonth__default=_interopDefaultLegacy(getDaysInMonth),setSeconds__default=_interopDefaultLegacy(setSeconds),setYear__default=_interopDefaultLegacy(setYear),startOfDay__default=_interopDefaultLegacy(startOfDay),startOfMonth__default=_interopDefaultLegacy(startOfMonth),endOfMonth__default=_interopDefaultLegacy(endOfMonth),startOfWeek__default=_interopDefaultLegacy(startOfWeek),startOfYear__default=
_interopDefaultLegacy(startOfYear),isWithinInterval__default=_interopDefaultLegacy(isWithinInterval),longFormatters__default=_interopDefaultLegacy(longFormatters),defaultLocale__default=_interopDefaultLegacy(defaultLocale),defaultFormats={dayOfMonth:"d",fullDate:"PP",fullDateWithWeekday:"PPPP",fullDateTime:"PP p",fullDateTime12h:"PP hh:mm aaa",fullDateTime24h:"PP HH:mm",fullTime:"p",fullTime12h:"hh:mm aaa",fullTime24h:"HH:mm",hours12h:"hh",hours24h:"HH",keyboardDate:"P",keyboardDateTime:"P p",keyboardDateTime12h:"P hh:mm aaa",
keyboardDateTime24h:"P HH:mm",minutes:"mm",month:"LLLL",monthAndDate:"MMMM d",monthAndYear:"LLLL yyyy",monthShort:"MMM",weekday:"EEEE",weekdayShort:"EEE",normalDate:"d MMMM",normalDateWithWeekday:"EEE, MMM d",seconds:"ss",shortDate:"MMM d",year:"yyyy"},DateFnsUtils=function(){return function(_a){var _this=this,_b=void 0===_a?{}:_a;_a=_b.locale;_b=_b.formats;this.lib="date-fns";this.is12HourCycleInCurrentLocale=function(){return _this.locale?/a/.test(_this.locale.formatLong.time()):!0};this.getFormatHelperText=
function(format){var locale=_this.locale||defaultLocale__default["default"];return format.match(/P+p+|P+|p+|''|'(''|[^'])+('|$)|./g).map(function(token){var firstCharacter=token[0];return"p"===firstCharacter||"P"===firstCharacter?(0,longFormatters__default["default"][firstCharacter])(token,locale.formatLong,{}):token}).join("").replace(/(aaa|aa|a)/g,"(a|p)m").toLocaleLowerCase()};this.getCurrentLocaleCode=function(){var _a;return(null===(_a=_this.locale)||void 0===_a?void 0:_a.code)||"en-US"};this.addSeconds=
function(value,count){return addSeconds__default["default"](value,count)};this.addMinutes=function(value,count){return addMinutes__default["default"](value,count)};this.addHours=function(value,count){return addHours__default["default"](value,count)};this.addDays=function(value,count){return addDays__default["default"](value,count)};this.addWeeks=function(value,count){return addWeeks__default["default"](value,count)};this.addMonths=function(value,count){return addMonths__default["default"](value,count)};
this.isValid=function(value){return isValid__default["default"](_this.date(value))};this.getDiff=function(value,comparing,unit){switch(unit){case "years":return differenceInYears__default["default"](value,_this.date(comparing));case "quarters":return differenceInQuarters__default["default"](value,_this.date(comparing));case "months":return differenceInMonths__default["default"](value,_this.date(comparing));case "weeks":return differenceInWeeks__default["default"](value,_this.date(comparing));case "days":return differenceInDays__default["default"](value,
_this.date(comparing));case "hours":return differenceInHours__default["default"](value,_this.date(comparing));case "minutes":return differenceInMinutes__default["default"](value,_this.date(comparing));case "seconds":return differenceInSeconds__default["default"](value,_this.date(comparing));default:return differenceInMilliseconds__default["default"](value,_this.date(comparing))}};this.isAfter=function(value,comparing){return isAfter__default["default"](value,comparing)};this.isBefore=function(value,
comparing){return isBefore__default["default"](value,comparing)};this.startOfDay=function(value){return startOfDay__default["default"](value)};this.endOfDay=function(value){return endOfDay__default["default"](value)};this.getHours=function(value){return getHours__default["default"](value)};this.setHours=function(value,count){return setHours__default["default"](value,count)};this.setMinutes=function(value,count){return setMinutes__default["default"](value,count)};this.getSeconds=function(value){return getSeconds__default["default"](value)};
this.setSeconds=function(value,count){return setSeconds__default["default"](value,count)};this.isSameDay=function(value,comparing){return isSameDay__default["default"](value,comparing)};this.isSameMonth=function(value,comparing){return isSameMonth__default["default"](value,comparing)};this.isSameYear=function(value,comparing){return isSameYear__default["default"](value,comparing)};this.isSameHour=function(value,comparing){return isSameHour__default["default"](value,comparing)};this.startOfMonth=function(value){return startOfMonth__default["default"](value)};
this.endOfMonth=function(value){return endOfMonth__default["default"](value)};this.startOfWeek=function(value){return startOfWeek__default["default"](value,{locale:_this.locale})};this.endOfWeek=function(value){return endOfWeek__default["default"](value,{locale:_this.locale})};this.getYear=function(value){return getYear__default["default"](value)};this.setYear=function(value,count){return setYear__default["default"](value,count)};this.date=function(value){return"undefined"===typeof value?new Date:
null===value?null:new Date(value)};this.toJsDate=function(value){return value};this.parse=function(value,formatString){return""===value?null:dateFnsParse__default["default"](value,formatString,new Date,{locale:_this.locale})};this.format=function(date,formatKey){return _this.formatByString(date,_this.formats[formatKey])};this.formatByString=function(date,formatString){return format__default["default"](date,formatString,{locale:_this.locale})};this.isEqual=function(date,comparing){return null===date&&
null===comparing?!0:isEqual__default["default"](date,comparing)};this.isNull=function(date){return null===date};this.isAfterDay=function(date,value){return isAfter__default["default"](date,endOfDay__default["default"](value))};this.isBeforeDay=function(date,value){return isBefore__default["default"](date,startOfDay__default["default"](value))};this.isBeforeYear=function(date,value){return isBefore__default["default"](date,startOfYear__default["default"](value))};this.isAfterYear=function(date,value){return isAfter__default["default"](date,
endOfYear__default["default"](value))};this.isWithinRange=function(date,_a){return isWithinInterval__default["default"](date,{start:_a[0],end:_a[1]})};this.formatNumber=function(numberToFormat){return numberToFormat};this.getMinutes=function(date){return date.getMinutes()};this.getMonth=function(date){return date.getMonth()};this.getDaysInMonth=function(date){return getDaysInMonth__default["default"](date)};this.setMonth=function(date,count){return setMonth__default["default"](date,count)};this.getMeridiemText=
function(ampm){return"am"===ampm?"AM":"PM"};this.getNextMonth=function(date){return addMonths__default["default"](date,1)};this.getPreviousMonth=function(date){return addMonths__default["default"](date,-1)};this.getMonthArray=function(date){for(date=[startOfYear__default["default"](date)];12>date.length;)date.push(_this.getNextMonth(date[date.length-1]));return date};this.mergeDateAndTime=function(date,time){return _this.setSeconds(_this.setMinutes(_this.setHours(date,_this.getHours(time)),_this.getMinutes(time)),
_this.getSeconds(time))};this.getWeekdays=function(){var now=new Date;return eachDayOfInterval__default["default"]({start:startOfWeek__default["default"](now,{locale:_this.locale}),end:endOfWeek__default["default"](now,{locale:_this.locale})}).map(function(day){return _this.formatByString(day,"EEEEEE")})};this.getWeekArray=function(date){var start=startOfWeek__default["default"](startOfMonth__default["default"](date),{locale:_this.locale});date=endOfWeek__default["default"](endOfMonth__default["default"](date),
{locale:_this.locale});for(var count=0,nestedWeeks=[],lastDay=null;isBefore__default["default"](start,date);){var weekNumber=Math.floor(count/7);nestedWeeks[weekNumber]=nestedWeeks[weekNumber]||[];var day=getDay__default["default"](start);lastDay!==day&&(lastDay=day,nestedWeeks[weekNumber].push(start),count+=1);start=addDays__default["default"](start,1)}return nestedWeeks};this.getYearRange=function(start,end){start=startOfYear__default["default"](start);end=endOfYear__default["default"](end);for(var years=
[];isBefore__default["default"](start,end);)years.push(start),start=addYears__default["default"](start,1);return years};this.locale=_a;this.formats=Object.assign({},defaultFormats,_b)}}();module.exports=DateFnsUtils}
//# sourceMappingURL=module$node_modules$$date_io$date_fns$build$index.js.map
