{"version":3,"sources":["camel_snake_kebab/internals/misc.cljc"],"mappings":";AAIA,AAAA,AAAA,AAAAA,AAAMM;AAAN,AAAA,AAAAL,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAK,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAF;;;AAAA,AAAA,AAAA,AAAA,AAAAG,AAAMD,AAAce,AAASC,AAAQC,AAAIC;AAAzC,AAAA,AAAAhB,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAA,AAAAI,AAAAJ,AAAA,AAAqDiB,AACUC;AAD/D,AAEE,AAAAC,AAAqB,AAACM,AAAMR,AAAUD;AAAtCI,AAAA,AAAAC,AAAAF;AAAAG,AAAA,AAAAf,AAAAa;AAAAA,AAAA,AAAAZ,AAAAY;AAAAE,AAAOC;AAAPH,AAAeI;AAAf,AACE,AAACE,AAAKX,AAAI,AAACY,AAAK,AAACd,AAAAA,AAAAA,AAASU,AAAAA,AAAO,AAACK,AAAId,AAAQU;;;AAHlD,AAAA,AAAA,AAAM1B;;AAAN;AAAA,AAAA,AAAA,AAAAO,AAAMP;AAAN,AAAA,AAAAQ,AAAA,AAAAC,AAAAF;AAAAA,AAAA,AAAAG,AAAAH;AAAAI,AAAA,AAAAF,AAAAF;AAAAA,AAAA,AAAAG,AAAAH;AAAAK,AAAA,AAAAH,AAAAF;AAAAA,AAAA,AAAAG,AAAAH;AAAAM,AAAA,AAAAJ,AAAAF;AAAAA,AAAA,AAAAG,AAAAH;AAAA,AAAA,AAAAO,AAAA;AAAA,AAAA,AAAAA,AAAAN,AAAAG,AAAAC,AAAAC,AAAAN;;;AAAA,AAKA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKwB;AAGL,AAAA,AAAMC,AAAwBd;AAA9B,AACE,AAAAe,AAAI,AAAAC,AAAyB,AAACC,AAAWjB;AAArC,AAAA,AAAAgB,AAAAA,AAACH,AAAAA,AAAAA;;AAAL,AAAA,AAAAE;AAAAA;;AACI,AAACG,AAAWlB","names":["var_args","args__4742__auto__","len__4736__auto__","i__4737__auto__","argseq__4743__auto__","cljs.core/IndexedSeq","camel-snake-kebab.internals.misc/convert-case","p__79765","map__79766","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","seq79756","G__79757","cljs.core/first","cljs.core/next","G__79758","G__79759","G__79760","self__4723__auto__","first-fn","rest-fn","sep","s","separator","camel-snake-kebab.internals.string-separator/generic-separator","vec__79768","seq__79769","cljs.core/seq","first__79770","first","rest","camel-snake-kebab.internals.string-separator/split","clojure.string.join","cljs.core/cons","cljs.core.map","camel-snake-kebab.internals.misc/upper-case-http-headers","camel-snake-kebab.internals.misc/capitalize-http-header","or__4126__auto__","G__79777","clojure.string/upper-case","clojure.string/capitalize"],"sourcesContent":["(ns camel-snake-kebab.internals.misc\n  (:require [camel-snake-kebab.internals.string-separator :refer [split generic-separator]]\n            [clojure.string :refer [join upper-case capitalize]]))\n\n(defn convert-case [first-fn rest-fn sep s & {:keys [separator]\n                                              :or   {separator generic-separator}}]\n  (let [[first & rest] (split separator s)]\n    (join sep (cons (first-fn first) (map rest-fn rest)))))\n\n(def upper-case-http-headers\n  #{\"CSP\" \"ATT\" \"WAP\" \"IP\" \"HTTP\" \"CPU\" \"DNT\" \"SSL\" \"UA\" \"TE\" \"WWW\" \"XSS\" \"MD5\"})\n\n(defn capitalize-http-header [s]\n  (or (upper-case-http-headers (upper-case s))\n      (capitalize s)))\n"]}