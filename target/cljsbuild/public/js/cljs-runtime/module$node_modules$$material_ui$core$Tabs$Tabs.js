shadow$provide.module$node_modules$$material_ui$core$Tabs$Tabs=function(global,require,module,exports){global=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard");var _interopRequireDefault=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports.default=exports.styles=void 0;var _extends2=_interopRequireDefault(require("module$node_modules$$babel$runtime$helpers$extends")),_objectWithoutProperties2=
_interopRequireDefault(require("module$node_modules$$babel$runtime$helpers$objectWithoutProperties")),_defineProperty2=_interopRequireDefault(require("module$node_modules$$babel$runtime$helpers$defineProperty")),React=global(require("module$node_modules$react$index")),_reactIs=require("module$node_modules$react_is$index");global=_interopRequireDefault(require("module$node_modules$prop_types$index"));var _clsx=_interopRequireDefault(require("module$node_modules$clsx$dist$clsx"));module=require("module$node_modules$$material_ui$utils$index");
var _debounce=_interopRequireDefault(require("module$node_modules$$material_ui$core$utils$debounce")),_ownerWindow=_interopRequireDefault(require("module$node_modules$$material_ui$core$utils$ownerWindow")),_scrollLeft=require("module$node_modules$$material_ui$core$utils$scrollLeft"),_animate=_interopRequireDefault(require("module$node_modules$$material_ui$core$internal$animate")),_ScrollbarSize=_interopRequireDefault(require("module$node_modules$$material_ui$core$Tabs$ScrollbarSize")),_withStyles=
_interopRequireDefault(require("module$node_modules$$material_ui$core$styles$withStyles")),_TabIndicator=_interopRequireDefault(require("module$node_modules$$material_ui$core$Tabs$TabIndicator")),_TabScrollButton=_interopRequireDefault(require("module$node_modules$$material_ui$core$TabScrollButton$index")),_useEventCallback=_interopRequireDefault(require("module$node_modules$$material_ui$core$utils$useEventCallback")),_useTheme=_interopRequireDefault(require("module$node_modules$$material_ui$core$styles$useTheme"));
require=function(theme){return{root:{overflow:"hidden",minHeight:48,WebkitOverflowScrolling:"touch",display:"flex"},vertical:{flexDirection:"column"},flexContainer:{display:"flex"},flexContainerVertical:{flexDirection:"column"},centered:{justifyContent:"center"},scroller:{position:"relative",display:"inline-block",flex:"1 1 auto",whiteSpace:"nowrap"},fixed:{overflowX:"hidden",width:"100%"},scrollable:{overflowX:"scroll",scrollbarWidth:"none","\x26::-webkit-scrollbar":{display:"none"}},scrollButtons:{},
scrollButtonsDesktop:(0,_defineProperty2.default)({},theme.breakpoints.down("xs"),{display:"none"}),indicator:{}}};exports.styles=require;_interopRequireDefault=React.forwardRef(function(props,ref){var ariaLabel=props["aria-label"],ariaLabelledBy=props["aria-labelledby"],action=props.action,_props$centered=props.centered;_props$centered=void 0===_props$centered?!1:_props$centered;var childrenProp=props.children,classes=props.classes,className=props.className,_props$component=props.component;_props$component=
void 0===_props$component?"div":_props$component;var _props$indicatorColor=props.indicatorColor;_props$indicatorColor=void 0===_props$indicatorColor?"secondary":_props$indicatorColor;var onChange=props.onChange,_props$orientation=props.orientation,orientation=void 0===_props$orientation?"horizontal":_props$orientation;_props$orientation=props.ScrollButtonComponent;var ScrollButtonComponent=void 0===_props$orientation?_TabScrollButton.default:_props$orientation;_props$orientation=props.scrollButtons;
var scrollButtons=void 0===_props$orientation?"auto":_props$orientation,selectionFollowsFocus=props.selectionFollowsFocus;_props$orientation=props.TabIndicatorProps;_props$orientation=void 0===_props$orientation?{}:_props$orientation;var TabScrollButtonProps=props.TabScrollButtonProps,_props$textColor=props.textColor,textColor=void 0===_props$textColor?"inherit":_props$textColor,value=props.value;_props$textColor=props.variant;var variant=void 0===_props$textColor?"standard":_props$textColor;props=
(0,_objectWithoutProperties2.default)(props,"aria-label aria-labelledby action centered children classes className component indicatorColor onChange orientation ScrollButtonComponent scrollButtons selectionFollowsFocus TabIndicatorProps TabScrollButtonProps textColor value variant".split(" "));var theme=(0,_useTheme.default)(),scrollable="scrollable"===variant,isRtl="rtl"===theme.direction,vertical="vertical"===orientation,scrollStart=vertical?"scrollTop":"scrollLeft",start=vertical?"top":"left",
end=vertical?"bottom":"right",clientSize=vertical?"clientHeight":"clientWidth",size=vertical?"height":"width";_props$centered&&scrollable&&console.error('Material-UI: You can not use the `centered\x3d{true}` and `variant\x3d"scrollable"` properties at the same time on a `Tabs` component.');_props$textColor=React.useState(!1);var mounted=_props$textColor[0],setMounted=_props$textColor[1];_props$textColor=React.useState({});var indicatorStyle=_props$textColor[0],setIndicatorStyle=_props$textColor[1];
_props$textColor=React.useState({start:!1,end:!1});var displayScroll=_props$textColor[0],setDisplayScroll=_props$textColor[1],_React$useState4=React.useState({overflow:"hidden",marginBottom:null});_props$textColor=_React$useState4[0];var setScrollerStyle=_React$useState4[1],valueToIndex=new Map,tabsRef=React.useRef(null),tabListRef=React.useRef(null),getTabsMeta=function(){var tabsNode=tabsRef.current;if(tabsNode){var tabsMeta=tabsNode.getBoundingClientRect();tabsMeta={clientWidth:tabsNode.clientWidth,
scrollLeft:tabsNode.scrollLeft,scrollTop:tabsNode.scrollTop,scrollLeftNormalized:(0,_scrollLeft.getNormalizedScrollLeft)(tabsNode,theme.direction),scrollWidth:tabsNode.scrollWidth,top:tabsMeta.top,bottom:tabsMeta.bottom,left:tabsMeta.left,right:tabsMeta.right}}var tabMeta;tabsNode&&!1!==value&&(tabsNode=tabListRef.current.children,0<tabsNode.length&&((tabMeta=tabsNode[valueToIndex.get(value)])||console.error(["Material-UI: The value provided to the Tabs component is invalid.","None of the Tabs' children match with `".concat(value,
"`."),valueToIndex.keys?"You can provide one of the following values: ".concat(Array.from(valueToIndex.keys()).join(", "),"."):null].join("\n")),tabMeta=tabMeta?tabMeta.getBoundingClientRect():null));return{tabsMeta,tabMeta}},updateIndicatorState=(0,_useEventCallback.default)(function(){var _newIndicatorStyle,_getTabsMeta=getTabsMeta(),tabsMeta=_getTabsMeta.tabsMeta;_getTabsMeta=_getTabsMeta.tabMeta;var startValue=0;_getTabsMeta&&tabsMeta&&(startValue=vertical?_getTabsMeta.top-tabsMeta.top+tabsMeta.scrollTop:
_getTabsMeta.left-tabsMeta.left+(isRtl?tabsMeta.scrollLeftNormalized+tabsMeta.clientWidth-tabsMeta.scrollWidth:tabsMeta.scrollLeft));tabsMeta=(_newIndicatorStyle={},(0,_defineProperty2.default)(_newIndicatorStyle,start,startValue),(0,_defineProperty2.default)(_newIndicatorStyle,size,_getTabsMeta?_getTabsMeta[size]:0),_newIndicatorStyle);isNaN(indicatorStyle[start])||isNaN(indicatorStyle[size])?setIndicatorStyle(tabsMeta):(_newIndicatorStyle=Math.abs(indicatorStyle[size]-tabsMeta[size]),(1<=Math.abs(indicatorStyle[start]-
tabsMeta[start])||1<=_newIndicatorStyle)&&setIndicatorStyle(tabsMeta))}),scroll=function(scrollValue){(0,_animate.default)(scrollStart,tabsRef.current,scrollValue)},moveTabsScroll=function(delta){var scrollValue=tabsRef.current[scrollStart];vertical?scrollValue+=delta:(scrollValue+=delta*(isRtl?-1:1),scrollValue*=isRtl&&"reverse"===(0,_scrollLeft.detectScrollType)()?-1:1);scroll(scrollValue)},handleStartScrollClick=function(){moveTabsScroll(-tabsRef.current[clientSize])},handleEndScrollClick=function(){moveTabsScroll(tabsRef.current[clientSize])},
handleScrollbarSizeChange=React.useCallback(function(scrollbarHeight){setScrollerStyle({overflow:null,marginBottom:-scrollbarHeight})},[]),scrollSelectedIntoView=(0,_useEventCallback.default)(function(){var _getTabsMeta2=getTabsMeta(),tabsMeta=_getTabsMeta2.tabsMeta;(_getTabsMeta2=_getTabsMeta2.tabMeta)&&tabsMeta&&(_getTabsMeta2[start]<tabsMeta[start]?scroll(tabsMeta[scrollStart]+(_getTabsMeta2[start]-tabsMeta[start])):_getTabsMeta2[end]>tabsMeta[end]&&scroll(tabsMeta[scrollStart]+(_getTabsMeta2[end]-
tabsMeta[end])))}),updateScrollButtonState=(0,_useEventCallback.default)(function(){if(scrollable&&"off"!==scrollButtons){var _tabsRef$current=tabsRef.current,scrollTop=_tabsRef$current.scrollTop,scrollHeight=_tabsRef$current.scrollHeight,clientHeight=_tabsRef$current.clientHeight,scrollWidth=_tabsRef$current.scrollWidth,clientWidth=_tabsRef$current.clientWidth;vertical?(_tabsRef$current=1<scrollTop,scrollWidth=scrollTop<scrollHeight-clientHeight-1):(scrollTop=(0,_scrollLeft.getNormalizedScrollLeft)(tabsRef.current,
theme.direction),_tabsRef$current=isRtl?scrollTop<scrollWidth-clientWidth-1:1<scrollTop,scrollWidth=isRtl?1<scrollTop:scrollTop<scrollWidth-clientWidth-1);_tabsRef$current===displayScroll.start&&scrollWidth===displayScroll.end||setDisplayScroll({start:_tabsRef$current,end:scrollWidth})}});React.useEffect(function(){var handleResize=(0,_debounce.default)(function(){updateIndicatorState();updateScrollButtonState()}),win=(0,_ownerWindow.default)(tabsRef.current);win.addEventListener("resize",handleResize);
return function(){handleResize.clear();win.removeEventListener("resize",handleResize)}},[updateIndicatorState,updateScrollButtonState]);var handleTabsScroll=React.useCallback((0,_debounce.default)(function(){updateScrollButtonState()}));React.useEffect(function(){return function(){handleTabsScroll.clear()}},[handleTabsScroll]);React.useEffect(function(){setMounted(!0)},[]);React.useEffect(function(){updateIndicatorState();updateScrollButtonState()});React.useEffect(function(){scrollSelectedIntoView()},
[scrollSelectedIntoView,indicatorStyle]);React.useImperativeHandle(action,function(){return{updateIndicator:updateIndicatorState,updateScrollButtons:updateScrollButtonState}},[updateIndicatorState,updateScrollButtonState]);var indicator=React.createElement(_TabIndicator.default,(0,_extends2.default)({className:classes.indicator,orientation,color:_props$indicatorColor},_props$orientation,{style:(0,_extends2.default)({},indicatorStyle,_props$orientation.style)})),childIndex=0;action=React.Children.map(childrenProp,
function(child){if(!React.isValidElement(child))return null;(0,_reactIs.isFragment)(child)&&console.error("Material-UI: The Tabs component doesn't accept a Fragment as a child.\nConsider providing an array instead.");var childValue=void 0===child.props.value?childIndex:child.props.value;valueToIndex.set(childValue,childIndex);var selected=childValue===value;childIndex+=1;return React.cloneElement(child,{fullWidth:"fullWidth"===variant,indicator:selected&&!mounted&&indicator,selected,selectionFollowsFocus,
onChange,textColor,value:childValue})});childrenProp=function(){var conditionalElements={};conditionalElements.scrollbarSizeListener=scrollable?React.createElement(_ScrollbarSize.default,{className:classes.scrollable,onChange:handleScrollbarSizeChange}):null;var scrollButtonsActive=displayScroll.start||displayScroll.end;scrollButtonsActive=scrollable&&("auto"===scrollButtons&&scrollButtonsActive||"desktop"===scrollButtons||"on"===scrollButtons);conditionalElements.scrollButtonStart=scrollButtonsActive?
React.createElement(ScrollButtonComponent,(0,_extends2.default)({orientation,direction:isRtl?"right":"left",onClick:handleStartScrollClick,disabled:!displayScroll.start,className:(0,_clsx.default)(classes.scrollButtons,"on"!==scrollButtons&&classes.scrollButtonsDesktop)},TabScrollButtonProps)):null;conditionalElements.scrollButtonEnd=scrollButtonsActive?React.createElement(ScrollButtonComponent,(0,_extends2.default)({orientation,direction:isRtl?"left":"right",onClick:handleEndScrollClick,disabled:!displayScroll.end,
className:(0,_clsx.default)(classes.scrollButtons,"on"!==scrollButtons&&classes.scrollButtonsDesktop)},TabScrollButtonProps)):null;return conditionalElements}();return React.createElement(_props$component,(0,_extends2.default)({className:(0,_clsx.default)(classes.root,className,vertical&&classes.vertical),ref},props),childrenProp.scrollButtonStart,childrenProp.scrollbarSizeListener,React.createElement("div",{className:(0,_clsx.default)(classes.scroller,scrollable?classes.scrollable:classes.fixed),
style:_props$textColor,ref:tabsRef,onScroll:handleTabsScroll},React.createElement("div",{"aria-label":ariaLabel,"aria-labelledby":ariaLabelledBy,className:(0,_clsx.default)(classes.flexContainer,vertical&&classes.flexContainerVertical,_props$centered&&!scrollable&&classes.centered),onKeyDown:function(event){var target=event.target;if("tab"===target.getAttribute("role")){var newFocusTarget=null,previousItemKey="vertical"!==orientation?"ArrowLeft":"ArrowUp",nextItemKey="vertical"!==orientation?"ArrowRight":
"ArrowDown";"vertical"!==orientation&&"rtl"===theme.direction&&(previousItemKey="ArrowRight",nextItemKey="ArrowLeft");switch(event.key){case previousItemKey:newFocusTarget=target.previousElementSibling||tabListRef.current.lastChild;break;case nextItemKey:newFocusTarget=target.nextElementSibling||tabListRef.current.firstChild;break;case "Home":newFocusTarget=tabListRef.current.firstChild;break;case "End":newFocusTarget=tabListRef.current.lastChild}null!==newFocusTarget&&(newFocusTarget.focus(),event.preventDefault())}},
ref:tabListRef,role:"tablist"},action),mounted&&indicator),childrenProp.scrollButtonEnd)});_interopRequireDefault.propTypes={action:module.refType,"aria-label":global.default.string,"aria-labelledby":global.default.string,centered:global.default.bool,children:global.default.node,classes:global.default.object,className:global.default.string,component:global.default.elementType,indicatorColor:global.default.oneOf(["primary","secondary"]),onChange:global.default.func,orientation:global.default.oneOf(["horizontal",
"vertical"]),ScrollButtonComponent:global.default.elementType,scrollButtons:global.default.oneOf(["auto","desktop","off","on"]),selectionFollowsFocus:global.default.bool,TabIndicatorProps:global.default.object,TabScrollButtonProps:global.default.object,textColor:global.default.oneOf(["inherit","primary","secondary"]),value:global.default.any,variant:global.default.oneOf(["fullWidth","scrollable","standard"])};require=(0,_withStyles.default)(require,{name:"MuiTabs"})(_interopRequireDefault);exports.default=
require}
//# sourceMappingURL=module$node_modules$$material_ui$core$Tabs$Tabs.js.map
