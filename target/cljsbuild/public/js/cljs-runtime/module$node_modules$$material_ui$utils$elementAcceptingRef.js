shadow$provide.module$node_modules$$material_ui$utils$elementAcceptingRef=function(global,require,module,exports){function acceptingRef(props,propName,componentName,location,propFullName){props=props[propName];propName=propFullName||propName;if(null==props)return null;var warningHint;propFullName=props.type;if(props="function"===typeof propFullName)propFullName=propFullName.prototype,props=!(void 0===propFullName?{}:propFullName).isReactComponent;props&&(warningHint="Did you accidentally use a plain function component for an element instead?");
return void 0!==warningHint?Error("Invalid ".concat(location," `").concat(propName,"` supplied to `").concat(componentName,"`. ")+"Expected an element that can hold a ref. ".concat(warningHint," ")+"For more information see https://material-ui.com/r/caveat-with-refs-guide"):null}module=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;global=module(require("module$node_modules$prop_types$index"));
require=module(require("module$node_modules$$material_ui$utils$chainPropTypes"));module=(0,require.default)(global.default.element,acceptingRef);module.isRequired=(0,require.default)(global.default.element.isRequired,acceptingRef);exports.default=module}
//# sourceMappingURL=module$node_modules$$material_ui$utils$elementAcceptingRef.js.map
