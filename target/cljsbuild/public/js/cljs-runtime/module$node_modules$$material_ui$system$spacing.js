shadow$provide.module$node_modules$$material_ui$system$spacing=function(global,require,module,exports){function createUnarySpacing(theme){var themeSpacing=theme.spacing||8;if("number"===typeof themeSpacing)return function(abs){"number"!==typeof abs&&console.error("Material-UI: Expected spacing argument to be a number, got ".concat(abs,"."));return themeSpacing*abs};if(Array.isArray(themeSpacing))return function(abs){abs>themeSpacing.length-1&&console.error(["Material-UI: The value provided (".concat(abs,
") overflows."),"The supported values are: ".concat(JSON.stringify(themeSpacing),"."),"".concat(abs," \x3e ").concat(themeSpacing.length-1,", you need to add the missing values.")].join("\n"));return themeSpacing[abs]};if("function"===typeof themeSpacing)return themeSpacing;console.error(["Material-UI: The `theme.spacing` value (".concat(themeSpacing,") is invalid."),"It should be a number, an array or a function."].join("\n"));return function(){}}function getStyleFromPropValue(cssProperties,transformer){return function(propValue){return cssProperties.reduce(function(acc,
cssProperty){if("string"===typeof propValue||null==propValue)var JSCompiler_inline_result=propValue;else JSCompiler_inline_result=transformer(Math.abs(propValue)),JSCompiler_inline_result=0<=propValue?JSCompiler_inline_result:"number"===typeof JSCompiler_inline_result?-JSCompiler_inline_result:"-".concat(JSCompiler_inline_result);acc[cssProperty]=JSCompiler_inline_result;return acc},{})}}function spacing(props){var transformer=createUnarySpacing(props.theme);return Object.keys(props).map(function(prop){if(-1===
spacingKeys.indexOf(prop))return null;var cssProperties=getCssProperties(prop);cssProperties=getStyleFromPropValue(cssProperties,transformer);prop=props[prop];return(0,_breakpoints.handleBreakpoints)(props,prop,cssProperties)}).reduce(_merge.default,{})}global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports.createUnarySpacing=createUnarySpacing;exports.default=void 0;var _slicedToArray2=global(require("module$node_modules$$babel$runtime$helpers$slicedToArray")),
_responsivePropType=global(require("module$node_modules$$material_ui$system$responsivePropType")),_breakpoints=require("module$node_modules$$material_ui$system$breakpoints"),_merge=global(require("module$node_modules$$material_ui$system$merge"));require=global(require("module$node_modules$$material_ui$system$memoize"));var properties={m:"margin",p:"padding"},directions={t:"Top",r:"Right",b:"Bottom",l:"Left",x:["Left","Right"],y:["Top","Bottom"]},aliases={marginX:"mx",marginY:"my",paddingX:"px",paddingY:"py"},
getCssProperties=(0,require.default)(function(prop){if(2<prop.length)if(aliases[prop])prop=aliases[prop];else return[prop];prop=prop.split("");prop=(0,_slicedToArray2.default)(prop,2);var property=properties[prop[0]];prop=directions[prop[1]]||"";return Array.isArray(prop)?prop.map(function(dir){return property+dir}):[property+prop]}),spacingKeys="m mt mr mb ml mx my p pt pr pb pl px py margin marginTop marginRight marginBottom marginLeft marginX marginY padding paddingTop paddingRight paddingBottom paddingLeft paddingX paddingY".split(" ");
spacing.propTypes=spacingKeys.reduce(function(obj,key){obj[key]=_responsivePropType.default;return obj},{});spacing.filterProps=spacingKeys;exports.default=spacing}
//# sourceMappingURL=module$node_modules$$material_ui$system$spacing.js.map
