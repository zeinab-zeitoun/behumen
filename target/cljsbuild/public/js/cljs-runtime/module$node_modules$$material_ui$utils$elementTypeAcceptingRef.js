shadow$provide.module$node_modules$$material_ui$utils$elementTypeAcceptingRef=function(global,require,module,exports){global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");module=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard");Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;module=module(require("module$node_modules$prop_types$index"));require=global(require("module$node_modules$$material_ui$utils$chainPropTypes"));
require=(0,require.default)(module.elementType,function(props,propName,componentName,location,propFullName){props=props[propName];propName=propFullName||propName;if(null==props)return null;var warningHint;if(propFullName="function"===typeof props)props=props.prototype,propFullName=!(void 0===props?{}:props).isReactComponent;propFullName&&(warningHint="Did you accidentally provide a plain function component instead?");return void 0!==warningHint?Error("Invalid ".concat(location," `").concat(propName,
"` supplied to `").concat(componentName,"`. ")+"Expected an element type that can hold a ref. ".concat(warningHint," ")+"For more information see https://material-ui.com/r/caveat-with-refs-guide"):null});exports.default=require}
//# sourceMappingURL=module$node_modules$$material_ui$utils$elementTypeAcceptingRef.js.map
