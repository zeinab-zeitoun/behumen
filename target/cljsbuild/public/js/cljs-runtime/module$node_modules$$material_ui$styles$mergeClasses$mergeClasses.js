shadow$provide.module$node_modules$$material_ui$styles$mergeClasses$mergeClasses=function(global,require,module,exports){global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports.default=function(){var options=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},baseClasses=options.baseClasses,newClasses=options.newClasses,Component=options.Component;if(!newClasses)return baseClasses;var nextClasses=(0,_extends2.default)({},
baseClasses);if("string"===typeof newClasses)return console.error(["Material-UI: The value `".concat(newClasses,"` ")+"provided to the classes prop of ".concat((0,_utils.getDisplayName)(Component)," is incorrect."),"You might want to use the className prop instead."].join("\n")),baseClasses;Object.keys(newClasses).forEach(function(key){!baseClasses[key]&&newClasses[key]&&console.error(["Material-UI: The key `".concat(key,"` ")+"provided to the classes prop is not implemented in ".concat((0,_utils.getDisplayName)(Component),
"."),"You can only override one of the following: ".concat(Object.keys(baseClasses).join(","),".")].join("\n"));newClasses[key]&&"string"!==typeof newClasses[key]&&console.error(["Material-UI: The key `".concat(key,"` ")+"provided to the classes prop is not valid for ".concat((0,_utils.getDisplayName)(Component),"."),"You need to provide a non empty string instead of: ".concat(newClasses[key],".")].join("\n"));newClasses[key]&&(nextClasses[key]="".concat(baseClasses[key]," ").concat(newClasses[key]))});
return nextClasses};var _extends2=global(require("module$node_modules$$babel$runtime$helpers$extends")),_utils=require("module$node_modules$$material_ui$utils$index")}
//# sourceMappingURL=module$node_modules$$material_ui$styles$mergeClasses$mergeClasses.js.map
