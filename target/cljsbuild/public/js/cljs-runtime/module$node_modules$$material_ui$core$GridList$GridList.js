shadow$provide.module$node_modules$$material_ui$core$GridList$GridList=function(global,require,module,exports){global=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard");module=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports.default=exports.styles=void 0;var _extends2=module(require("module$node_modules$$babel$runtime$helpers$extends")),_objectWithoutProperties2=module(require("module$node_modules$$babel$runtime$helpers$objectWithoutProperties")),
React=global(require("module$node_modules$react$index")),_reactIs=require("module$node_modules$react_is$index");global=module(require("module$node_modules$prop_types$index"));var _clsx=module(require("module$node_modules$clsx$dist$clsx"));require=module(require("module$node_modules$$material_ui$core$styles$withStyles"));module={root:{display:"flex",flexWrap:"wrap",overflowY:"auto",listStyle:"none",padding:0,WebkitOverflowScrolling:"touch"}};exports.styles=module;var GridList=React.forwardRef(function(props,
ref){var _props$cellHeight=props.cellHeight,cellHeight=void 0===_props$cellHeight?180:_props$cellHeight;_props$cellHeight=props.children;var classes=props.classes,className=props.className,_props$cols=props.cols,cols=void 0===_props$cols?2:_props$cols;_props$cols=props.component;_props$cols=void 0===_props$cols?"ul":_props$cols;var _props$spacing=props.spacing,spacing=void 0===_props$spacing?4:_props$spacing;_props$spacing=props.style;props=(0,_objectWithoutProperties2.default)(props,"cellHeight children classes className cols component spacing style".split(" "));
return React.createElement(_props$cols,(0,_extends2.default)({className:(0,_clsx.default)(classes.root,className),ref,style:(0,_extends2.default)({margin:-spacing/2},_props$spacing)},props),React.Children.map(_props$cellHeight,function(child){if(!React.isValidElement(child))return null;(0,_reactIs.isFragment)(child)&&console.error("Material-UI: The GridList component doesn't accept a Fragment as a child.\nConsider providing an array instead.");var childCols=child.props.cols||1,childRows=child.props.rows||
1;return React.cloneElement(child,{style:(0,_extends2.default)({width:"".concat(100/cols*childCols,"%"),height:"auto"===cellHeight?"auto":cellHeight*childRows+spacing,padding:spacing/2},child.props.style)})}))});GridList.propTypes={cellHeight:global.default.oneOfType([global.default.number,global.default.oneOf(["auto"])]),children:global.default.node.isRequired,classes:global.default.object.isRequired,className:global.default.string,cols:global.default.number,component:global.default.elementType,
spacing:global.default.number,style:global.default.object};require=(0,require.default)(module,{name:"MuiGridList"})(GridList);exports.default=require}
//# sourceMappingURL=module$node_modules$$material_ui$core$GridList$GridList.js.map
