{
"version":3,
"file":"module$node_modules$date_fns$esm$differenceInCalendarDays$index.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,gEAAA,CAAoF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAc5HC,QAASA,uBAAsB,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAAC,WAAP,CAAwBD,GAAxB,CAA8B,CAAE,UAAWA,GAAb,CAAvC,CAXrCE,MAAAC,eAAA,CAAsBL,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CM,MAAO,CAAA,CADoC,CAA7C,CAGAN,QAAA,CAAQ,SAAR,CAAA,CA8CAO,QAAiC,CAACC,aAAD,CAAgBC,cAAhB,CAAgC,CAC/D,CAAC,CAAA,CAAGC,OAAA,CAAQ,SAAR,CAAJ,EAAwB,CAAxB,CAA2BC,SAA3B,CACA,KAAIC,eAAiB,CAAC,CAAA,CAAGC,OAAA,CAAQ,SAAR,CAAJ,EAAwBL,aAAxB,CAArB,CACIM,gBAAkB,CAAC,CAAA,CAAGD,OAAA,CAAQ,SAAR,CAAJ,EAAwBJ,cAAxB,CAClBM,eAAAA,CAAgBH,cAAAI,QAAA,EAAhBD;AAA2C,CAAC,CAAA,CAAGE,MAAA,CAAO,SAAP,CAAJ,EAAuBL,cAAvB,CAC3CM,gBAAAA,CAAiBJ,eAAAE,QAAA,EAAjBE,CAA6C,CAAC,CAAA,CAAGD,MAAA,CAAO,SAAP,CAAJ,EAAuBH,eAAvB,CAIjD,OAAOK,KAAAC,MAAA,EAAYL,cAAZ,CAA4BG,eAA5B,EAA8CG,mBAA9C,CATwD,CA5CjE,KAAIJ,OAAShB,sBAAA,CAAuBH,OAAA,CAAQ,6EAAR,CAAvB,CAAb,CAEIe,QAAUZ,sBAAA,CAAuBH,OAAA,CAAQ,mDAAR,CAAvB,CAFd,CAIIY,QAAUT,sBAAA,CAAuBH,OAAA,CAAQ,0DAAR,CAAvB,CAJd;AAQIuB,oBAAsB,KAhBkG;",
"sources":["node_modules/date-fns/esm/differenceInCalendarDays/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$date_fns$esm$differenceInCalendarDays$index\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = differenceInCalendarDays;\n\nvar _index = _interopRequireDefault(require(\"../_lib/getTimezoneOffsetInMilliseconds/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../startOfDay/index.js\"));\n\nvar _index3 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar MILLISECONDS_IN_DAY = 86400000;\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar days\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\n\nfunction differenceInCalendarDays(dirtyDateLeft, dirtyDateRight) {\n  (0, _index3[\"default\"])(2, arguments);\n  var startOfDayLeft = (0, _index2[\"default\"])(dirtyDateLeft);\n  var startOfDayRight = (0, _index2[\"default\"])(dirtyDateRight);\n  var timestampLeft = startOfDayLeft.getTime() - (0, _index[\"default\"])(startOfDayLeft);\n  var timestampRight = startOfDayRight.getTime() - (0, _index[\"default\"])(startOfDayRight); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a day is not constant\n  // (e.g. it's different in the day of the daylight saving time clock shift)\n\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY);\n}\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","obj","__esModule","Object","defineProperty","value","differenceInCalendarDays","dirtyDateLeft","dirtyDateRight","_index3","arguments","startOfDayLeft","_index2","startOfDayRight","timestampLeft","getTime","_index","timestampRight","Math","round","MILLISECONDS_IN_DAY"]
}
