{
"version":3,
"file":"module$node_modules$date_fns$esm$addDays$index.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,+CAAA,CAAmE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAc3GC,QAASA,uBAAsB,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAAC,WAAP,CAAwBD,GAAxB,CAA8B,CAAE,UAAWA,GAAb,CAAvC,CAXrCE,MAAAC,eAAA,CAAsBL,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CM,MAAO,CAAA,CADoC,CAA7C,CAGAN,QAAA,CAAQ,SAAR,CAAA,CAgCAO,QAAgB,CAACC,SAAD,CAAYC,WAAZ,CAAyB,CACvC,CAAC,CAAA,CAAGC,OAAA,CAAQ,SAAR,CAAJ,EAAwB,CAAxB,CAA2BC,SAA3B,CACA,KAAIC,KAAO,CAAC,CAAA,CAAGC,OAAA,CAAQ,SAAR,CAAJ,EAAwBL,SAAxB,CAAX,CACIM,OAAS,CAAC,CAAA,CAAGC,MAAA,CAAO,SAAP,CAAJ,EAAuBN,WAAvB,CAEb,IAAIO,KAAA,CAAMF,MAAN,CAAJ,CACE,MAAO,KAAIG,IAAJ,CAASC,GAAT,CAGT,IAAI,CAACJ,MAAL,CAEE,MAAOF,KAGTA,KAAAO,QAAA,CAAaP,IAAAQ,QAAA,EAAb;AAA8BN,MAA9B,CACA,OAAOF,KAfgC,CA9BzC,KAAIG,OAASd,sBAAA,CAAuBH,OAAA,CAAQ,uDAAR,CAAvB,CAAb,CAEIe,QAAUZ,sBAAA,CAAuBH,OAAA,CAAQ,+CAAR,CAAvB,CAFd,CAIIY,QAAUT,sBAAA,CAAuBH,OAAA,CAAQ,0DAAR,CAAvB,CAZ6F;",
"sources":["node_modules/date-fns/esm/addDays/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$date_fns$esm$addDays$index\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = addDays;\n\nvar _index = _interopRequireDefault(require(\"../_lib/toInteger/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../toDate/index.js\"));\n\nvar _index3 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} - the new date with the days added\n * @throws {TypeError} - 2 arguments required\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\nfunction addDays(dirtyDate, dirtyAmount) {\n  (0, _index3[\"default\"])(2, arguments);\n  var date = (0, _index2[\"default\"])(dirtyDate);\n  var amount = (0, _index[\"default\"])(dirtyAmount);\n\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n\n  if (!amount) {\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n\n  date.setDate(date.getDate() + amount);\n  return date;\n}\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","obj","__esModule","Object","defineProperty","value","addDays","dirtyDate","dirtyAmount","_index3","arguments","date","_index2","amount","_index","isNaN","Date","NaN","setDate","getDate"]
}
