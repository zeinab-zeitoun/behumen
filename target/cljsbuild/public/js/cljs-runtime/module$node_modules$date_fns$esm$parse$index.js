shadow$provide.module$node_modules$date_fns$esm$parse$index=function(global,require,module,exports){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj}}function dateToSystemTimezone(date,flags){if(flags.timestampIsSet)return date;flags=new Date(0);flags.setFullYear(date.getUTCFullYear(),date.getUTCMonth(),date.getUTCDate());flags.setHours(date.getUTCHours(),date.getUTCMinutes(),date.getUTCSeconds(),date.getUTCMilliseconds());return flags}Object.defineProperty(exports,
"__esModule",{value:!0});exports["default"]=function(dirtyDateString,dirtyFormatString,dirtyReferenceDate,dirtyOptions){(0,_index10["default"])(3,arguments);var dateString=String(dirtyDateString),formatString=String(dirtyFormatString),options=dirtyOptions||{},locale=options.locale||_index["default"];if(!locale.match)throw new RangeError("locale must contain match property");var localeFirstWeekContainsDate=locale.options&&locale.options.firstWeekContainsDate;localeFirstWeekContainsDate=null==localeFirstWeekContainsDate?
1:(0,_index8["default"])(localeFirstWeekContainsDate);localeFirstWeekContainsDate=null==options.firstWeekContainsDate?localeFirstWeekContainsDate:(0,_index8["default"])(options.firstWeekContainsDate);if(!(1<=localeFirstWeekContainsDate&&7>=localeFirstWeekContainsDate))throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");var localeWeekStartsOn=locale.options&&locale.options.weekStartsOn;localeWeekStartsOn=null==localeWeekStartsOn?0:(0,_index8["default"])(localeWeekStartsOn);
localeWeekStartsOn=null==options.weekStartsOn?localeWeekStartsOn:(0,_index8["default"])(options.weekStartsOn);if(!(0<=localeWeekStartsOn&&6>=localeWeekStartsOn))throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");if(""===formatString)return""===dateString?(0,_index3["default"])(dirtyReferenceDate):new Date(NaN);var subFnOptions={firstWeekContainsDate:localeFirstWeekContainsDate,weekStartsOn:localeWeekStartsOn,locale},setters=[{priority:TIMEZONE_UNIT_PRIORITY,subPriority:-1,set:dateToSystemTimezone,
index:0}];localeWeekStartsOn=formatString.match(longFormattingTokensRegExp).map(function(substring){var firstCharacter=substring[0];return"p"===firstCharacter||"P"===firstCharacter?(0,_index5["default"][firstCharacter])(substring,locale.formatLong,subFnOptions):substring}).join("").match(formattingTokensRegExp);var usedTokens=[];for(localeFirstWeekContainsDate=0;localeFirstWeekContainsDate<localeWeekStartsOn.length;localeFirstWeekContainsDate++){var token=localeWeekStartsOn[localeFirstWeekContainsDate];
!options.useAdditionalWeekYearTokens&&(0,_index7.isProtectedWeekYearToken)(token)&&(0,_index7.throwProtectedError)(token,formatString,dirtyDateString);!options.useAdditionalDayOfYearTokens&&(0,_index7.isProtectedDayOfYearToken)(token)&&(0,_index7.throwProtectedError)(token,formatString,dirtyDateString);var firstCharacter$jscomp$0=token[0],parser=_index9["default"][firstCharacter$jscomp$0];if(parser){var incompatibleTokens=parser.incompatibleTokens;if(Array.isArray(incompatibleTokens)){for(var incompatibleToken=
void 0,_i=0;_i<usedTokens.length;_i++){var usedToken=usedTokens[_i].token;if(-1!==incompatibleTokens.indexOf(usedToken)||usedToken===firstCharacter$jscomp$0){incompatibleToken=usedTokens[_i];break}}if(incompatibleToken)throw new RangeError("The format string mustn't contain `".concat(incompatibleToken.fullToken,"` and `").concat(token,"` at the same time"));}else if("*"===parser.incompatibleTokens&&usedTokens.length)throw new RangeError("The format string mustn't contain `".concat(token,"` and any other token at the same time"));
usedTokens.push({token:firstCharacter$jscomp$0,fullToken:token});dateString=parser.parse(dateString,token,locale.match,subFnOptions);if(!dateString)return new Date(NaN);setters.push({priority:parser.priority,subPriority:parser.subPriority||0,set:parser.set,validate:parser.validate,value:dateString.value,index:setters.length});dateString=dateString.rest}else{if(firstCharacter$jscomp$0.match(unescapedLatinCharacterRegExp))throw new RangeError("Format string contains an unescaped latin alphabet character `"+
firstCharacter$jscomp$0+"`");"''"===token?token="'":"'"===firstCharacter$jscomp$0&&(token=token.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp,"'"));if(0===dateString.indexOf(token))dateString=dateString.slice(token.length);else return new Date(NaN)}}if(0<dateString.length&&notWhitespaceRegExp.test(dateString))return new Date(NaN);formatString=setters.map(function(setter){return setter.priority}).sort(function(a,b){return b-a}).filter(function(priority,index,array){return array.indexOf(priority)===
index}).map(function(priority){return setters.filter(function(setter){return setter.priority===priority}).sort(function(a,b){return b.subPriority-a.subPriority})}).map(function(setterArray){return setterArray[0]});options=(0,_index3["default"])(dirtyReferenceDate);if(isNaN(options))return new Date(NaN);options=(0,_index2["default"])(options,(0,_index6["default"])(options));dateString={};for(localeFirstWeekContainsDate=0;localeFirstWeekContainsDate<formatString.length;localeFirstWeekContainsDate++){localeWeekStartsOn=
formatString[localeFirstWeekContainsDate];if(localeWeekStartsOn.validate&&!localeWeekStartsOn.validate(options,localeWeekStartsOn.value,subFnOptions))return new Date(NaN);localeWeekStartsOn=localeWeekStartsOn.set(options,dateString,localeWeekStartsOn.value,subFnOptions);localeWeekStartsOn[0]?(options=localeWeekStartsOn[0],(0,_index4["default"])(dateString,localeWeekStartsOn[1])):options=localeWeekStartsOn}return options};var _index=_interopRequireDefault(require("module$node_modules$date_fns$esm$locale$en_US$index")),
_index2=_interopRequireDefault(require("module$node_modules$date_fns$esm$subMilliseconds$index")),_index3=_interopRequireDefault(require("module$node_modules$date_fns$esm$toDate$index")),_index4=_interopRequireDefault(require("module$node_modules$date_fns$esm$_lib$assign$index")),_index5=_interopRequireDefault(require("module$node_modules$date_fns$esm$_lib$format$longFormatters$index")),_index6=_interopRequireDefault(require("module$node_modules$date_fns$esm$_lib$getTimezoneOffsetInMilliseconds$index")),
_index7=require("module$node_modules$date_fns$esm$_lib$protectedTokens$index"),_index8=_interopRequireDefault(require("module$node_modules$date_fns$esm$_lib$toInteger$index")),_index9=_interopRequireDefault(require("module$node_modules$date_fns$esm$parse$_lib$parsers$index")),_index10=_interopRequireDefault(require("module$node_modules$date_fns$esm$_lib$requiredArgs$index")),TIMEZONE_UNIT_PRIORITY=10,formattingTokensRegExp=/[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g,longFormattingTokensRegExp=
/P+p+|P+|p+|''|'(''|[^'])+('|$)|./g,escapedStringRegExp=/^'([^]*?)'?$/,doubleQuoteRegExp=/''/g,notWhitespaceRegExp=/\S/,unescapedLatinCharacterRegExp=/[a-zA-Z]/}
//# sourceMappingURL=module$node_modules$date_fns$esm$parse$index.js.map
