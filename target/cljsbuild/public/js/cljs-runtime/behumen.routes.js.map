{"version":3,"sources":["behumen/routes.cljs"],"mappings":";AAOA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKA;AAGL,AAAKC,AACH,AAACC,AAAc,AAAAC,AAAA,AAAAC;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAD,AAAAA;;AAAA,AAAA,AAAAE,AAAA,AAAAC,AAAAH;AAAA,AAAA,AAAAE;AAAA,AAAA,AAAAF,AAAAE;AAAA,AAAA,AAAA,AAAAE,AAAAJ;AAAA,AAAAK,AA07EkC,AAAAyB,AAAA9B;AA17ElCM,AAAA,AAAAC,AAAAF;AAAAG,AAAA,AAAAC,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAI,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAJ;AAAA,AAAAK,AAAA,AAAAC,AAAAP,AAAAK;AAAA,AAAAG,AAAAF,AAAA,AAAA,AAAOY;AAAP,AAAAV,AAAAF,AAAA,AAAA,AAAWa;AAAX,AAAA,AAAA,AAAAV,AAAAN,AAAA,AACGe,AAAIC;;AADP,AAAA,AAAAd,AAAA;;;;AAAA;;;;;AAAA,AAAAK,AAAA,AAAAC,AAAAR,AAAA,AAAAS,AAAA,AAAAC,AAAAlB;;AAAA,AAAAe,AAAA,AAAAC,AAAAR,AAAA;;;AAAA,AAAAW,AAAA,AAAAC,AAAApB;AAAA,AAAAa,AAAAM,AAAA,AAAA,AAAOI;AAAP,AAAAV,AAAAM,AAAA,AAAA,AAAWK;AAAX,AAAA,AAAAH,AAAA,AAAA,AAAAJ,AAAA,AAAAK,AAAAtB,AACGuB,AAAIC;;;AADP;;;;AAAA,AAAA;;AAAA,AAAA,AAAAzB,AAAkBH;;AAGnC,AAAA,AAAM6B,AAAkBF;AAAxB,AACE,AAACG,AAAI9B,AAAO2B;;AAEd,AAAA,AAAMI,AAAmBC;AAAzB,AACE,AAAA,AAAO,AAACC,AAAqBhC,AAAc+B","names":["behumen.routes/routes","behumen.routes/reitit-routes","reitit.core.router","iter__4529__auto__","s__69518","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4527__auto__","size__4528__auto__","cljs.core/count","b__69520","cljs.core/chunk-buffer","i__69519","vec__69523","cljs.core/-nth","cljs.core.nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__69517","cljs.core/chunk-rest","vec__69526","cljs.core/first","cljs.core/cons","cljs.core/rest","url","route","behumen.routes/get-route-by-url","cljs.core.get","behumen.routes/get-route-by-name","page","reitit.core/match-by-name","cljs.core/chunk-first"],"sourcesContent":["(ns behumen.routes\n  (:require [reitit.core :as reitit]\n            [behumen.common :as common]\n            [behumen.views.home :as home]\n            [re-frame.core :as rf\n             :refer [dispatch reg-event-db subscribe]]))\n\n(def routes\n  {\"/\" {:type :landing-page :name :landing-page}})\n\n(def reitit-routes\n  (reitit/router (for [[url route] routes]\n                   [url route])))\n\n(defn get-route-by-url [url]\n  (get routes url))\n\n(defn get-route-by-name [page]\n  (:path (reitit/match-by-name reitit-routes page)))\n"]}