shadow$provide.module$node_modules$$material_ui$core$ButtonBase$ButtonBase=function(global,require,module,exports){module=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard");var _interopRequireDefault=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports.default=exports.styles=void 0;var _extends2=_interopRequireDefault(require("module$node_modules$$babel$runtime$helpers$extends")),_objectWithoutProperties2=
_interopRequireDefault(require("module$node_modules$$babel$runtime$helpers$objectWithoutProperties")),React=module(require("module$node_modules$react$index"));global=_interopRequireDefault(require("module$node_modules$prop_types$index"));var ReactDOM=module(require("module$node_modules$react_dom$index")),_clsx=_interopRequireDefault(require("module$node_modules$clsx$dist$clsx"));module=require("module$node_modules$$material_ui$utils$index");var _useForkRef=_interopRequireDefault(require("module$node_modules$$material_ui$core$utils$useForkRef")),
_useEventCallback=_interopRequireDefault(require("module$node_modules$$material_ui$core$utils$useEventCallback")),_withStyles=_interopRequireDefault(require("module$node_modules$$material_ui$core$styles$withStyles")),_useIsFocusVisible2=_interopRequireDefault(require("module$node_modules$$material_ui$core$utils$useIsFocusVisible")),_TouchRipple=_interopRequireDefault(require("module$node_modules$$material_ui$core$ButtonBase$TouchRipple"));require={root:{display:"inline-flex",alignItems:"center",justifyContent:"center",
position:"relative",WebkitTapHighlightColor:"transparent",backgroundColor:"transparent",outline:0,border:0,margin:0,borderRadius:0,padding:0,cursor:"pointer",userSelect:"none",verticalAlign:"middle","-moz-appearance":"none","-webkit-appearance":"none",textDecoration:"none",color:"inherit","\x26::-moz-focus-inner":{borderStyle:"none"},"\x26$disabled":{pointerEvents:"none",cursor:"default"},"@media print":{colorAdjust:"exact"}},disabled:{},focusVisible:{}};exports.styles=require;_interopRequireDefault=
React.forwardRef(function(props,ref){function useRippleHandler(rippleAction,eventCallback){var skipRippleAction=2<arguments.length&&void 0!==arguments[2]?arguments[2]:disableTouchRipple;return(0,_useEventCallback.default)(function(event){eventCallback&&eventCallback(event);if(!skipRippleAction&&rippleRef.current)rippleRef.current[rippleAction](event);return!0})}var action=props.action,buttonRefProp=props.buttonRef,_props$centerRipple=props.centerRipple;_props$centerRipple=void 0===_props$centerRipple?
!1:_props$centerRipple;var children=props.children,classes=props.classes,className=props.className,_props$component=props.component,component=void 0===_props$component?"button":_props$component;_props$component=props.disabled;var disabled=void 0===_props$component?!1:_props$component;_props$component=props.disableRipple;var disableRipple=void 0===_props$component?!1:_props$component;_props$component=props.disableTouchRipple;var disableTouchRipple=void 0===_props$component?!1:_props$component;_props$component=
props.focusRipple;var focusRipple=void 0===_props$component?!1:_props$component;_props$component=props.focusVisibleClassName;var onBlur=props.onBlur,onClick=props.onClick,onFocus=props.onFocus,onFocusVisible=props.onFocusVisible,onKeyDown=props.onKeyDown,onKeyUp=props.onKeyUp,onMouseDown=props.onMouseDown,onMouseLeave=props.onMouseLeave,onMouseUp=props.onMouseUp,onTouchEnd=props.onTouchEnd,onTouchMove=props.onTouchMove,onTouchStart=props.onTouchStart,onDragLeave=props.onDragLeave,_props$tabIndex=
props.tabIndex;_props$tabIndex=void 0===_props$tabIndex?0:_props$tabIndex;var TouchRippleProps=props.TouchRippleProps,_props$type=props.type;_props$type=void 0===_props$type?"button":_props$type;props=(0,_objectWithoutProperties2.default)(props,"action buttonRef centerRipple children classes className component disabled disableRipple disableTouchRipple focusRipple focusVisibleClassName onBlur onClick onFocus onFocusVisible onKeyDown onKeyUp onMouseDown onMouseLeave onMouseUp onTouchEnd onTouchMove onTouchStart onDragLeave tabIndex TouchRippleProps type".split(" "));
var buttonRef=React.useRef(null),rippleRef=React.useRef(null),_React$useState=React.useState(!1),focusVisible=_React$useState[0],setFocusVisible=_React$useState[1];disabled&&focusVisible&&setFocusVisible(!1);_React$useState=(0,_useIsFocusVisible2.default)();var isFocusVisible=_React$useState.isFocusVisible,onBlurVisible=_React$useState.onBlurVisible;_React$useState=_React$useState.ref;React.useImperativeHandle(action,function(){return{focusVisible:function(){setFocusVisible(!0);buttonRef.current.focus()}}},
[]);React.useEffect(function(){focusVisible&&focusRipple&&!disableRipple&&rippleRef.current.pulsate()},[disableRipple,focusRipple,focusVisible]);action=useRippleHandler("start",onMouseDown);onDragLeave=useRippleHandler("stop",onDragLeave);onMouseUp=useRippleHandler("stop",onMouseUp);onMouseDown=useRippleHandler("stop",function(event){focusVisible&&event.preventDefault();onMouseLeave&&onMouseLeave(event)});onTouchStart=useRippleHandler("start",onTouchStart);onTouchEnd=useRippleHandler("stop",onTouchEnd);
onTouchMove=useRippleHandler("stop",onTouchMove);var handleBlur=useRippleHandler("stop",function(event){focusVisible&&(onBlurVisible(event),setFocusVisible(!1));onBlur&&onBlur(event)},!1),handleFocus=(0,_useEventCallback.default)(function(event){buttonRef.current||(buttonRef.current=event.currentTarget);isFocusVisible(event)&&(setFocusVisible(!0),onFocusVisible&&onFocusVisible(event));onFocus&&onFocus(event)}),isNonNativeButton=function(){var button=ReactDOM.findDOMNode(buttonRef.current);return component&&
"button"!==component&&!("A"===button.tagName&&button.href)},keydownRef=React.useRef(!1),handleKeyDown=(0,_useEventCallback.default)(function(event){focusRipple&&!keydownRef.current&&focusVisible&&rippleRef.current&&" "===event.key&&(keydownRef.current=!0,event.persist(),rippleRef.current.stop(event,function(){rippleRef.current.start(event)}));event.target===event.currentTarget&&isNonNativeButton()&&" "===event.key&&event.preventDefault();onKeyDown&&onKeyDown(event);event.target===event.currentTarget&&
isNonNativeButton()&&"Enter"===event.key&&!disabled&&(event.preventDefault(),onClick&&onClick(event))}),handleKeyUp=(0,_useEventCallback.default)(function(event){focusRipple&&" "===event.key&&rippleRef.current&&focusVisible&&!event.defaultPrevented&&(keydownRef.current=!1,event.persist(),rippleRef.current.stop(event,function(){rippleRef.current.pulsate(event)}));onKeyUp&&onKeyUp(event);onClick&&event.target===event.currentTarget&&isNonNativeButton()&&" "===event.key&&!event.defaultPrevented&&onClick(event)}),
ComponentProp=component;"button"===ComponentProp&&props.href&&(ComponentProp="a");var buttonProps={};"button"===ComponentProp?(buttonProps.type=_props$type,buttonProps.disabled=disabled):("a"===ComponentProp&&props.href||(buttonProps.role="button"),buttonProps["aria-disabled"]=disabled);ref=(0,_useForkRef.default)(buttonRefProp,ref);buttonRefProp=(0,_useForkRef.default)(_React$useState,buttonRef);ref=(0,_useForkRef.default)(ref,buttonRefProp);buttonRefProp=React.useState(!1);_props$type=buttonRefProp[0];
var setMountedState=buttonRefProp[1];React.useEffect(function(){setMountedState(!0)},[]);var enableTouchRipple=_props$type&&!disableRipple&&!disabled;React.useEffect(function(){enableTouchRipple&&!rippleRef.current&&console.error("Material-UI: The `component` prop provided to ButtonBase is invalid.\nPlease make sure the children prop is rendered in this custom component.")},[enableTouchRipple]);return React.createElement(ComponentProp,(0,_extends2.default)({className:(0,_clsx.default)(classes.root,
className,focusVisible&&[classes.focusVisible,_props$component],disabled&&classes.disabled),onBlur:handleBlur,onClick,onFocus:handleFocus,onKeyDown:handleKeyDown,onKeyUp:handleKeyUp,onMouseDown:action,onMouseLeave:onMouseDown,onMouseUp,onDragLeave,onTouchEnd,onTouchMove,onTouchStart,ref,tabIndex:disabled?-1:_props$tabIndex},buttonProps,props),children,enableTouchRipple?React.createElement(_TouchRipple.default,(0,_extends2.default)({ref:rippleRef,center:_props$centerRipple},TouchRippleProps)):null)});
_interopRequireDefault.propTypes={action:module.refType,buttonRef:module.refType,centerRipple:global.default.bool,children:global.default.node,classes:global.default.object,className:global.default.string,component:module.elementTypeAcceptingRef,disabled:global.default.bool,disableRipple:global.default.bool,disableTouchRipple:global.default.bool,focusRipple:global.default.bool,focusVisibleClassName:global.default.string,href:global.default.string,onBlur:global.default.func,onClick:global.default.func,
onDragLeave:global.default.func,onFocus:global.default.func,onFocusVisible:global.default.func,onKeyDown:global.default.func,onKeyUp:global.default.func,onMouseDown:global.default.func,onMouseLeave:global.default.func,onMouseUp:global.default.func,onTouchEnd:global.default.func,onTouchMove:global.default.func,onTouchStart:global.default.func,tabIndex:global.default.oneOfType([global.default.number,global.default.string]),TouchRippleProps:global.default.object,type:global.default.oneOfType([global.default.oneOf(["button",
"reset","submit"]),global.default.string])};require=(0,_withStyles.default)(require,{name:"MuiButtonBase"})(_interopRequireDefault);exports.default=require}
//# sourceMappingURL=module$node_modules$$material_ui$core$ButtonBase$ButtonBase.js.map
