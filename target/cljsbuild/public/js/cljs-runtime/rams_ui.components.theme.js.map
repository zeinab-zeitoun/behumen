{"version":3,"sources":["rams_ui/components/theme.cljs"],"mappings":";;;;AAcA,AAAA,AAACA,AAEA,AAAKC;AAAL,AACE,AAAA,AAAA,AAAA,AAACC,AAAOD;;AAEX,AAAA,AAACE,AAEA,AAAAC,AAAKH;AAAL,AAAA,AAAAI,AAAAD;AAAA,AAAAE,AAAAD,AAAA,AAAA,AAASE;AAAT,AACE,AAAMC,AAAM,AAAA,AAAA,AAAA,AAACN,AAAOD;AAApB,AACE,AAAA,AAAA,AAAA,AAACQ,AAASR,AAAoB,AAACS,AAAIF;;AAExC,AAAA,AAAMG;AAAN,AAAA;AAEE,AAAA,AAAA,AAACC;;AAEH,AAAA,AAAMC;AAAN,AAAA;AAEE,AAAA,AAAA,AAACC;;AAGH,AAAA;;;;;;;AAAA,AAAAC,AAAMM;AAAN,AAAA,AAAAL,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAK,AAAA,AAAA,AAAA,AAAAF;;;AAAA,AAAA,AAAA,AAAA,AAAAG,AAAMD,AAM0Bc;AANhC,AAAA,AAAAZ,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAAA,AAMqBW;AANrB,AAAAP,AAAAJ,AAAA,AAMWU;AANX,AAOE,AAAMG,AAAK,AAACvB;AACNwB,AAAU,AAAI,AAAAC,AAAKL;AAAL,AAAA,AAAAK;AAAU,AAAA,AAAAC,AAAA,AAAOH;;AAAjBE;;AAAJ,AAEE,AAAA,AAAI,AAAA,AAAAC,AAAA,AAAOH,AAET,AAAA,AAAAG,AAAA,AAAA,AAAKH;AAGnBI,AAAU,AAACC,AAAqBP,AACA,AAAA,AAACQ,AACD,AAAA,AAACC,AAAiBN;AAClDO,AAAY,AAAW,AAACC;AACxBC,AAAE,AAAOF,AAAY,AAACG;AACtBC,AAAQ,AAAA,AAACC,AAAwBL;AACjCM,AAAS,AAAA,AAAM,AAAA,AAAuBC;AAd5C,AAeE,AAAA,AAAeD,AACMb;;AACrB,AAAA,AAAea,AAAiB,AAAA,AAAmB,AAAA,AAAA,AAAI,AAAA,AAACE,AAAEf;;AAjB5D,AAAA,AAAA,AAAA,AAmBGgB,AAAeb,AACd,AAACc,AAA0BC,AAAiCP,AAC5Db;;;AA5BN,AAAA,AAAA,AAAMd;;AAAN;AAAA,AAAA,AAAA,AAAAO,AAAMP;AAAN,AAAA,AAAAQ,AAAA,AAAAC,AAAAF;AAAAA,AAAA,AAAAG,AAAAH;AAAA,AAAA,AAAAI,AAAA;AAAA,AAAA,AAAAA,AAAAH,AAAAD;;;AAAA","names":["re_frame.core.reg_sub","db","cljs.core.get_in","re_frame.core.reg_event_db","p__80900","vec__80901","cljs.core.nth","event","state","cljs.core/assoc-in","cljs.core/not","rams-ui.components.theme/toggle-ltr","re-frame.core/dispatch","rams-ui.components.theme/is-ltr?","re_frame.core.subscribe","var_args","args__4742__auto__","len__4736__auto__","i__4737__auto__","argseq__4743__auto__","cljs.core/IndexedSeq","rams-ui.components.theme/theme","p__80910","map__80912","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","seq80906","G__80907","cljs.core/first","cljs.core/next","self__4723__auto__","rtl?","options","content","ltr?","direction","and__4115__auto__","cljs.core/deref","new-theme","reagent-material-ui.styles/create-mui-theme","cljs.core.dissoc","cljs.core.assoc","new-plugins","js/module$node_modules$$material_ui$core$esm$styles$index.jssPreset","_","js/module$node_modules$jss_rtl$lib$main.default","new-jss","js/module$node_modules$jss$dist$jss_cjs.create","body-dom","js/document","cljs.core._EQ_","reagent-material-ui.styles/theme-provider","reagent_material_ui.util.adapt_react_class","js/module$node_modules$$material_ui$core$esm$styles$index.StylesProvider"],"sourcesContent":["(ns rams-ui.components.theme\n  (:require [reagent.core :as r]\n            [re-frame.core :refer [dispatch subscribe reg-event-db reg-sub]]\n            [clojure.string :as cstr]\n            [rams-ui.util :refer [gen-uuid rendering-id set-value get-value]]\n            [reagent-material-ui.util :as mi-util]\n            \n            [\"@material-ui/core/styles\" :as mui-styles]\n            [\"jss-rtl\" :default rtl]\n            [\"jss\" :as jss]\n            [reagent-material-ui.styles :as styles\n             :refer [make-styles with-styles create-mui-theme\n                     theme-provider]]))\n\n(reg-sub\n :rams4ui|get-ltr\n (fn [db]\n   (get-in db [:rams4ui :ltr?])))\n\n(reg-event-db\n :rams4ui|toggle-ltr\n (fn [db [event]]\n   (let [state (get-in db [:rams4ui :ltr?])]\n     (assoc-in db [:rams4ui :ltr?] (not state)))))\n\n(defn toggle-ltr []\n  \"Helper function that allows to toggle the rtl/ltr support\"\n  (dispatch [:rams4ui|toggle-ltr]))\n\n(defn is-ltr? []\n  \"Helper function that returns a subscription identifying whether the current direction is ltr or not\"\n  (subscribe [:rams4ui|get-ltr]))\n\n\n(defn theme\n  \"the base component that should be used at the root of all rams-ui systems. It provides the ability to theme the whole design and gives access to the rtl support needed. Note that this will affect the body tag in the DOM so will affect all elements on the page.\n  It takes the following arguments\n\n  - **config**: is the theme configuration better understood by studying the [docs|https://material-ui.com/customization/theming/]. It only adds one extra key **:rtl?** to indicate if it should start from right to left. By default it start as ltr\n  - **content**: the react componenet to be rendered inside it.\"\n  [{:keys [rtl?] :as options} & content]\n  (let [ltr? (is-ltr?)\n        direction (if (and rtl? (nil? @ltr?))\n                    \"rtl\"\n                    (if (nil? @ltr?)\n                      \"ltr\"\n                      (if @ltr?\n                        \"ltr\"\n                        \"rtl\")))\n        new-theme (create-mui-theme (-> options\n                                        (dissoc :rtl?)\n                                        (assoc :direction direction)))\n        new-plugins (.-plugins (mui-styles/jssPreset))\n        _ (.push new-plugins (rtl))\n        new-jss (jss/create #js{:plugins new-plugins})\n        body-dom (aget (.getElementsByTagName js/document \"body\") 0)]\n    (.setAttribute body-dom\n                   \"dir\" direction)\n    (.setAttribute body-dom \"style\" (str \"text-align:\" (if (= direction \"ltr\")\n                                                          \"left\" \"right\")))\n    [theme-provider new-theme\n     [(mi-util/adapt-react-class mui-styles/StylesProvider) {:jss new-jss}\n      content]]))\n"]}