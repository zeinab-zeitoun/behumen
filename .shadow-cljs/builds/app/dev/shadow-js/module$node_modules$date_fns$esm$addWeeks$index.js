["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/date-fns/esm/addWeeks/index.js"],"~:js","shadow$provide.module$node_modules$date_fns$esm$addWeeks$index=function(global,require,module,exports){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}Object.defineProperty(exports,\"__esModule\",{value:!0});exports[\"default\"]=function(dirtyDate,dirtyAmount){(0,_index3[\"default\"])(2,arguments);var days=7*(0,_index[\"default\"])(dirtyAmount);return(0,_index2[\"default\"])(dirtyDate,days)};var _index=_interopRequireDefault(require(\"module$node_modules$date_fns$esm$_lib$toInteger$index\")),\n_index2=_interopRequireDefault(require(\"module$node_modules$date_fns$esm$addDays$index\")),_index3=_interopRequireDefault(require(\"module$node_modules$date_fns$esm$_lib$requiredArgs$index\"))}","~:source","shadow$provide[\"module$node_modules$date_fns$esm$addWeeks$index\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = addWeeks;\n\nvar _index = _interopRequireDefault(require(\"../_lib/toInteger/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../addDays/index.js\"));\n\nvar _index3 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * @name addWeeks\n * @category Week Helpers\n * @summary Add the specified number of weeks to the given date.\n *\n * @description\n * Add the specified number of week to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of weeks to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the weeks added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 4 weeks to 1 September 2014:\n * const result = addWeeks(new Date(2014, 8, 1), 4)\n * //=> Mon Sep 29 2014 00:00:00\n */\nfunction addWeeks(dirtyDate, dirtyAmount) {\n  (0, _index3[\"default\"])(2, arguments);\n  var amount = (0, _index[\"default\"])(dirtyAmount);\n  var days = amount * 7;\n  return (0, _index2[\"default\"])(dirtyDate, days);\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$date_fns$esm$_lib$requiredArgs$index","~$module$node_modules$date_fns$esm$addDays$index","~$shadow.js","~$module$node_modules$date_fns$esm$_lib$toInteger$index"]],"~:properties",["^5",["__esModule","value"]],"~:compiled-at",1622535540956,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$date_fns$esm$addWeeks$index.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,gDAAA,CAAoE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAc5GC,QAASA,uBAAsB,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAAC,WAAP,CAAwBD,GAAxB,CAA8B,CAAE,UAAWA,GAAb,CAAvC,CAXrCE,MAAAC,eAAA,CAAsBL,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CM,MAAO,CAAA,CADoC,CAA7C,CAGAN,QAAA,CAAQ,SAAR,CAAA,CAgCAO,QAAiB,CAACC,SAAD,CAAYC,WAAZ,CAAyB,CACxC,CAAC,CAAA,CAAGC,OAAA,CAAQ,SAAR,CAAJ,EAAwB,CAAxB,CAA2BC,SAA3B,CAEA,KAAIC,KAAgB,CAAhBA,CADSC,CAAC,CAAA,CAAGC,MAAA,CAAO,SAAP,CAAJD,EAAuBJ,WAAvBI,CAEb,OAAO,CAAC,CAAA,CAAGE,OAAA,CAAQ,SAAR,CAAJ,EAAwBP,SAAxB,CAAmCI,IAAnC,CAJiC,CA9B1C,KAAIE,OAASb,sBAAA,CAAuBH,OAAA,CAAQ,uDAAR,CAAvB,CAAb;AAEIiB,QAAUd,sBAAA,CAAuBH,OAAA,CAAQ,gDAAR,CAAvB,CAFd,CAIIY,QAAUT,sBAAA,CAAuBH,OAAA,CAAQ,0DAAR,CAAvB,CAZ8F;\",\n\"sources\":[\"node_modules/date-fns/esm/addWeeks/index.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$date_fns$esm$addWeeks$index\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports[\\\"default\\\"] = addWeeks;\\n\\nvar _index = _interopRequireDefault(require(\\\"../_lib/toInteger/index.js\\\"));\\n\\nvar _index2 = _interopRequireDefault(require(\\\"../addDays/index.js\\\"));\\n\\nvar _index3 = _interopRequireDefault(require(\\\"../_lib/requiredArgs/index.js\\\"));\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\\"default\\\": obj }; }\\n\\n/**\\n * @name addWeeks\\n * @category Week Helpers\\n * @summary Add the specified number of weeks to the given date.\\n *\\n * @description\\n * Add the specified number of week to the given date.\\n *\\n * ### v2.0.0 breaking changes:\\n *\\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\\n *\\n * @param {Date|Number} date - the date to be changed\\n * @param {Number} amount - the amount of weeks to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\\n * @returns {Date} the new date with the weeks added\\n * @throws {TypeError} 2 arguments required\\n *\\n * @example\\n * // Add 4 weeks to 1 September 2014:\\n * const result = addWeeks(new Date(2014, 8, 1), 4)\\n * //=> Mon Sep 29 2014 00:00:00\\n */\\nfunction addWeeks(dirtyDate, dirtyAmount) {\\n  (0, _index3[\\\"default\\\"])(2, arguments);\\n  var amount = (0, _index[\\\"default\\\"])(dirtyAmount);\\n  var days = amount * 7;\\n  return (0, _index2[\\\"default\\\"])(dirtyDate, days);\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"Object\",\"defineProperty\",\"value\",\"addWeeks\",\"dirtyDate\",\"dirtyAmount\",\"_index3\",\"arguments\",\"days\",\"amount\",\"_index\",\"_index2\"]\n}\n"]