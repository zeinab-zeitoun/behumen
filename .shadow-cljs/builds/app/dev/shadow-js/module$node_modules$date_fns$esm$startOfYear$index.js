["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/date-fns/esm/startOfYear/index.js"],"~:js","shadow$provide.module$node_modules$date_fns$esm$startOfYear$index=function(global,require,module,exports){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}Object.defineProperty(exports,\"__esModule\",{value:!0});exports[\"default\"]=function(dirtyDate){(0,_index2[\"default\"])(1,arguments);var cleanDate=(0,_index[\"default\"])(dirtyDate),date=new Date(0);date.setFullYear(cleanDate.getFullYear(),0,1);date.setHours(0,0,0,0);return date};var _index=_interopRequireDefault(require(\"module$node_modules$date_fns$esm$toDate$index\")),\n_index2=_interopRequireDefault(require(\"module$node_modules$date_fns$esm$_lib$requiredArgs$index\"))}","~:source","shadow$provide[\"module$node_modules$date_fns$esm$startOfYear$index\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = startOfYear;\n\nvar _index = _interopRequireDefault(require(\"../toDate/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nfunction startOfYear(dirtyDate) {\n  (0, _index2[\"default\"])(1, arguments);\n  var cleanDate = (0, _index[\"default\"])(dirtyDate);\n  var date = new Date(0);\n  date.setFullYear(cleanDate.getFullYear(), 0, 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$date_fns$esm$_lib$requiredArgs$index","~$shadow.js","~$module$node_modules$date_fns$esm$toDate$index"]],"~:properties",["^5",["__esModule","value"]],"~:compiled-at",1622535541011,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$date_fns$esm$startOfYear$index.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,mDAAA,CAAuE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAY/GC,QAASA,uBAAsB,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAAC,WAAP,CAAwBD,GAAxB,CAA8B,CAAE,UAAWA,GAAb,CAAvC,CATrCE,MAAAC,eAAA,CAAsBL,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CM,MAAO,CAAA,CADoC,CAA7C,CAGAN,QAAA,CAAQ,SAAR,CAAA,CA8BAO,QAAoB,CAACC,SAAD,CAAY,CAC9B,CAAC,CAAA,CAAGC,OAAA,CAAQ,SAAR,CAAJ,EAAwB,CAAxB,CAA2BC,SAA3B,CACA,KAAIC,UAAY,CAAC,CAAA,CAAGC,MAAA,CAAO,SAAP,CAAJ,EAAuBJ,SAAvB,CAAhB,CACIK,KAAO,IAAIC,IAAJ,CAAS,CAAT,CACXD,KAAAE,YAAA,CAAiBJ,SAAAK,YAAA,EAAjB,CAA0C,CAA1C,CAA6C,CAA7C,CACAH,KAAAI,SAAA,CAAc,CAAd,CAAiB,CAAjB,CAAoB,CAApB,CAAuB,CAAvB,CACA,OAAOJ,KANuB,CA5BhC,KAAID,OAASX,sBAAA,CAAuBH,OAAA,CAAQ,+CAAR,CAAvB,CAAb;AAEIW,QAAUR,sBAAA,CAAuBH,OAAA,CAAQ,0DAAR,CAAvB,CAViG;\",\n\"sources\":[\"node_modules/date-fns/esm/startOfYear/index.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$date_fns$esm$startOfYear$index\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports[\\\"default\\\"] = startOfYear;\\n\\nvar _index = _interopRequireDefault(require(\\\"../toDate/index.js\\\"));\\n\\nvar _index2 = _interopRequireDefault(require(\\\"../_lib/requiredArgs/index.js\\\"));\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\\"default\\\": obj }; }\\n\\n/**\\n * @name startOfYear\\n * @category Year Helpers\\n * @summary Return the start of a year for the given date.\\n *\\n * @description\\n * Return the start of a year for the given date.\\n * The result will be in the local timezone.\\n *\\n * ### v2.0.0 breaking changes:\\n *\\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\\n *\\n * @param {Date|Number} date - the original date\\n * @returns {Date} the start of a year\\n * @throws {TypeError} 1 argument required\\n *\\n * @example\\n * // The start of a year for 2 September 2014 11:55:00:\\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\\n * //=> Wed Jan 01 2014 00:00:00\\n */\\nfunction startOfYear(dirtyDate) {\\n  (0, _index2[\\\"default\\\"])(1, arguments);\\n  var cleanDate = (0, _index[\\\"default\\\"])(dirtyDate);\\n  var date = new Date(0);\\n  date.setFullYear(cleanDate.getFullYear(), 0, 1);\\n  date.setHours(0, 0, 0, 0);\\n  return date;\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"Object\",\"defineProperty\",\"value\",\"startOfYear\",\"dirtyDate\",\"_index2\",\"arguments\",\"cleanDate\",\"_index\",\"date\",\"Date\",\"setFullYear\",\"getFullYear\",\"setHours\"]\n}\n"]