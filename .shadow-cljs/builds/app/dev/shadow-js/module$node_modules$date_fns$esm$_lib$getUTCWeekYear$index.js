["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js"],"~:js","shadow$provide.module$node_modules$date_fns$esm$_lib$getUTCWeekYear$index=function(global,require,module,exports){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}Object.defineProperty(exports,\"__esModule\",{value:!0});exports[\"default\"]=function(dirtyDate,dirtyOptions){(0,_index4[\"default\"])(1,arguments);var date=(0,_index2[\"default\"])(dirtyDate,dirtyOptions),year=date.getUTCFullYear(),options=dirtyOptions||{},locale=options.locale;locale=locale&&locale.options&&\nlocale.options.firstWeekContainsDate;locale=null==locale?1:(0,_index[\"default\"])(locale);options=null==options.firstWeekContainsDate?locale:(0,_index[\"default\"])(options.firstWeekContainsDate);if(!(1<=options&&7>=options))throw new RangeError(\"firstWeekContainsDate must be between 1 and 7 inclusively\");locale=new Date(0);locale.setUTCFullYear(year+1,0,options);locale.setUTCHours(0,0,0,0);locale=(0,_index3[\"default\"])(locale,dirtyOptions);var firstWeekOfThisYear=new Date(0);firstWeekOfThisYear.setUTCFullYear(year,\n0,options);firstWeekOfThisYear.setUTCHours(0,0,0,0);options=(0,_index3[\"default\"])(firstWeekOfThisYear,dirtyOptions);return date.getTime()>=locale.getTime()?year+1:date.getTime()>=options.getTime()?year:year-1};var _index=_interopRequireDefault(require(\"module$node_modules$date_fns$esm$_lib$toInteger$index\")),_index2=_interopRequireDefault(require(\"module$node_modules$date_fns$esm$toDate$index\")),_index3=_interopRequireDefault(require(\"module$node_modules$date_fns$esm$_lib$startOfUTCWeek$index\")),\n_index4=_interopRequireDefault(require(\"module$node_modules$date_fns$esm$_lib$requiredArgs$index\"))}","~:source","shadow$provide[\"module$node_modules$date_fns$esm$_lib$getUTCWeekYear$index\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = getUTCWeekYear;\n\nvar _index = _interopRequireDefault(require(\"../toInteger/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../../toDate/index.js\"));\n\nvar _index3 = _interopRequireDefault(require(\"../startOfUTCWeek/index.js\"));\n\nvar _index4 = _interopRequireDefault(require(\"../requiredArgs/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\nfunction getUTCWeekYear(dirtyDate, dirtyOptions) {\n  (0, _index4[\"default\"])(1, arguments);\n  var date = (0, _index2[\"default\"])(dirtyDate, dirtyOptions);\n  var year = date.getUTCFullYear();\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : (0, _index[\"default\"])(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : (0, _index[\"default\"])(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = (0, _index3[\"default\"])(firstWeekOfNextYear, dirtyOptions);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = (0, _index3[\"default\"])(firstWeekOfThisYear, dirtyOptions);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$date_fns$esm$_lib$requiredArgs$index","~$shadow.js","~$module$node_modules$date_fns$esm$_lib$startOfUTCWeek$index","~$module$node_modules$date_fns$esm$_lib$toInteger$index","~$module$node_modules$date_fns$esm$toDate$index"]],"~:properties",["^5",["__esModule","value"]],"~:compiled-at",1622535540979,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$date_fns$esm$_lib$getUTCWeekYear$index.js\",\n\"lineCount\":4,\n\"mappings\":\"AAAAA,cAAA,2DAAA,CAA+E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAgBvHC,QAASA,uBAAsB,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAAC,WAAP,CAAwBD,GAAxB,CAA8B,CAAE,UAAWA,GAAb,CAAvC,CAbrCE,MAAAC,eAAA,CAAsBL,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CM,MAAO,CAAA,CADoC,CAA7C,CAGAN,QAAA,CAAQ,SAAR,CAAA,CAcAO,QAAuB,CAACC,SAAD,CAAYC,YAAZ,CAA0B,CAC/C,CAAC,CAAA,CAAGC,OAAA,CAAQ,SAAR,CAAJ,EAAwB,CAAxB,CAA2BC,SAA3B,CACA,KAAIC,KAAO,CAAC,CAAA,CAAGC,OAAA,CAAQ,SAAR,CAAJ,EAAwBL,SAAxB,CAAmCC,YAAnC,CAAX,CACIK,KAAOF,IAAAG,eAAA,EADX,CAEIC,QAAUP,YAAVO,EAA0B,EAF9B,CAGIC,OAASD,OAAAC,OACTC,OAAAA,CAA8BD,MAA9BC,EAAwCD,MAAAD,QAAxCE;AAA0DD,MAAAD,QAAAG,sBAC1DC,OAAAA,CAA8D,IAA/B,EAAAF,MAAA,CAAsC,CAAtC,CAA0C,CAAC,CAAA,CAAGG,MAAA,CAAO,SAAP,CAAJ,EAAuBH,MAAvB,CACzEC,QAAAA,CAAyD,IAAjC,EAAAH,OAAAG,sBAAA,CAAwCC,MAAxC,CAAuE,CAAC,CAAA,CAAGC,MAAA,CAAO,SAAP,CAAJ,EAAuBL,OAAAG,sBAAvB,CAEnG,IAAI,EAA2B,CAA3B,EAAEA,OAAF,EAAyD,CAAzD,EAAgCA,OAAhC,CAAJ,CACE,KAAM,KAAIG,UAAJ,CAAe,2DAAf,CAAN,CAGEC,MAAAA,CAAsB,IAAIC,IAAJ,CAAS,CAAT,CAC1BD,OAAAE,eAAA,CAAmCX,IAAnC,CAA0C,CAA1C,CAA6C,CAA7C,CAAgDK,OAAhD,CACAI,OAAAG,YAAA,CAAgC,CAAhC,CAAmC,CAAnC,CAAsC,CAAtC,CAAyC,CAAzC,CACIC,OAAAA,CAAkB,CAAC,CAAA,CAAGC,OAAA,CAAQ,SAAR,CAAJ,EAAwBL,MAAxB,CAA6Cd,YAA7C,CACtB,KAAIoB,oBAAsB,IAAIL,IAAJ,CAAS,CAAT,CAC1BK,oBAAAJ,eAAA,CAAmCX,IAAnC;AAAyC,CAAzC,CAA4CK,OAA5C,CACAU,oBAAAH,YAAA,CAAgC,CAAhC,CAAmC,CAAnC,CAAsC,CAAtC,CAAyC,CAAzC,CACII,QAAAA,CAAkB,CAAC,CAAA,CAAGF,OAAA,CAAQ,SAAR,CAAJ,EAAwBC,mBAAxB,CAA6CpB,YAA7C,CAEtB,OAAIG,KAAAmB,QAAA,EAAJ,EAAsBJ,MAAAI,QAAA,EAAtB,CACSjB,IADT,CACgB,CADhB,CAEWF,IAAAmB,QAAA,EAAJ,EAAsBD,OAAAC,QAAA,EAAtB,CACEjB,IADF,CAGEA,IAHF,CAGS,CA5B+B,CAZjD,KAAIO,OAASpB,sBAAA,CAAuBH,OAAA,CAAQ,uDAAR,CAAvB,CAAb,CAEIe,QAAUZ,sBAAA,CAAuBH,OAAA,CAAQ,+CAAR,CAAvB,CAFd,CAII8B,QAAU3B,sBAAA,CAAuBH,OAAA,CAAQ,4DAAR,CAAvB,CAJd;AAMIY,QAAUT,sBAAA,CAAuBH,OAAA,CAAQ,0DAAR,CAAvB,CAdyG;\",\n\"sources\":[\"node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$date_fns$esm$_lib$getUTCWeekYear$index\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports[\\\"default\\\"] = getUTCWeekYear;\\n\\nvar _index = _interopRequireDefault(require(\\\"../toInteger/index.js\\\"));\\n\\nvar _index2 = _interopRequireDefault(require(\\\"../../toDate/index.js\\\"));\\n\\nvar _index3 = _interopRequireDefault(require(\\\"../startOfUTCWeek/index.js\\\"));\\n\\nvar _index4 = _interopRequireDefault(require(\\\"../requiredArgs/index.js\\\"));\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\\"default\\\": obj }; }\\n\\n// This function will be a part of public API when UTC function will be implemented.\\n// See issue: https://github.com/date-fns/date-fns/issues/376\\nfunction getUTCWeekYear(dirtyDate, dirtyOptions) {\\n  (0, _index4[\\\"default\\\"])(1, arguments);\\n  var date = (0, _index2[\\\"default\\\"])(dirtyDate, dirtyOptions);\\n  var year = date.getUTCFullYear();\\n  var options = dirtyOptions || {};\\n  var locale = options.locale;\\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : (0, _index[\\\"default\\\"])(localeFirstWeekContainsDate);\\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : (0, _index[\\\"default\\\"])(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\\n\\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\\n  }\\n\\n  var firstWeekOfNextYear = new Date(0);\\n  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\\n  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\\n  var startOfNextYear = (0, _index3[\\\"default\\\"])(firstWeekOfNextYear, dirtyOptions);\\n  var firstWeekOfThisYear = new Date(0);\\n  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\\n  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\\n  var startOfThisYear = (0, _index3[\\\"default\\\"])(firstWeekOfThisYear, dirtyOptions);\\n\\n  if (date.getTime() >= startOfNextYear.getTime()) {\\n    return year + 1;\\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\\n    return year;\\n  } else {\\n    return year - 1;\\n  }\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"Object\",\"defineProperty\",\"value\",\"getUTCWeekYear\",\"dirtyDate\",\"dirtyOptions\",\"_index4\",\"arguments\",\"date\",\"_index2\",\"year\",\"getUTCFullYear\",\"options\",\"locale\",\"localeFirstWeekContainsDate\",\"firstWeekContainsDate\",\"defaultFirstWeekContainsDate\",\"_index\",\"RangeError\",\"firstWeekOfNextYear\",\"Date\",\"setUTCFullYear\",\"setUTCHours\",\"startOfNextYear\",\"_index3\",\"firstWeekOfThisYear\",\"startOfThisYear\",\"getTime\"]\n}\n"]