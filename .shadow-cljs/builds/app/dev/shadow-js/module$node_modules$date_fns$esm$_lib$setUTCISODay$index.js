["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/date-fns/esm/_lib/setUTCISODay/index.js"],"~:js","shadow$provide.module$node_modules$date_fns$esm$_lib$setUTCISODay$index=function(global,require,module,exports){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}Object.defineProperty(exports,\"__esModule\",{value:!0});exports[\"default\"]=function(dirtyDate,dirtyDay){(0,_index3[\"default\"])(2,arguments);var day=(0,_index[\"default\"])(dirtyDay);0===day%7&&(day-=7);var date=(0,_index2[\"default\"])(dirtyDate),currentDay=date.getUTCDay();day=(1>(day%7+7)%7?7:0)+day-currentDay;\ndate.setUTCDate(date.getUTCDate()+day);return date};var _index=_interopRequireDefault(require(\"module$node_modules$date_fns$esm$_lib$toInteger$index\")),_index2=_interopRequireDefault(require(\"module$node_modules$date_fns$esm$toDate$index\")),_index3=_interopRequireDefault(require(\"module$node_modules$date_fns$esm$_lib$requiredArgs$index\"))}","~:source","shadow$provide[\"module$node_modules$date_fns$esm$_lib$setUTCISODay$index\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = setUTCISODay;\n\nvar _index = _interopRequireDefault(require(\"../toInteger/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../../toDate/index.js\"));\n\nvar _index3 = _interopRequireDefault(require(\"../requiredArgs/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\nfunction setUTCISODay(dirtyDate, dirtyDay) {\n  (0, _index3[\"default\"])(2, arguments);\n  var day = (0, _index[\"default\"])(dirtyDay);\n\n  if (day % 7 === 0) {\n    day = day - 7;\n  }\n\n  var weekStartsOn = 1;\n  var date = (0, _index2[\"default\"])(dirtyDate);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$date_fns$esm$_lib$requiredArgs$index","~$shadow.js","~$module$node_modules$date_fns$esm$_lib$toInteger$index","~$module$node_modules$date_fns$esm$toDate$index"]],"~:properties",["^5",["__esModule","value"]],"~:compiled-at",1622535540995,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$date_fns$esm$_lib$setUTCISODay$index.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,yDAAA,CAA6E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAcrHC,QAASA,uBAAsB,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAAC,WAAP,CAAwBD,GAAxB,CAA8B,CAAE,UAAWA,GAAb,CAAvC,CAXrCE,MAAAC,eAAA,CAAsBL,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CM,MAAO,CAAA,CADoC,CAA7C,CAGAN,QAAA,CAAQ,SAAR,CAAA,CAYAO,QAAqB,CAACC,SAAD,CAAYC,QAAZ,CAAsB,CACzC,CAAC,CAAA,CAAGC,OAAA,CAAQ,SAAR,CAAJ,EAAwB,CAAxB,CAA2BC,SAA3B,CACA,KAAIC,IAAM,CAAC,CAAA,CAAGC,MAAA,CAAO,SAAP,CAAJ,EAAuBJ,QAAvB,CAEM,EAAhB,GAAIG,GAAJ,CAAU,CAAV,GACQA,GADR,EACc,CADd,CAKA,KAAIE,KAAO,CAAC,CAAA,CAAGC,OAAA,CAAQ,SAAR,CAAJ,EAAwBP,SAAxB,CAAX,CACIQ,WAAaF,IAAAG,UAAA,EAGbC,IAAAA,EALeC,CAKP,EAFIP,GAEJ,CAFU,CAEV,CADgB,CAChB,EADqB,CACrB,CAA0B,CAA1B,CAA8B,CAAtCM,EAA2CN,GAA3CM,CAAiDF,UACrDF;IAAAM,WAAA,CAAgBN,IAAAO,WAAA,EAAhB,CAAoCH,GAApC,CACA,OAAOJ,KAfkC,CAV3C,KAAID,OAASZ,sBAAA,CAAuBH,OAAA,CAAQ,uDAAR,CAAvB,CAAb,CAEIiB,QAAUd,sBAAA,CAAuBH,OAAA,CAAQ,+CAAR,CAAvB,CAFd,CAIIY,QAAUT,sBAAA,CAAuBH,OAAA,CAAQ,0DAAR,CAAvB,CAZuG;\",\n\"sources\":[\"node_modules/date-fns/esm/_lib/setUTCISODay/index.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$date_fns$esm$_lib$setUTCISODay$index\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports[\\\"default\\\"] = setUTCISODay;\\n\\nvar _index = _interopRequireDefault(require(\\\"../toInteger/index.js\\\"));\\n\\nvar _index2 = _interopRequireDefault(require(\\\"../../toDate/index.js\\\"));\\n\\nvar _index3 = _interopRequireDefault(require(\\\"../requiredArgs/index.js\\\"));\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\\"default\\\": obj }; }\\n\\n// This function will be a part of public API when UTC function will be implemented.\\n// See issue: https://github.com/date-fns/date-fns/issues/376\\nfunction setUTCISODay(dirtyDate, dirtyDay) {\\n  (0, _index3[\\\"default\\\"])(2, arguments);\\n  var day = (0, _index[\\\"default\\\"])(dirtyDay);\\n\\n  if (day % 7 === 0) {\\n    day = day - 7;\\n  }\\n\\n  var weekStartsOn = 1;\\n  var date = (0, _index2[\\\"default\\\"])(dirtyDate);\\n  var currentDay = date.getUTCDay();\\n  var remainder = day % 7;\\n  var dayIndex = (remainder + 7) % 7;\\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\\n  date.setUTCDate(date.getUTCDate() + diff);\\n  return date;\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"Object\",\"defineProperty\",\"value\",\"setUTCISODay\",\"dirtyDate\",\"dirtyDay\",\"_index3\",\"arguments\",\"day\",\"_index\",\"date\",\"_index2\",\"currentDay\",\"getUTCDay\",\"diff\",\"weekStartsOn\",\"setUTCDate\",\"getUTCDate\"]\n}\n"]