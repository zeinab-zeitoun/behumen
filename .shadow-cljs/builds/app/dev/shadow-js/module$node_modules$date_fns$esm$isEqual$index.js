["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/date-fns/esm/isEqual/index.js"],"~:js","shadow$provide.module$node_modules$date_fns$esm$isEqual$index=function(global,require,module,exports){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}Object.defineProperty(exports,\"__esModule\",{value:!0});exports[\"default\"]=function(dirtyLeftDate,dirtyRightDate){(0,_index2[\"default\"])(2,arguments);var dateLeft=(0,_index[\"default\"])(dirtyLeftDate),dateRight=(0,_index[\"default\"])(dirtyRightDate);return dateLeft.getTime()===dateRight.getTime()};var _index=_interopRequireDefault(require(\"module$node_modules$date_fns$esm$toDate$index\")),\n_index2=_interopRequireDefault(require(\"module$node_modules$date_fns$esm$_lib$requiredArgs$index\"))}","~:source","shadow$provide[\"module$node_modules$date_fns$esm$isEqual$index\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = isEqual;\n\nvar _index = _interopRequireDefault(require(\"../toDate/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * @name isEqual\n * @category Common Helpers\n * @summary Are the given dates equal?\n *\n * @description\n * Are the given dates equal?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Boolean} the dates are equal\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 2 July 2014 06:30:45.000 and 2 July 2014 06:30:45.500 equal?\n * var result = isEqual(\n *   new Date(2014, 6, 2, 6, 30, 45, 0),\n *   new Date(2014, 6, 2, 6, 30, 45, 500)\n * )\n * //=> false\n */\nfunction isEqual(dirtyLeftDate, dirtyRightDate) {\n  (0, _index2[\"default\"])(2, arguments);\n  var dateLeft = (0, _index[\"default\"])(dirtyLeftDate);\n  var dateRight = (0, _index[\"default\"])(dirtyRightDate);\n  return dateLeft.getTime() === dateRight.getTime();\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$date_fns$esm$_lib$requiredArgs$index","~$shadow.js","~$module$node_modules$date_fns$esm$toDate$index"]],"~:properties",["^5",["__esModule","value"]],"~:compiled-at",1622535540992,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$date_fns$esm$isEqual$index.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,+CAAA,CAAmE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAY3GC,QAASA,uBAAsB,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAAC,WAAP,CAAwBD,GAAxB,CAA8B,CAAE,UAAWA,GAAb,CAAvC,CATrCE,MAAAC,eAAA,CAAsBL,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CM,MAAO,CAAA,CADoC,CAA7C,CAGAN,QAAA,CAAQ,SAAR,CAAA,CAiCAO,QAAgB,CAACC,aAAD,CAAgBC,cAAhB,CAAgC,CAC9C,CAAC,CAAA,CAAGC,OAAA,CAAQ,SAAR,CAAJ,EAAwB,CAAxB,CAA2BC,SAA3B,CACA,KAAIC,SAAW,CAAC,CAAA,CAAGC,MAAA,CAAO,SAAP,CAAJ,EAAuBL,aAAvB,CAAf,CACIM,UAAY,CAAC,CAAA,CAAGD,MAAA,CAAO,SAAP,CAAJ,EAAuBJ,cAAvB,CAChB,OAAOG,SAAAG,QAAA,EAAP,GAA8BD,SAAAC,QAAA,EAJgB,CA/BhD,KAAIF,OAASZ,sBAAA,CAAuBH,OAAA,CAAQ,+CAAR,CAAvB,CAAb;AAEIY,QAAUT,sBAAA,CAAuBH,OAAA,CAAQ,0DAAR,CAAvB,CAV6F;\",\n\"sources\":[\"node_modules/date-fns/esm/isEqual/index.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$date_fns$esm$isEqual$index\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports[\\\"default\\\"] = isEqual;\\n\\nvar _index = _interopRequireDefault(require(\\\"../toDate/index.js\\\"));\\n\\nvar _index2 = _interopRequireDefault(require(\\\"../_lib/requiredArgs/index.js\\\"));\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\\"default\\\": obj }; }\\n\\n/**\\n * @name isEqual\\n * @category Common Helpers\\n * @summary Are the given dates equal?\\n *\\n * @description\\n * Are the given dates equal?\\n *\\n * ### v2.0.0 breaking changes:\\n *\\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\\n *\\n * @param {Date|Number} dateLeft - the first date to compare\\n * @param {Date|Number} dateRight - the second date to compare\\n * @returns {Boolean} the dates are equal\\n * @throws {TypeError} 2 arguments required\\n *\\n * @example\\n * // Are 2 July 2014 06:30:45.000 and 2 July 2014 06:30:45.500 equal?\\n * var result = isEqual(\\n *   new Date(2014, 6, 2, 6, 30, 45, 0),\\n *   new Date(2014, 6, 2, 6, 30, 45, 500)\\n * )\\n * //=> false\\n */\\nfunction isEqual(dirtyLeftDate, dirtyRightDate) {\\n  (0, _index2[\\\"default\\\"])(2, arguments);\\n  var dateLeft = (0, _index[\\\"default\\\"])(dirtyLeftDate);\\n  var dateRight = (0, _index[\\\"default\\\"])(dirtyRightDate);\\n  return dateLeft.getTime() === dateRight.getTime();\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"Object\",\"defineProperty\",\"value\",\"isEqual\",\"dirtyLeftDate\",\"dirtyRightDate\",\"_index2\",\"arguments\",\"dateLeft\",\"_index\",\"dateRight\",\"getTime\"]\n}\n"]