["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/date-fns/esm/startOfWeek/index.js"],"~:js","shadow$provide.module$node_modules$date_fns$esm$startOfWeek$index=function(global,require,module,exports){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}Object.defineProperty(exports,\"__esModule\",{value:!0});exports[\"default\"]=function(dirtyDate,dirtyOptions){(0,_index3[\"default\"])(1,arguments);var options=dirtyOptions||{},locale=options.locale;locale=locale&&locale.options&&locale.options.weekStartsOn;locale=null==locale?0:(0,_index2[\"default\"])(locale);locale=\nnull==options.weekStartsOn?locale:(0,_index2[\"default\"])(options.weekStartsOn);if(!(0<=locale&&6>=locale))throw new RangeError(\"weekStartsOn must be between 0 and 6 inclusively\");options=(0,_index[\"default\"])(dirtyDate);var day=options.getDay();locale=(day<locale?7:0)+day-locale;options.setDate(options.getDate()-locale);options.setHours(0,0,0,0);return options};var _index=_interopRequireDefault(require(\"module$node_modules$date_fns$esm$toDate$index\")),_index2=_interopRequireDefault(require(\"module$node_modules$date_fns$esm$_lib$toInteger$index\")),\n_index3=_interopRequireDefault(require(\"module$node_modules$date_fns$esm$_lib$requiredArgs$index\"))}","~:source","shadow$provide[\"module$node_modules$date_fns$esm$startOfWeek$index\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = startOfWeek;\n\nvar _index = _interopRequireDefault(require(\"../toDate/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../_lib/toInteger/index.js\"));\n\nvar _index3 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the start of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nfunction startOfWeek(dirtyDate, dirtyOptions) {\n  (0, _index3[\"default\"])(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : (0, _index2[\"default\"])(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : (0, _index2[\"default\"])(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = (0, _index[\"default\"])(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setDate(date.getDate() - diff);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$date_fns$esm$_lib$requiredArgs$index","~$shadow.js","~$module$node_modules$date_fns$esm$_lib$toInteger$index","~$module$node_modules$date_fns$esm$toDate$index"]],"~:properties",["^5",["__esModule","value"]],"~:compiled-at",1622535541011,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$date_fns$esm$startOfWeek$index.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,mDAAA,CAAuE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAc/GC,QAASA,uBAAsB,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAAC,WAAP,CAAwBD,GAAxB,CAA8B,CAAE,UAAWA,GAAb,CAAvC,CAXrCE,MAAAC,eAAA,CAAsBL,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CM,MAAO,CAAA,CADoC,CAA7C,CAGAN,QAAA,CAAQ,SAAR,CAAA,CAyCAO,QAAoB,CAACC,SAAD,CAAYC,YAAZ,CAA0B,CAC5C,CAAC,CAAA,CAAGC,OAAA,CAAQ,SAAR,CAAJ,EAAwB,CAAxB,CAA2BC,SAA3B,CACA,KAAIC,QAAUH,YAAVG,EAA0B,EAA9B,CACIC,OAASD,OAAAC,OACTC,OAAAA,CAAqBD,MAArBC,EAA+BD,MAAAD,QAA/BE,EAAiDD,MAAAD,QAAAG,aACjDC,OAAAA,CAA4C,IAAtB,EAAAF,MAAA,CAA6B,CAA7B,CAAiC,CAAC,CAAA,CAAGG,OAAA,CAAQ,SAAR,CAAJ,EAAwBH,MAAxB,CACvDC,OAAAA;AAAuC,IAAxB,EAAAH,OAAAG,aAAA,CAA+BC,MAA/B,CAAqD,CAAC,CAAA,CAAGC,OAAA,CAAQ,SAAR,CAAJ,EAAwBL,OAAAG,aAAxB,CAExE,IAAI,EAAkB,CAAlB,EAAEA,MAAF,EAAuC,CAAvC,EAAuBA,MAAvB,CAAJ,CACE,KAAM,KAAIG,UAAJ,CAAe,kDAAf,CAAN,CAGEC,OAAAA,CAAO,CAAC,CAAA,CAAGC,MAAA,CAAO,SAAP,CAAJ,EAAuBZ,SAAvB,CACX,KAAIa,IAAMF,OAAAG,OAAA,EACNC,OAAAA,EAAQF,GAAA,CAAMN,MAAN,CAAqB,CAArB,CAAyB,CAAjCQ,EAAsCF,GAAtCE,CAA4CR,MAChDI,QAAAK,QAAA,CAAaL,OAAAM,QAAA,EAAb,CAA8BF,MAA9B,CACAJ,QAAAO,SAAA,CAAc,CAAd,CAAiB,CAAjB,CAAoB,CAApB,CAAuB,CAAvB,CACA,OAAOP,QAjBqC,CAvC9C,KAAIC,OAASnB,sBAAA,CAAuBH,OAAA,CAAQ,+CAAR,CAAvB,CAAb,CAEImB,QAAUhB,sBAAA,CAAuBH,OAAA,CAAQ,uDAAR,CAAvB,CAFd;AAIIY,QAAUT,sBAAA,CAAuBH,OAAA,CAAQ,0DAAR,CAAvB,CAZiG;\",\n\"sources\":[\"node_modules/date-fns/esm/startOfWeek/index.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$date_fns$esm$startOfWeek$index\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports[\\\"default\\\"] = startOfWeek;\\n\\nvar _index = _interopRequireDefault(require(\\\"../toDate/index.js\\\"));\\n\\nvar _index2 = _interopRequireDefault(require(\\\"../_lib/toInteger/index.js\\\"));\\n\\nvar _index3 = _interopRequireDefault(require(\\\"../_lib/requiredArgs/index.js\\\"));\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\\"default\\\": obj }; }\\n\\n/**\\n * @name startOfWeek\\n * @category Week Helpers\\n * @summary Return the start of a week for the given date.\\n *\\n * @description\\n * Return the start of a week for the given date.\\n * The result will be in the local timezone.\\n *\\n * ### v2.0.0 breaking changes:\\n *\\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\\n *\\n * @param {Date|Number} date - the original date\\n * @param {Object} [options] - an object with options.\\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\\n * @returns {Date} the start of a week\\n * @throws {TypeError} 1 argument required\\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\\n *\\n * @example\\n * // The start of a week for 2 September 2014 11:55:00:\\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\\n * //=> Sun Aug 31 2014 00:00:00\\n *\\n * @example\\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\\n * //=> Mon Sep 01 2014 00:00:00\\n */\\nfunction startOfWeek(dirtyDate, dirtyOptions) {\\n  (0, _index3[\\\"default\\\"])(1, arguments);\\n  var options = dirtyOptions || {};\\n  var locale = options.locale;\\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : (0, _index2[\\\"default\\\"])(localeWeekStartsOn);\\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : (0, _index2[\\\"default\\\"])(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\\n\\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\\n  }\\n\\n  var date = (0, _index[\\\"default\\\"])(dirtyDate);\\n  var day = date.getDay();\\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\\n  date.setDate(date.getDate() - diff);\\n  date.setHours(0, 0, 0, 0);\\n  return date;\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"Object\",\"defineProperty\",\"value\",\"startOfWeek\",\"dirtyDate\",\"dirtyOptions\",\"_index3\",\"arguments\",\"options\",\"locale\",\"localeWeekStartsOn\",\"weekStartsOn\",\"defaultWeekStartsOn\",\"_index2\",\"RangeError\",\"date\",\"_index\",\"day\",\"getDay\",\"diff\",\"setDate\",\"getDate\",\"setHours\"]\n}\n"]