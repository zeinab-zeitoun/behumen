["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@material-ui/core/esm/utils/scrollLeft.js"],"~:js","shadow$provide.module$node_modules$$material_ui$core$esm$utils$scrollLeft=function(global,require,module,exports){function detectScrollType(){if(cachedType)return cachedType;var dummy=document.createElement(\"div\");dummy.appendChild(document.createTextNode(\"ABCD\"));dummy.dir=\"rtl\";dummy.style.fontSize=\"14px\";dummy.style.width=\"4px\";dummy.style.height=\"1px\";dummy.style.position=\"absolute\";dummy.style.top=\"-1000px\";dummy.style.overflow=\"scroll\";document.body.appendChild(dummy);cachedType=\"reverse\";0<\ndummy.scrollLeft?cachedType=\"default\":(dummy.scrollLeft=1,0===dummy.scrollLeft&&(cachedType=\"negative\"));document.body.removeChild(dummy);return cachedType}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.detectScrollType=detectScrollType;exports.getNormalizedScrollLeft=function(element,direction){var scrollLeft=element.scrollLeft;if(\"rtl\"!==direction)return scrollLeft;switch(detectScrollType()){case \"negative\":return element.scrollWidth-element.clientWidth+scrollLeft;case \"reverse\":return element.scrollWidth-\nelement.clientWidth-scrollLeft;default:return scrollLeft}};var cachedType}","~:source","shadow$provide[\"module$node_modules$$material_ui$core$esm$utils$scrollLeft\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.detectScrollType = detectScrollType;\nexports.getNormalizedScrollLeft = getNormalizedScrollLeft;\n// Source from https://github.com/alitaheri/normalize-scroll-left\nvar cachedType;\n/**\n * Based on the jquery plugin https://github.com/othree/jquery.rtl-scroll-type\n *\n * Types of scrollLeft, assiming scrollWidth=100 and direction is rtl.\n *\n * Browser        | Type          | <- Most Left | Most Right -> | Initial\n * -------------- | ------------- | ------------ | ------------- | -------\n * WebKit         | default       | 0            | 100           | 100\n * Firefox/Opera  | negative      | -100         | 0             | 0\n * IE/Edge        | reverse       | 100          | 0             | 0\n */\n\nfunction detectScrollType() {\n  if (cachedType) {\n    return cachedType;\n  }\n\n  var dummy = document.createElement('div');\n  dummy.appendChild(document.createTextNode('ABCD'));\n  dummy.dir = 'rtl';\n  dummy.style.fontSize = '14px';\n  dummy.style.width = '4px';\n  dummy.style.height = '1px';\n  dummy.style.position = 'absolute';\n  dummy.style.top = '-1000px';\n  dummy.style.overflow = 'scroll';\n  document.body.appendChild(dummy);\n  cachedType = 'reverse';\n\n  if (dummy.scrollLeft > 0) {\n    cachedType = 'default';\n  } else {\n    dummy.scrollLeft = 1;\n\n    if (dummy.scrollLeft === 0) {\n      cachedType = 'negative';\n    }\n  }\n\n  document.body.removeChild(dummy);\n  return cachedType;\n} // Based on https://stackoverflow.com/a/24394376\n\n\nfunction getNormalizedScrollLeft(element, direction) {\n  var scrollLeft = element.scrollLeft; // Perform the calculations only when direction is rtl to avoid messing up the ltr bahavior\n\n  if (direction !== 'rtl') {\n    return scrollLeft;\n  }\n\n  var type = detectScrollType();\n\n  switch (type) {\n    case 'negative':\n      return element.scrollWidth - element.clientWidth + scrollLeft;\n\n    case 'reverse':\n      return element.scrollWidth - element.clientWidth - scrollLeft;\n\n    default:\n      return scrollLeft;\n  }\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["width","top","height","getNormalizedScrollLeft","scrollLeft","__esModule","position","detectScrollType","value","fontSize","dir","overflow"]],"~:compiled-at",1622535541073,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$material_ui$core$esm$utils$scrollLeft.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,2DAAA,CAA+E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAsBvHC,QAASA,iBAAgB,EAAG,CAC1B,GAAIC,UAAJ,CACE,MAAOA,WAGT,KAAIC,MAAQC,QAAAC,cAAA,CAAuB,KAAvB,CACZF,MAAAG,YAAA,CAAkBF,QAAAG,eAAA,CAAwB,MAAxB,CAAlB,CACAJ,MAAAK,IAAA,CAAY,KACZL,MAAAM,MAAAC,SAAA,CAAuB,MACvBP,MAAAM,MAAAE,MAAA,CAAoB,KACpBR,MAAAM,MAAAG,OAAA,CAAqB,KACrBT,MAAAM,MAAAI,SAAA,CAAuB,UACvBV,MAAAM,MAAAK,IAAA,CAAkB,SAClBX,MAAAM,MAAAM,SAAA,CAAuB,QACvBX,SAAAY,KAAAV,YAAA,CAA0BH,KAA1B,CACAD,WAAA,CAAa,SAEU,EAAvB;AAAIC,KAAAc,WAAJ,CACEf,UADF,CACe,SADf,EAGEC,KAAAc,WAEA,CAFmB,CAEnB,CAAyB,CAAzB,GAAId,KAAAc,WAAJ,GACEf,UADF,CACe,UADf,CALF,CAUAE,SAAAY,KAAAE,YAAA,CAA0Bf,KAA1B,CACA,OAAOD,WA5BmB,CAnB5BiB,MAAAC,eAAA,CAAsBpB,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CqB,MAAO,CAAA,CADoC,CAA7C,CAGArB,QAAAC,iBAAA,CAA2BA,gBAC3BD,QAAAsB,wBAAA,CA+CAA,QAAgC,CAACC,OAAD,CAAUC,SAAV,CAAqB,CACnD,IAAIP,WAAaM,OAAAN,WAEjB,IAAkB,KAAlB,GAAIO,SAAJ,CACE,MAAOP,WAKT,QAFWhB,gBAAAwB,EAEX,EACE,KAAK,UAAL,CACE,MAAOF,QAAAG,YAAP,CAA6BH,OAAAI,YAA7B,CAAmDV,UAErD,MAAK,SAAL,CACE,MAAOM,QAAAG,YAAP;AAA6BH,OAAAI,YAA7B,CAAmDV,UAErD,SACE,MAAOA,WARX,CATmD,CA7CrD,KAAIf,UATmH;\",\n\"sources\":[\"node_modules/@material-ui/core/esm/utils/scrollLeft.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$material_ui$core$esm$utils$scrollLeft\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.detectScrollType = detectScrollType;\\nexports.getNormalizedScrollLeft = getNormalizedScrollLeft;\\n// Source from https://github.com/alitaheri/normalize-scroll-left\\nvar cachedType;\\n/**\\n * Based on the jquery plugin https://github.com/othree/jquery.rtl-scroll-type\\n *\\n * Types of scrollLeft, assiming scrollWidth=100 and direction is rtl.\\n *\\n * Browser        | Type          | <- Most Left | Most Right -> | Initial\\n * -------------- | ------------- | ------------ | ------------- | -------\\n * WebKit         | default       | 0            | 100           | 100\\n * Firefox/Opera  | negative      | -100         | 0             | 0\\n * IE/Edge        | reverse       | 100          | 0             | 0\\n */\\n\\nfunction detectScrollType() {\\n  if (cachedType) {\\n    return cachedType;\\n  }\\n\\n  var dummy = document.createElement('div');\\n  dummy.appendChild(document.createTextNode('ABCD'));\\n  dummy.dir = 'rtl';\\n  dummy.style.fontSize = '14px';\\n  dummy.style.width = '4px';\\n  dummy.style.height = '1px';\\n  dummy.style.position = 'absolute';\\n  dummy.style.top = '-1000px';\\n  dummy.style.overflow = 'scroll';\\n  document.body.appendChild(dummy);\\n  cachedType = 'reverse';\\n\\n  if (dummy.scrollLeft > 0) {\\n    cachedType = 'default';\\n  } else {\\n    dummy.scrollLeft = 1;\\n\\n    if (dummy.scrollLeft === 0) {\\n      cachedType = 'negative';\\n    }\\n  }\\n\\n  document.body.removeChild(dummy);\\n  return cachedType;\\n} // Based on https://stackoverflow.com/a/24394376\\n\\n\\nfunction getNormalizedScrollLeft(element, direction) {\\n  var scrollLeft = element.scrollLeft; // Perform the calculations only when direction is rtl to avoid messing up the ltr bahavior\\n\\n  if (direction !== 'rtl') {\\n    return scrollLeft;\\n  }\\n\\n  var type = detectScrollType();\\n\\n  switch (type) {\\n    case 'negative':\\n      return element.scrollWidth - element.clientWidth + scrollLeft;\\n\\n    case 'reverse':\\n      return element.scrollWidth - element.clientWidth - scrollLeft;\\n\\n    default:\\n      return scrollLeft;\\n  }\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"detectScrollType\",\"cachedType\",\"dummy\",\"document\",\"createElement\",\"appendChild\",\"createTextNode\",\"dir\",\"style\",\"fontSize\",\"width\",\"height\",\"position\",\"top\",\"overflow\",\"body\",\"scrollLeft\",\"removeChild\",\"Object\",\"defineProperty\",\"value\",\"getNormalizedScrollLeft\",\"element\",\"direction\",\"type\",\"scrollWidth\",\"clientWidth\"]\n}\n"]