["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/date-fns/esm/isSameHour/index.js"],"~:js","shadow$provide.module$node_modules$date_fns$esm$isSameHour$index=function(global,require,module,exports){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}Object.defineProperty(exports,\"__esModule\",{value:!0});exports[\"default\"]=function(dirtyDateLeft,dirtyDateRight){(0,_index2[\"default\"])(2,arguments);var dateLeftStartOfHour=(0,_index[\"default\"])(dirtyDateLeft),dateRightStartOfHour=(0,_index[\"default\"])(dirtyDateRight);return dateLeftStartOfHour.getTime()===dateRightStartOfHour.getTime()};\nvar _index=_interopRequireDefault(require(\"module$node_modules$date_fns$esm$startOfHour$index\")),_index2=_interopRequireDefault(require(\"module$node_modules$date_fns$esm$_lib$requiredArgs$index\"))}","~:source","shadow$provide[\"module$node_modules$date_fns$esm$isSameHour$index\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = isSameHour;\n\nvar _index = _interopRequireDefault(require(\"../startOfHour/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * @name isSameHour\n * @category Hour Helpers\n * @summary Are the given dates in the same hour?\n *\n * @description\n * Are the given dates in the same hour?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same hour\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 2014 06:00:00 and 4 September 06:30:00 in the same hour?\n * var result = isSameHour(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 6, 30))\n * //=> true\n */\nfunction isSameHour(dirtyDateLeft, dirtyDateRight) {\n  (0, _index2[\"default\"])(2, arguments);\n  var dateLeftStartOfHour = (0, _index[\"default\"])(dirtyDateLeft);\n  var dateRightStartOfHour = (0, _index[\"default\"])(dirtyDateRight);\n  return dateLeftStartOfHour.getTime() === dateRightStartOfHour.getTime();\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$date_fns$esm$_lib$requiredArgs$index","~$shadow.js","~$module$node_modules$date_fns$esm$startOfHour$index"]],"~:properties",["^5",["__esModule","value"]],"~:compiled-at",1622535540994,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$date_fns$esm$isSameHour$index.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,kDAAA,CAAsE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAY9GC,QAASA,uBAAsB,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAAC,WAAP,CAAwBD,GAAxB,CAA8B,CAAE,UAAWA,GAAb,CAAvC,CATrCE,MAAAC,eAAA,CAAsBL,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CM,MAAO,CAAA,CADoC,CAA7C,CAGAN,QAAA,CAAQ,SAAR,CAAA,CA8BAO,QAAmB,CAACC,aAAD,CAAgBC,cAAhB,CAAgC,CACjD,CAAC,CAAA,CAAGC,OAAA,CAAQ,SAAR,CAAJ,EAAwB,CAAxB,CAA2BC,SAA3B,CACA,KAAIC,oBAAsB,CAAC,CAAA,CAAGC,MAAA,CAAO,SAAP,CAAJ,EAAuBL,aAAvB,CAA1B,CACIM,qBAAuB,CAAC,CAAA,CAAGD,MAAA,CAAO,SAAP,CAAJ,EAAuBJ,cAAvB,CAC3B,OAAOG,oBAAAG,QAAA,EAAP,GAAyCD,oBAAAC,QAAA,EAJQ,CA5BnD;IAAIF,OAASZ,sBAAA,CAAuBH,OAAA,CAAQ,oDAAR,CAAvB,CAAb,CAEIY,QAAUT,sBAAA,CAAuBH,OAAA,CAAQ,0DAAR,CAAvB,CAVgG;\",\n\"sources\":[\"node_modules/date-fns/esm/isSameHour/index.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$date_fns$esm$isSameHour$index\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports[\\\"default\\\"] = isSameHour;\\n\\nvar _index = _interopRequireDefault(require(\\\"../startOfHour/index.js\\\"));\\n\\nvar _index2 = _interopRequireDefault(require(\\\"../_lib/requiredArgs/index.js\\\"));\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\\"default\\\": obj }; }\\n\\n/**\\n * @name isSameHour\\n * @category Hour Helpers\\n * @summary Are the given dates in the same hour?\\n *\\n * @description\\n * Are the given dates in the same hour?\\n *\\n * ### v2.0.0 breaking changes:\\n *\\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\\n *\\n * @param {Date|Number} dateLeft - the first date to check\\n * @param {Date|Number} dateRight - the second date to check\\n * @returns {Boolean} the dates are in the same hour\\n * @throws {TypeError} 2 arguments required\\n *\\n * @example\\n * // Are 4 September 2014 06:00:00 and 4 September 06:30:00 in the same hour?\\n * var result = isSameHour(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 6, 30))\\n * //=> true\\n */\\nfunction isSameHour(dirtyDateLeft, dirtyDateRight) {\\n  (0, _index2[\\\"default\\\"])(2, arguments);\\n  var dateLeftStartOfHour = (0, _index[\\\"default\\\"])(dirtyDateLeft);\\n  var dateRightStartOfHour = (0, _index[\\\"default\\\"])(dirtyDateRight);\\n  return dateLeftStartOfHour.getTime() === dateRightStartOfHour.getTime();\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"Object\",\"defineProperty\",\"value\",\"isSameHour\",\"dirtyDateLeft\",\"dirtyDateRight\",\"_index2\",\"arguments\",\"dateLeftStartOfHour\",\"_index\",\"dateRightStartOfHour\",\"getTime\"]\n}\n"]