["^ ","~:output",["^ ","~:js","goog.provide('re_frame.fx');\nre_frame.fx.kind = new cljs.core.Keyword(null,\"fx\",\"fx\",-1237829572);\nif(cljs.core.truth_((re_frame.registrar.kinds.cljs$core$IFn$_invoke$arity$1 ? re_frame.registrar.kinds.cljs$core$IFn$_invoke$arity$1(re_frame.fx.kind) : re_frame.registrar.kinds.call(null,re_frame.fx.kind)))){\n} else {\nthrow (new Error(\"Assert failed: (re-frame.registrar/kinds kind)\"));\n}\nre_frame.fx.reg_fx = (function re_frame$fx$reg_fx(id,handler){\nreturn re_frame.registrar.register_handler(re_frame.fx.kind,id,handler);\n});\n/**\n * An interceptor whose `:after` actions the contents of `:effects`. As a result,\n *   this interceptor is Domino 3.\n * \n *   This interceptor is silently added (by reg-event-db etc) to the front of\n *   interceptor chains for all events.\n * \n *   For each key in `:effects` (a map), it calls the registered `effects handler`\n *   (see `reg-fx` for registration of effect handlers).\n * \n *   So, if `:effects` was:\n *    {:dispatch  [:hello 42]\n *     :db        {...}\n *     :undo      \"set flag\"}\n * \n *   it will call the registered effect handlers for each of the map's keys:\n *   `:dispatch`, `:undo` and `:db`. When calling each handler, provides the map\n *   value for that key - so in the example above the effect handler for :dispatch\n *   will be given one arg `[:hello 42]`.\n * \n *   You cannot rely on the ordering in which effects are executed, other than that\n *   `:db` is guaranteed to be executed first.\n */\nre_frame.fx.do_fx = re_frame.interceptor.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),new cljs.core.Keyword(null,\"do-fx\",\"do-fx\",1194163050),new cljs.core.Keyword(null,\"after\",\"after\",594996914),(function re_frame$fx$do_fx_after(context){\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar _STAR_current_trace_STAR__orig_val__77430 = re_frame.trace._STAR_current_trace_STAR_;\nvar _STAR_current_trace_STAR__temp_val__77431 = re_frame.trace.start_trace(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668),new cljs.core.Keyword(\"event\",\"do-fx\",\"event/do-fx\",1357330452)], null));\n(re_frame.trace._STAR_current_trace_STAR_ = _STAR_current_trace_STAR__temp_val__77431);\n\ntry{try{var effects = new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292).cljs$core$IFn$_invoke$arity$1(context);\nvar effects_without_db = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(effects,new cljs.core.Keyword(null,\"db\",\"db\",993250759));\nvar temp__5735__auto___77539 = new cljs.core.Keyword(null,\"db\",\"db\",993250759).cljs$core$IFn$_invoke$arity$1(effects);\nif(cljs.core.truth_(temp__5735__auto___77539)){\nvar new_db_77540 = temp__5735__auto___77539;\nvar fexpr__77433_77541 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,new cljs.core.Keyword(null,\"db\",\"db\",993250759),false);\n(fexpr__77433_77541.cljs$core$IFn$_invoke$arity$1 ? fexpr__77433_77541.cljs$core$IFn$_invoke$arity$1(new_db_77540) : fexpr__77433_77541.call(null,new_db_77540));\n} else {\n}\n\nvar seq__77438 = cljs.core.seq(effects_without_db);\nvar chunk__77439 = null;\nvar count__77440 = (0);\nvar i__77441 = (0);\nwhile(true){\nif((i__77441 < count__77440)){\nvar vec__77451 = chunk__77439.cljs$core$IIndexed$_nth$arity$2(null,i__77441);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__77451,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__77451,(1),null);\nvar temp__5733__auto___77543 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5733__auto___77543)){\nvar effect_fn_77544 = temp__5733__auto___77543;\n(effect_fn_77544.cljs$core$IFn$_invoke$arity$1 ? effect_fn_77544.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_77544.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\n}\n\n\nvar G__77545 = seq__77438;\nvar G__77546 = chunk__77439;\nvar G__77547 = count__77440;\nvar G__77548 = (i__77441 + (1));\nseq__77438 = G__77545;\nchunk__77439 = G__77546;\ncount__77440 = G__77547;\ni__77441 = G__77548;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__77438);\nif(temp__5735__auto__){\nvar seq__77438__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__77438__$1)){\nvar c__4556__auto__ = cljs.core.chunk_first(seq__77438__$1);\nvar G__77549 = cljs.core.chunk_rest(seq__77438__$1);\nvar G__77550 = c__4556__auto__;\nvar G__77551 = cljs.core.count(c__4556__auto__);\nvar G__77552 = (0);\nseq__77438 = G__77549;\nchunk__77439 = G__77550;\ncount__77440 = G__77551;\ni__77441 = G__77552;\ncontinue;\n} else {\nvar vec__77454 = cljs.core.first(seq__77438__$1);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__77454,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__77454,(1),null);\nvar temp__5733__auto___77553 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5733__auto___77553)){\nvar effect_fn_77554 = temp__5733__auto___77553;\n(effect_fn_77554.cljs$core$IFn$_invoke$arity$1 ? effect_fn_77554.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_77554.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\n}\n\n\nvar G__77555 = cljs.core.next(seq__77438__$1);\nvar G__77556 = null;\nvar G__77557 = (0);\nvar G__77558 = (0);\nseq__77438 = G__77555;\nchunk__77439 = G__77556;\ncount__77440 = G__77557;\ni__77441 = G__77558;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}finally {if(re_frame.trace.is_trace_enabled_QMARK_()){\nvar end__77158__auto___77559 = re_frame.interop.now();\nvar duration__77159__auto___77560 = (end__77158__auto___77559 - new cljs.core.Keyword(null,\"start\",\"start\",-355208981).cljs$core$IFn$_invoke$arity$1(re_frame.trace._STAR_current_trace_STAR_));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(re_frame.trace.traces,cljs.core.conj,cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"duration\",\"duration\",1444101068),duration__77159__auto___77560,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"end\",\"end\",-268185958),re_frame.interop.now()], 0)));\n\nre_frame.trace.run_tracing_callbacks_BANG_(end__77158__auto___77559);\n} else {\n}\n}}finally {(re_frame.trace._STAR_current_trace_STAR_ = _STAR_current_trace_STAR__orig_val__77430);\n}} else {\nvar effects = new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292).cljs$core$IFn$_invoke$arity$1(context);\nvar effects_without_db = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(effects,new cljs.core.Keyword(null,\"db\",\"db\",993250759));\nvar temp__5735__auto___77561 = new cljs.core.Keyword(null,\"db\",\"db\",993250759).cljs$core$IFn$_invoke$arity$1(effects);\nif(cljs.core.truth_(temp__5735__auto___77561)){\nvar new_db_77562 = temp__5735__auto___77561;\nvar fexpr__77458_77563 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,new cljs.core.Keyword(null,\"db\",\"db\",993250759),false);\n(fexpr__77458_77563.cljs$core$IFn$_invoke$arity$1 ? fexpr__77458_77563.cljs$core$IFn$_invoke$arity$1(new_db_77562) : fexpr__77458_77563.call(null,new_db_77562));\n} else {\n}\n\nvar seq__77460 = cljs.core.seq(effects_without_db);\nvar chunk__77461 = null;\nvar count__77462 = (0);\nvar i__77463 = (0);\nwhile(true){\nif((i__77463 < count__77462)){\nvar vec__77473 = chunk__77461.cljs$core$IIndexed$_nth$arity$2(null,i__77463);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__77473,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__77473,(1),null);\nvar temp__5733__auto___77564 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5733__auto___77564)){\nvar effect_fn_77565 = temp__5733__auto___77564;\n(effect_fn_77565.cljs$core$IFn$_invoke$arity$1 ? effect_fn_77565.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_77565.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\n}\n\n\nvar G__77566 = seq__77460;\nvar G__77567 = chunk__77461;\nvar G__77568 = count__77462;\nvar G__77569 = (i__77463 + (1));\nseq__77460 = G__77566;\nchunk__77461 = G__77567;\ncount__77462 = G__77568;\ni__77463 = G__77569;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__77460);\nif(temp__5735__auto__){\nvar seq__77460__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__77460__$1)){\nvar c__4556__auto__ = cljs.core.chunk_first(seq__77460__$1);\nvar G__77570 = cljs.core.chunk_rest(seq__77460__$1);\nvar G__77571 = c__4556__auto__;\nvar G__77572 = cljs.core.count(c__4556__auto__);\nvar G__77573 = (0);\nseq__77460 = G__77570;\nchunk__77461 = G__77571;\ncount__77462 = G__77572;\ni__77463 = G__77573;\ncontinue;\n} else {\nvar vec__77476 = cljs.core.first(seq__77460__$1);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__77476,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__77476,(1),null);\nvar temp__5733__auto___77574 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5733__auto___77574)){\nvar effect_fn_77575 = temp__5733__auto___77574;\n(effect_fn_77575.cljs$core$IFn$_invoke$arity$1 ? effect_fn_77575.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_77575.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\n}\n\n\nvar G__77576 = cljs.core.next(seq__77460__$1);\nvar G__77577 = null;\nvar G__77578 = (0);\nvar G__77579 = (0);\nseq__77460 = G__77576;\nchunk__77461 = G__77577;\ncount__77462 = G__77578;\ni__77463 = G__77579;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}\n})], 0));\nre_frame.fx.dispatch_later = (function re_frame$fx$dispatch_later(p__77479){\nvar map__77480 = p__77479;\nvar map__77480__$1 = (((((!((map__77480 == null))))?(((((map__77480.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__77480.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__77480):map__77480);\nvar effect = map__77480__$1;\nvar ms = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__77480__$1,new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733));\nvar dispatch = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__77480__$1,new cljs.core.Keyword(null,\"dispatch\",\"dispatch\",1319337009));\nif(((cljs.core.empty_QMARK_(dispatch)) || ((!(typeof ms === 'number'))))){\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch-later value:\",effect], 0));\n} else {\nreturn re_frame.interop.set_timeout_BANG_((function (){\nreturn re_frame.router.dispatch(dispatch);\n}),ms);\n}\n});\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"dispatch-later\",\"dispatch-later\",291951390),(function (value){\nif(cljs.core.map_QMARK_(value)){\nreturn re_frame.fx.dispatch_later(value);\n} else {\nvar seq__77497 = cljs.core.seq(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,value));\nvar chunk__77498 = null;\nvar count__77499 = (0);\nvar i__77500 = (0);\nwhile(true){\nif((i__77500 < count__77499)){\nvar effect = chunk__77498.cljs$core$IIndexed$_nth$arity$2(null,i__77500);\nre_frame.fx.dispatch_later(effect);\n\n\nvar G__77585 = seq__77497;\nvar G__77586 = chunk__77498;\nvar G__77587 = count__77499;\nvar G__77588 = (i__77500 + (1));\nseq__77497 = G__77585;\nchunk__77498 = G__77586;\ncount__77499 = G__77587;\ni__77500 = G__77588;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__77497);\nif(temp__5735__auto__){\nvar seq__77497__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__77497__$1)){\nvar c__4556__auto__ = cljs.core.chunk_first(seq__77497__$1);\nvar G__77589 = cljs.core.chunk_rest(seq__77497__$1);\nvar G__77590 = c__4556__auto__;\nvar G__77591 = cljs.core.count(c__4556__auto__);\nvar G__77592 = (0);\nseq__77497 = G__77589;\nchunk__77498 = G__77590;\ncount__77499 = G__77591;\ni__77500 = G__77592;\ncontinue;\n} else {\nvar effect = cljs.core.first(seq__77497__$1);\nre_frame.fx.dispatch_later(effect);\n\n\nvar G__77593 = cljs.core.next(seq__77497__$1);\nvar G__77594 = null;\nvar G__77595 = (0);\nvar G__77596 = (0);\nseq__77497 = G__77593;\nchunk__77498 = G__77594;\ncount__77499 = G__77595;\ni__77500 = G__77596;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"fx\",\"fx\",-1237829572),(function (seq_of_effects){\nif((!(cljs.core.sequential_QMARK_(seq_of_effects)))){\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: \\\":fx\\\" effect expects a seq, but was given \",cljs.core.type(seq_of_effects)], 0));\n} else {\nvar seq__77501 = cljs.core.seq(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,seq_of_effects));\nvar chunk__77502 = null;\nvar count__77503 = (0);\nvar i__77504 = (0);\nwhile(true){\nif((i__77504 < count__77503)){\nvar vec__77511 = chunk__77502.cljs$core$IIndexed$_nth$arity$2(null,i__77504);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__77511,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__77511,(1),null);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"db\",\"db\",993250759),effect_key)){\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: \\\":fx\\\" effect should not contain a :db effect\"], 0));\n} else {\n}\n\nvar temp__5733__auto___77597 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5733__auto___77597)){\nvar effect_fn_77598 = temp__5733__auto___77597;\n(effect_fn_77598.cljs$core$IFn$_invoke$arity$1 ? effect_fn_77598.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_77598.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: in \\\":fx\\\" effect found \",effect_key,\" which has no associated handler. Ignoring.\"], 0));\n}\n\n\nvar G__77599 = seq__77501;\nvar G__77600 = chunk__77502;\nvar G__77601 = count__77503;\nvar G__77602 = (i__77504 + (1));\nseq__77501 = G__77599;\nchunk__77502 = G__77600;\ncount__77503 = G__77601;\ni__77504 = G__77602;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__77501);\nif(temp__5735__auto__){\nvar seq__77501__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__77501__$1)){\nvar c__4556__auto__ = cljs.core.chunk_first(seq__77501__$1);\nvar G__77604 = cljs.core.chunk_rest(seq__77501__$1);\nvar G__77605 = c__4556__auto__;\nvar G__77606 = cljs.core.count(c__4556__auto__);\nvar G__77607 = (0);\nseq__77501 = G__77604;\nchunk__77502 = G__77605;\ncount__77503 = G__77606;\ni__77504 = G__77607;\ncontinue;\n} else {\nvar vec__77514 = cljs.core.first(seq__77501__$1);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__77514,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__77514,(1),null);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"db\",\"db\",993250759),effect_key)){\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: \\\":fx\\\" effect should not contain a :db effect\"], 0));\n} else {\n}\n\nvar temp__5733__auto___77608 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5733__auto___77608)){\nvar effect_fn_77609 = temp__5733__auto___77608;\n(effect_fn_77609.cljs$core$IFn$_invoke$arity$1 ? effect_fn_77609.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_77609.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: in \\\":fx\\\" effect found \",effect_key,\" which has no associated handler. Ignoring.\"], 0));\n}\n\n\nvar G__77610 = cljs.core.next(seq__77501__$1);\nvar G__77611 = null;\nvar G__77612 = (0);\nvar G__77613 = (0);\nseq__77501 = G__77610;\nchunk__77502 = G__77611;\ncount__77503 = G__77612;\ni__77504 = G__77613;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"dispatch\",\"dispatch\",1319337009),(function (value){\nif((!(cljs.core.vector_QMARK_(value)))){\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch value. Expected a vector, but got:\",value], 0));\n} else {\nreturn re_frame.router.dispatch(value);\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"dispatch-n\",\"dispatch-n\",-504469236),(function (value){\nif((!(cljs.core.sequential_QMARK_(value)))){\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch-n value. Expected a collection, but got:\",value], 0));\n} else {\nvar seq__77519 = cljs.core.seq(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,value));\nvar chunk__77520 = null;\nvar count__77521 = (0);\nvar i__77522 = (0);\nwhile(true){\nif((i__77522 < count__77521)){\nvar event = chunk__77520.cljs$core$IIndexed$_nth$arity$2(null,i__77522);\nre_frame.router.dispatch(event);\n\n\nvar G__77614 = seq__77519;\nvar G__77615 = chunk__77520;\nvar G__77616 = count__77521;\nvar G__77617 = (i__77522 + (1));\nseq__77519 = G__77614;\nchunk__77520 = G__77615;\ncount__77521 = G__77616;\ni__77522 = G__77617;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__77519);\nif(temp__5735__auto__){\nvar seq__77519__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__77519__$1)){\nvar c__4556__auto__ = cljs.core.chunk_first(seq__77519__$1);\nvar G__77622 = cljs.core.chunk_rest(seq__77519__$1);\nvar G__77623 = c__4556__auto__;\nvar G__77624 = cljs.core.count(c__4556__auto__);\nvar G__77625 = (0);\nseq__77519 = G__77622;\nchunk__77520 = G__77623;\ncount__77521 = G__77624;\ni__77522 = G__77625;\ncontinue;\n} else {\nvar event = cljs.core.first(seq__77519__$1);\nre_frame.router.dispatch(event);\n\n\nvar G__77626 = cljs.core.next(seq__77519__$1);\nvar G__77627 = null;\nvar G__77628 = (0);\nvar G__77629 = (0);\nseq__77519 = G__77626;\nchunk__77520 = G__77627;\ncount__77521 = G__77628;\ni__77522 = G__77629;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"deregister-event-handler\",\"deregister-event-handler\",-1096518994),(function (value){\nvar clear_event = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(re_frame.registrar.clear_handlers,re_frame.events.kind);\nif(cljs.core.sequential_QMARK_(value)){\nvar seq__77527 = cljs.core.seq(value);\nvar chunk__77528 = null;\nvar count__77529 = (0);\nvar i__77530 = (0);\nwhile(true){\nif((i__77530 < count__77529)){\nvar event = chunk__77528.cljs$core$IIndexed$_nth$arity$2(null,i__77530);\nclear_event(event);\n\n\nvar G__77635 = seq__77527;\nvar G__77636 = chunk__77528;\nvar G__77637 = count__77529;\nvar G__77638 = (i__77530 + (1));\nseq__77527 = G__77635;\nchunk__77528 = G__77636;\ncount__77529 = G__77637;\ni__77530 = G__77638;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__77527);\nif(temp__5735__auto__){\nvar seq__77527__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__77527__$1)){\nvar c__4556__auto__ = cljs.core.chunk_first(seq__77527__$1);\nvar G__77639 = cljs.core.chunk_rest(seq__77527__$1);\nvar G__77640 = c__4556__auto__;\nvar G__77641 = cljs.core.count(c__4556__auto__);\nvar G__77642 = (0);\nseq__77527 = G__77639;\nchunk__77528 = G__77640;\ncount__77529 = G__77641;\ni__77530 = G__77642;\ncontinue;\n} else {\nvar event = cljs.core.first(seq__77527__$1);\nclear_event(event);\n\n\nvar G__77643 = cljs.core.next(seq__77527__$1);\nvar G__77644 = null;\nvar G__77645 = (0);\nvar G__77646 = (0);\nseq__77527 = G__77643;\nchunk__77528 = G__77644;\ncount__77529 = G__77645;\ni__77530 = G__77646;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n} else {\nreturn clear_event(value);\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"db\",\"db\",993250759),(function (value){\nif((!((cljs.core.deref(re_frame.db.app_db) === value)))){\nreturn cljs.core.reset_BANG_(re_frame.db.app_db,value);\n} else {\nreturn null;\n}\n}));\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","re_frame/fx.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",16],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.spec.gen.alpha","~$cljs.spec.gen.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$re-frame.fx","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$re-frame.interop","^Q","~$re-frame.interceptor","^R","~$re-frame.events","^S","~$re-frame.trace","^T","~$re-frame.registrar","^U","~$cljs.core","^V","~$goog","^W","~$router","~$re-frame.router","^Y","^Y","~$trace","^T","~$events","^S","~$re-frame.loggers","^10","~$re-frame.db","^11"],"~:seen",["^J",["~:require"]],"~:uses",["^ ","~$app-db","^11","~$->interceptor","^R","~$set-timeout!","^Q","~$get-handler","^U","~$clear-handlers","^U","~$register-handler","^U","~$console","^10"],"~:require-macros",["^ ","^T","^T","^Z","^T","^V","^V"],"~:form",["~#list",["~$ns","^L",["^1>",["^13",["^Y","~:as","^X"],["^11","~:refer",["^15"]],["^R","^1A",["^16"]],["^Q","^1A",["^17"]],["^S","^1@","^["],["^U","^1A",["^18","^19","^1:"]],["^10","^1A",["^1;"]],["^T","^1@","^Z","~:include-macros",true]]]]],"~:flags",["^ ","^13",["^J",[]]],"~:js-deps",["^ "],"~:deps",["^W","^V","^Y","^11","^R","^Q","^S","^U","^10","^T"]],"^N","^L","~:resource-id",["~:shadow.build.classpath/resource","re_frame/fx.cljc"],"~:compiled-at",1622535562017,"~:resource-name","re_frame/fx.cljc","~:warnings",[],"~:source","(ns re-frame.fx\n  (:require\n    [re-frame.router      :as router]\n    [re-frame.db          :refer [app-db]]\n    [re-frame.interceptor :refer [->interceptor]]\n    [re-frame.interop     :refer [set-timeout!]]\n    [re-frame.events      :as events]\n    [re-frame.registrar   :refer [get-handler clear-handlers register-handler]]\n    [re-frame.loggers     :refer [console]]\n    [re-frame.trace :as trace :include-macros true]))\n\n\n;; -- Registration ------------------------------------------------------------\n\n(def kind :fx)\n(assert (re-frame.registrar/kinds kind))\n\n(defn reg-fx\n  [id handler]\n  (register-handler kind id handler))\n\n;; -- Interceptor -------------------------------------------------------------\n\n(def do-fx\n  \"An interceptor whose `:after` actions the contents of `:effects`. As a result,\n  this interceptor is Domino 3.\n\n  This interceptor is silently added (by reg-event-db etc) to the front of\n  interceptor chains for all events.\n\n  For each key in `:effects` (a map), it calls the registered `effects handler`\n  (see `reg-fx` for registration of effect handlers).\n\n  So, if `:effects` was:\n      {:dispatch  [:hello 42]\n       :db        {...}\n       :undo      \\\"set flag\\\"}\n\n  it will call the registered effect handlers for each of the map's keys:\n  `:dispatch`, `:undo` and `:db`. When calling each handler, provides the map\n  value for that key - so in the example above the effect handler for :dispatch\n  will be given one arg `[:hello 42]`.\n\n  You cannot rely on the ordering in which effects are executed, other than that\n  `:db` is guaranteed to be executed first.\"\n  (->interceptor\n    :id :do-fx\n    :after (fn do-fx-after\n             [context]\n             (trace/with-trace\n               {:op-type :event/do-fx}\n               (let [effects            (:effects context)\n                     effects-without-db (dissoc effects :db)]\n                 ;; :db effect is guaranteed to be handled before all other effects.\n                 (when-let [new-db (:db effects)]\n                   ((get-handler kind :db false) new-db))\n                 (doseq [[effect-key effect-value] effects-without-db]\n                   (if-let [effect-fn (get-handler kind effect-key false)]\n                     (effect-fn effect-value)\n                     (console :warn \"re-frame: no handler registered for effect:\" effect-key \". Ignoring.\"))))))))\n\n;; -- Builtin Effect Handlers  ------------------------------------------------\n\n;; :dispatch-later\n;;\n;; `dispatch` one or more events after given delays. Expects a collection\n;; of maps with two keys:  :`ms` and `:dispatch`\n;;\n;; usage:\n;;\n;;    {:dispatch-later [{:ms 200 :dispatch [:event-id \"param\"]}    ;;  in 200ms do this: (dispatch [:event-id \"param\"])\n;;                      {:ms 100 :dispatch [:also :this :in :100ms]}]}\n;;\n;; Note: nil entries in the collection are ignored which means events can be added\n;; conditionally:\n;;    {:dispatch-later [ (when (> 3 5) {:ms 200 :dispatch [:conditioned-out]})\n;;                       {:ms 100 :dispatch [:another-one]}]}\n;;\n(defn dispatch-later\n  [{:keys [ms dispatch] :as effect}]\n  (if (or (empty? dispatch) (not (number? ms)))\n    (console :error \"re-frame: ignoring bad :dispatch-later value:\" effect)\n    (set-timeout! #(router/dispatch dispatch) ms)))\n\n(reg-fx\n  :dispatch-later\n  (fn [value]\n    (if (map? value)\n      (dispatch-later value)\n      (doseq [effect (remove nil? value)]\n        (dispatch-later effect)))))\n\n;; :fx\n;;\n;; Handle one or more effects. Expects a collection of vectors (tuples) of the\n;; form [effect-key effect-value]. `nil` entries in the collection are ignored\n;; so effects can be added conditionally.\n;;\n;; usage:\n;;\n;; {:fx [[:dispatch [:event-id \"param\"]]\n;;       nil\n;;       [:http-xhrio {:method :post\n;;                     ...}]]}\n;;\n\n(reg-fx\n  :fx\n  (fn [seq-of-effects]\n    (if-not (sequential? seq-of-effects)\n      (console :error \"re-frame: \\\":fx\\\" effect expects a seq, but was given \" (type seq-of-effects))\n      (doseq [[effect-key effect-value] (remove nil? seq-of-effects)]\n        (when (= :db effect-key)\n          (console :warn \"re-frame: \\\":fx\\\" effect should not contain a :db effect\"))\n        (if-let [effect-fn (get-handler kind effect-key false)]\n          (effect-fn effect-value)\n          (console :warn \"re-frame: in \\\":fx\\\" effect found \" effect-key \" which has no associated handler. Ignoring.\"))))))\n\n;; :dispatch\n;;\n;; `dispatch` one event. Expects a single vector.\n;;\n;; usage:\n;;   {:dispatch [:event-id \"param\"] }\n\n(reg-fx\n  :dispatch\n  (fn [value]\n    (if-not (vector? value)\n      (console :error \"re-frame: ignoring bad :dispatch value. Expected a vector, but got:\" value)\n      (router/dispatch value))))\n\n\n;; :dispatch-n\n;;\n;; `dispatch` more than one event. Expects a list or vector of events. Something for which\n;; sequential? returns true.\n;;\n;; usage:\n;;   {:dispatch-n (list [:do :all] [:three :of] [:these])}\n;;\n;; Note: nil events are ignored which means events can be added\n;; conditionally:\n;;    {:dispatch-n (list (when (> 3 5) [:conditioned-out])\n;;                       [:another-one])}\n;;\n(reg-fx\n  :dispatch-n\n  (fn [value]\n    (if-not (sequential? value)\n      (console :error \"re-frame: ignoring bad :dispatch-n value. Expected a collection, but got:\" value)\n      (doseq [event (remove nil? value)] (router/dispatch event)))))\n\n\n;; :deregister-event-handler\n;;\n;; removes a previously registered event handler. Expects either a single id (\n;; typically a namespaced keyword), or a seq of ids.\n;;\n;; usage:\n;;   {:deregister-event-handler :my-id)}\n;; or:\n;;   {:deregister-event-handler [:one-id :another-id]}\n;;\n(reg-fx\n  :deregister-event-handler\n  (fn [value]\n    (let [clear-event (partial clear-handlers events/kind)]\n      (if (sequential? value)\n        (doseq [event value] (clear-event event))\n        (clear-event value)))))\n\n\n;; :db\n;;\n;; reset! app-db with a new value. `value` is expected to be a map.\n;;\n;; usage:\n;;   {:db  {:key1 value1 key2 value2}}\n;;\n(reg-fx\n  :db\n  (fn [value]\n    (if-not (identical? @app-db value)\n      (reset! app-db value))))\n\n","~:reader-features",["^J",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["re-frame.fx/kind","js/Error","re-frame.registrar/kinds","re-frame.fx/reg-fx","id","handler","re-frame.registrar/register-handler","re-frame.fx/do-fx","re_frame.interceptor.__GT_interceptor","context","re-frame.trace/is-trace-enabled?","*current-trace*-orig-val__77430","re-frame.trace/*current-trace*","*current-trace*-temp-val__77431","re-frame.trace/start-trace","end__77158__auto__","re-frame.interop/now","duration__77159__auto__","cljs.core.swap_BANG_","re-frame.trace/traces","cljs.core/conj","cljs.core.assoc","re-frame.trace/run-tracing-callbacks!","effects","effects-without-db","cljs.core.dissoc","temp__5735__auto__","new-db","fexpr__77433","fexpr__77458","re_frame.registrar.get_handler","seq__77438","cljs.core/seq","chunk__77439","count__77440","i__77441","vec__77451","cljs.core.nth","cljs.core/chunked-seq?","c__4556__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","vec__77454","cljs.core/first","cljs.core/next","seq__77460","chunk__77461","count__77462","i__77463","vec__77473","vec__77476","effect-key","effect-value","temp__5733__auto__","effect-fn","re_frame.loggers.console","p__77479","map__77480","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","re-frame.fx/dispatch-later","ms","dispatch","effect","cljs.core/empty?","re-frame.interop/set-timeout!","re-frame.router/dispatch","value","cljs.core/map?","seq__77497","chunk__77498","count__77499","i__77500","cljs.core.remove","cljs.core/nil?","seq-of-effects","cljs.core/sequential?","cljs.core/type","seq__77501","chunk__77502","count__77503","i__77504","vec__77511","vec__77514","cljs.core._EQ_","cljs.core/vector?","seq__77519","chunk__77520","count__77521","i__77522","event","clear-event","cljs.core.partial","re-frame.registrar/clear-handlers","re-frame.events/kind","seq__77527","chunk__77528","count__77529","i__77530","cljs.core/deref","re-frame.db/app-db","cljs.core/reset!"]],"~:used-vars",["^J",["~$re-frame.fx/kind","~$cljs.core/sequential?","~$re-frame.fx/reg-fx","~$re-frame.db/app-db","~$re-frame.fx/do-fx","~$cljs.core/vector?","~$cljs.core/=","~$re-frame.trace/traces","~$re-frame.interceptor/->interceptor","~$cljs.core/count","~$cljs.core/deref","~$re-frame.registrar/kinds","~$re-frame.fx/dispatch-later","~$re-frame.loggers/console","~$cljs.core/chunk-rest","~$re-frame.interop/now","~$cljs.core/empty?","~$cljs.core/map?","~$cljs.core/reset!","~$re-frame.registrar/register-handler","~$cljs.core/conj","~$cljs.core/swap!","~$re-frame.trace/is-trace-enabled?","~$re-frame.trace/*current-trace*","~$cljs.core/next","~$cljs.core/not","~$cljs.core/assoc","~$re-frame.router/dispatch","~$re-frame.trace/run-tracing-callbacks!","~$re-frame.interop/set-timeout!","~$js/Error","~$cljs.core/type","~$cljs.core/chunked-seq?"]]],"~:cache-keys",["~#cmap",[["^1G","reagent/impl/batching.cljs"],["71172e9be671755156730f86af647b7c667093fa","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^J",[]],"~:deps-syms",["^W","^V","~$reagent.debug","~$reagent.impl.util"]]],["^1G","goog/dom/tagname.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","~$goog.dom.HtmlElement"]]],["^1G","goog/labs/useragent/platform.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","~$goog.labs.userAgent.util","~$goog.string"]]],["^1G","goog/math/math.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","~$goog.array","~$goog.asserts"]]],["^1G","goog/html/trustedtypes.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W"]]],["^1G","goog/events/eventtype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","~$goog.events.BrowserFeature","~$goog.userAgent"]]],["^1G","goog/labs/useragent/browser.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^2S","^2Q","~$goog.object","~$goog.string.internal"]]],["^1G","goog/html/safeurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^2T","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^2X"]]],["^1G","re_frame/loggers.cljc"],["0e1666916193eaabc7012c4a18450a0d00336095","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^V","~$clojure.set"]]],["^1G","goog/array/array.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^2T"]]],["~:shadow.build.npm/resource","node_modules/prop-types/checkPropTypes.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","39149bb2f5bbdb878453e592f8d1e15a126e08f5","3180f5f58c360a2e36c5ff354213b3ff22f43d1b","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["~$shadow.js","~$module$node_modules$prop_types$lib$ReactPropTypesSecret"]]],["^1G","reagent/impl/util.cljs"],["71172e9be671755156730f86af647b7c667093fa","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^V","~$clojure.string","~$clojure.walk","^2W","^2N"]]],["^1G","goog/useragent/useragent.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^2Q","~$goog.reflect","^2R"]]],["^1G","re_frame/router.cljc"],["0e1666916193eaabc7012c4a18450a0d00336095","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^V","^S","^Q","^10","^T"]]],["^1G","goog/debug/error.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W"]]],["^1G","goog/events/events.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^2T","~$goog.debug.entryPointRegistry","~$goog.events.BrowserEvent","^2U","~$goog.events.Listenable","~$goog.events.ListenerMap"]]],["^1G","re_frame/registrar.cljc"],["0e1666916193eaabc7012c4a18450a0d00336095","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^V","^Q","^10","~$re-frame.settings"]]],["^1G","goog/events/browserfeature.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^2V"]]],["^1G","goog/dom/nodetype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W"]]],["^1G","reagent/ratom.cljs"],["71172e9be671755156730f86af647b7c667093fa","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^V","^2O","^2N","~$reagent.impl.batching","^33","^2W"]]],["^1G","re_frame/interop.cljs"],["0e1666916193eaabc7012c4a18450a0d00336095","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^V","~$goog.async.nextTick","~$goog.events","~$reagent.core","~$reagent.ratom"]]],["^1G","goog/disposable/disposable.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","~$goog.disposable.IDisposable"]]],["^1G","goog/string/typedstring.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W"]]],["^34","node_modules/react/index.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","39149bb2f5bbdb878453e592f8d1e15a126e08f5","a69a7f3d4a4636bf9035bc53c05b2d99a7b8af7f","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^35","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"]]],["^1G","shadow/js.js"],["e789e354d6afe7fd62e5f7505a5a195575db182b","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W"]]],["^1G","goog/object/object.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W"]]],["^1G","reagent/impl/template.cljs"],["71172e9be671755156730f86af647b7c667093fa","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^V","^C","^37","^2O","~$reagent.impl.component","^3B","~$reagent.impl.input","~$reagent.impl.protocols","^3F","^2N","^2W"]]],["^1G","goog/dom/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^2T"]]],"~:SHADOW-TIMESTAMP",[1619013417000,1619013417000,1615476662000],["^34","node_modules/react/cjs/react.development.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","39149bb2f5bbdb878453e592f8d1e15a126e08f5","0c9d0acaa1ab1e24333c71607d0fa0609193e7d7","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^35","~$module$node_modules$object_assign$index","~$module$node_modules$prop_types$checkPropTypes"]]],["^1G","re_frame/events.cljc"],["0e1666916193eaabc7012c4a18450a0d00336095","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^V","^11","~$re-frame.utils","^Q","^U","^10","^R","^T"]]],["^1G","goog/math/long.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^2T","^3<"]]],["^1G","goog/events/listener.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","~$goog.events.ListenableKey"]]],["^1G","goog/html/trustedresourceurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^2T","~$goog.html.trustedtypes","^2[","^30","^31","^32"]]],["^1G","goog/events/listenermap.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^2S","~$goog.events.Listener","^2W"]]],["^1G","goog/events/eventid.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W"]]],["^1G","goog/string/internal.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W"]]],["^1G","goog/functions/functions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W"]]],["^1G","goog/html/safestyle.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^2S","^2T","~$goog.html.SafeUrl","^31","^32","^2X"]]],["^1G","goog/dom/safe.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^2T","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^3T","^2Z","~$goog.html.uncheckedconversions","^31","^2X"]]],["^1G","reagent/impl/component.cljs"],["71172e9be671755156730f86af647b7c667093fa","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^V","^2W","^C","^2O","^3B","^3L","^3F","^2N"]]],["^1G","clojure/walk.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^V"]]],["^1G","goog/structs/map.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1G","goog/html/safehtml.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^2S","^2T","~$goog.dom.TagName","~$goog.dom.tags","^3X","^3Y","~$goog.html.SafeStyleSheet","^3T","^2Z","^3R","^2[","^30","^39","^2W","^31","^32","^2X"]]],["^1G","goog/dom/tags.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^2W"]]],["^1G","goog/math/size.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W"]]],["^1G","goog/labs/useragent/engine.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^2S","^2Q","^2R"]]],["^1G","re_frame/settings.cljc"],["0e1666916193eaabc7012c4a18450a0d00336095","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^V","^Q","^10"]]],["^1G","goog/dom/dom.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^2S","^2T","~$goog.dom.BrowserFeature","~$goog.dom.NodeType","^41","~$goog.dom.safe","^3W","^3Z","~$goog.math.Coordinate","~$goog.math.Size","^2W","^2R","~$goog.string.Unicode","^2V"]]],["^1G","goog/asserts/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","~$goog.debug.Error","^45"]]],["^1G","reagent/impl/protocols.cljs"],["71172e9be671755156730f86af647b7c667093fa","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^V"]]],["^1G","goog/uri/uri.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^2S","^2T","^2R","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1G","goog/i18n/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W"]]],["^34","node_modules/object-assign/index.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","39149bb2f5bbdb878453e592f8d1e15a126e08f5","519ffd5a4c91b67302cc9947b794966d629860cd","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^35"]]],["^1G","re_frame/db.cljc"],["0e1666916193eaabc7012c4a18450a0d00336095","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^V","^Q"]]],["^1G","goog/disposable/idisposable.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W"]]],["^1G","goog/fs/url.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W"]]],["^1G","goog/base.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",[]]],["^1G","goog/structs/structs.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^2S","^2W"]]],["^1G","clojure/string.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^V","^2R","~$goog.string.StringBuffer"]]],["^34","node_modules/react/cjs/react.production.min.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","39149bb2f5bbdb878453e592f8d1e15a126e08f5","a25ef7d1b1992294ca65e96d70e1be7f70977b13","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^35","^3N"]]],["^1G","goog/debug/entrypointregistry.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^2T"]]],["^1G","goog/string/string.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^46","^3Z","^31","^2X"]]],["^1G","re_frame/interceptor.cljc"],["0e1666916193eaabc7012c4a18450a0d00336095","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^V","^10","^Q","^T","^33"]]],["^1G","goog/reflect/reflect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W"]]],["^1G","goog/labs/useragent/util.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^2X"]]],["^1G","reagent/core.cljs"],["71172e9be671755156730f86af647b7c667093fa","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^V","^C","~$reagent.impl.template","^3J","^2O","^3B","^3L","^3F","^2N"]]],["^1G","goog/debug/debug.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^2S","~$goog.debug.errorcontext","^2V"]]],["^1G","goog/string/stringbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W"]]],["^1G","goog/math/coordinate.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","~$goog.math"]]],["^1G","goog/debug/errorcontext.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W"]]],["^1G","goog/iter/iter.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^2S","^2T","^3V","^4C"]]],["^1G","goog/async/nexttick.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^3=","~$goog.dom","^41","^46","^3V","^3W","^2Z","^39","^3:","^31"]]],["^1G","goog/html/uncheckedconversions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^2T","^3W","^3X","^3Y","^43","^3T","^2Z","^31","^2X"]]],["^1G","re_frame/utils.cljc"],["0e1666916193eaabc7012c4a18450a0d00336095","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^V","^10"]]],["^1G","re_frame/fx.cljc"],["0e1666916193eaabc7012c4a18450a0d00336095","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^V","^Y","^11","^R","^Q","^S","^U","^10","^T"]]],["^34","node_modules/prop-types/lib/ReactPropTypesSecret.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","39149bb2f5bbdb878453e592f8d1e15a126e08f5","4eec230c5b56ef580ea9c3e7ae6358ba1f8bdbec","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^35"]]],["^1G","reagent/impl/input.cljs"],["71172e9be671755156730f86af647b7c667093fa","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^V","^3J","^3B","^3L"]]],["^1G","goog/events/event.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","~$goog.Disposable","~$goog.events.EventId"]]],["^1G","goog/dom/htmlelement.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W"]]],["^1G","cljs/core.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","~$goog.math.Long","~$goog.math.Integer","^2R","^2W","^2S","~$goog.Uri","^4@"]]],["^1G","goog/html/safescript.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^2T","^3R","^31","^32"]]],["^1G","reagent/debug.cljs"],["71172e9be671755156730f86af647b7c667093fa","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^V"]]],["^1G","goog/html/safestylesheet.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^2S","^2T","^3Y","^2W","^31","^32","^2X"]]],["^1G","goog/events/browserevent.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","~$goog.debug","^2U","~$goog.events.Event","~$goog.events.EventType","^3<","^2V"]]],["^1G","goog/math/integer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^3<"]]],["^1G","goog/dom/browserfeature.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^2V"]]],["^1G","clojure/set.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^V"]]],["^1G","goog/uri/utils.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^2S","^2T","^2R"]]],["^1G","goog/string/const.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^2T","^32"]]],["^1G","goog/events/listenable.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^4F"]]],["^1G","re_frame/trace.cljc"],["0e1666916193eaabc7012c4a18450a0d00336095","^2J",["^ ","^2K",null,"^2L",["^J",[]],"^2M",["^W","^V","^Q","^10","^3V"]]]]],"~:clj-info",["^ ","jar:file:/home/zeinab/.m2/repository/reagent/reagent/1.0.0-alpha2/reagent-1.0.0-alpha2.jar!/reagent/interop.clj",1617273363000,"jar:file:/home/zeinab/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1612959675000,"jar:file:/home/zeinab/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1612959675000,"jar:file:/home/zeinab/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/analyzer.cljc",1615476662000,"jar:file:/home/zeinab/.m2/repository/binaryage/devtools/1.0.2/devtools-1.0.2.jar!/devtools/defaults.clj",1615476712000,"jar:file:/home/zeinab/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1614164416000,"jar:file:/home/zeinab/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map/base64.clj",1615476662000,"jar:file:/home/zeinab/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1614164416000,"jar:file:/home/zeinab/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1612959675000,"jar:file:/home/zeinab/.m2/repository/re-frame/re-frame/1.1.1/re-frame-1.1.1.jar!/re_frame/interop.clj",1619000320000,"jar:file:/home/zeinab/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1612959675000,"jar:file:/home/zeinab/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/util.cljc",1615476662000,"jar:file:/home/zeinab/.m2/repository/net/cgrand/macrovich/0.2.1/macrovich-0.2.1.jar!/net/cgrand/macrovich.cljc",1614579236000,"jar:file:/home/zeinab/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/compiler.cljc",1615476662000,"jar:file:/home/zeinab/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/js_deps.cljc",1615476662000,"jar:file:/home/zeinab/.m2/repository/reagent/reagent/1.0.0-alpha2/reagent-1.0.0-alpha2.jar!/reagent/debug.clj",1617273363000,"jar:file:/home/zeinab/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1614164416000,"jar:file:/home/zeinab/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map.clj",1615476662000,"jar:file:/home/zeinab/.m2/repository/reagent/reagent/1.0.0-alpha2/reagent-1.0.0-alpha2.jar!/reagent/core.clj",1617273363000,"jar:file:/home/zeinab/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/env.cljc",1615476662000,"jar:file:/home/zeinab/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1612959676000,"jar:file:/home/zeinab/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1614164416000,"jar:file:/home/zeinab/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1614164416000,"jar:file:/home/zeinab/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/core.cljc",1615476662000,"jar:file:/home/zeinab/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1614164416000,"jar:file:/home/zeinab/.m2/repository/re-frame/re-frame/1.1.1/re-frame-1.1.1.jar!/re_frame/trace.cljc",1619000320000,"jar:file:/home/zeinab/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1614164416000,"jar:file:/home/zeinab/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1612959675000,"jar:file:/home/zeinab/.m2/repository/reagent/reagent/1.0.0-alpha2/reagent-1.0.0-alpha2.jar!/reagent/ratom.clj",1617273363000,"jar:file:/home/zeinab/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map/base64_vlq.clj",1615476662000,"jar:file:/home/zeinab/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/externs.clj",1615476662000,"jar:file:/home/zeinab/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/tagged_literals.cljc",1615476662000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","re_frame/fx.cljc","^7",1,"^8",5,"^9",1,"^:",16],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G"],"^H",null,"^I",["^J",[]],"^K","^L","^O",null,"^P",["^ ","^Q","^Q","^R","^R","^S","^S","^T","^T","^U","^U","^V","^V","^W","^W","^X","^Y","^Y","^Y","^Z","^T","^[","^S","^10","^10","^11","^11"],"^12",["^J",["^13"]],"~:shadow/js-access-global",["^J",["Error"]],"^14",["^ ","^15","^11","^16","^R","^17","^Q","^18","^U","^19","^U","^1:","^U","^1;","^10"],"~:defs",["^ ","~$kind",["^ ","^K","^1S","^6","re_frame/fx.cljc","^7",15,"^8",1,"^9",15,"^:",10,"^5",["^ ","^6","re_frame/fx.cljc","^7",15,"^8",6,"^9",15,"^:",10],"~:tag","~$cljs.core/Keyword"],"~$reg-fx",["^ ","~:protocol-inline",null,"^5",["^ ","^6","re_frame/fx.cljc","^7",18,"^8",7,"^9",18,"^:",13,"~:arglists",["^1>",["~$quote",["^1>",[["~$id","~$handler"]]]]]],"^K","^1U","^6","re_frame/fx.cljc","^:",13,"~:method-params",["^1>",[["^5L","^5M"]]],"~:protocol-impl",null,"~:arglists-meta",["^1>",[null,null]],"^8",1,"~:variadic?",false,"^7",18,"~:ret-tag","~$any","^9",18,"~:max-fixed-arity",2,"~:fn-var",true,"^5J",["^1>",["^5K",["^1>",[["^5L","^5M"]]]]]],"~$do-fx",["^ ","^5",["^ ","^6","re_frame/fx.cljc","^7",24,"^8",6,"^9",24,"^:",11],"^K","^1W","^6","re_frame/fx.cljc","^:",11,"^8",1,"^7",24,"^9",24,"^5F","~$cljs.core/IMap","~:doc","An interceptor whose `:after` actions the contents of `:effects`. As a result,\n  this interceptor is Domino 3.\n\n  This interceptor is silently added (by reg-event-db etc) to the front of\n  interceptor chains for all events.\n\n  For each key in `:effects` (a map), it calls the registered `effects handler`\n  (see `reg-fx` for registration of effect handlers).\n\n  So, if `:effects` was:\n      {:dispatch  [:hello 42]\n       :db        {...}\n       :undo      \"set flag\"}\n\n  it will call the registered effect handlers for each of the map's keys:\n  `:dispatch`, `:undo` and `:db`. When calling each handler, provides the map\n  value for that key - so in the example above the effect handler for :dispatch\n  will be given one arg `[:hello 42]`.\n\n  You cannot rely on the ordering in which effects are executed, other than that\n  `:db` is guaranteed to be executed first."],"~$dispatch-later",["^ ","^5I",null,"^5",["^ ","^6","re_frame/fx.cljc","^7",79,"^8",7,"^9",79,"^:",21,"^5J",["^1>",["^5K",["^1>",[[["^ ","~:keys",["~$ms","~$dispatch"],"^1@","~$effect"]]]]]]],"^K","^23","^6","re_frame/fx.cljc","^:",21,"^5N",["^1>",[["~$p__77479"]]],"^5O",null,"^5P",["^1>",[null,null]],"^8",1,"^5Q",false,"^7",79,"^5R",["^J",["^5S","~$js"]],"^9",79,"^5T",1,"^5U",true,"^5J",["^1>",["^5K",["^1>",[[["^ ","^5Z",["^5[","^60"],"^1@","^61"]]]]]]]],"^1<",["^ ","^T","^T","^Z","^T","^V","^V"],"~:cljs.analyzer/constants",["^ ","^12",["^J",["~:db","~:warn","~:do-fx","~:start","~:dispatch-n","~:duration","~:deregister-event-handler","~:dispatch","~:after","~:event/do-fx","~:id","~:effects","~:error","~:end","~:ms","~:fx","~:op-type","~:dispatch-later"]],"~:order",["^6D","^6?","^67","^6=","^6E","^6>","^68","^6:","^6B","^6@","^65","^66","^6C","^6<","^6A","^6F","^69","^6;"]],"^1C",["^ ","^13",["^J",[]]],"^1D",["^ "],"^1E",["^W","^V","^Y","^11","^R","^Q","^S","^U","^10","^T"]],"^N","^L","~:ns-specs",["^ "],"~:ns-spec-vars",["^J",[]],"~:compiler-options",["^2I",[["^6J","~:static-fns"],true,["^6J","~:shadow-tweaks"],null,["^6J","~:source-map-inline"],null,["^6J","~:elide-asserts"],false,["^6J","~:optimize-constants"],null,["^6J","^1J"],null,["^6J","~:external-config"],null,["^6J","~:tooling-config"],null,["^6J","~:emit-constants"],null,["^6J","~:load-tests"],null,["^6J","~:form-size-threshold"],null,["^6J","~:data-readers"],null,["^6J","~:infer-externs"],"~:auto",["^6J","^1L"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^6J","~:fn-invoke-direct"],null,["^6J","~:source-map"],"/dev/null"]]]