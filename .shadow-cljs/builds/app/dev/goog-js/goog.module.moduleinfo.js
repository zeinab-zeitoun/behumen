["^ ","~:resource-id",["~:shadow.build.classpath/resource","goog/module/moduleinfo.js"],"~:js","goog.provide(\"goog.module.ModuleInfo\");\ngoog.forwardDeclare(\"goog.loader.AbstractModuleManager.FailureType\");\ngoog.require(\"goog.Disposable\");\ngoog.require(\"goog.async.throwException\");\ngoog.require(\"goog.functions\");\ngoog.require(\"goog.html.TrustedResourceUrl\");\ngoog.require(\"goog.module\");\ngoog.require(\"goog.module.BaseModule\");\ngoog.require(\"goog.module.ModuleLoadCallback\");\ngoog.module.ModuleInfo = function(deps, id) {\n  goog.Disposable.call(this);\n  this.deps_ = deps;\n  this.id_ = id;\n  this.onloadCallbacks_ = [];\n  this.onErrorCallbacks_ = [];\n  this.earlyOnloadCallbacks_ = [];\n};\ngoog.inherits(goog.module.ModuleInfo, goog.Disposable);\ngoog.module.ModuleInfo.prototype.uris_ = null;\ngoog.module.ModuleInfo.prototype.moduleConstructor_ = goog.module.BaseModule;\ngoog.module.ModuleInfo.prototype.module_ = null;\ngoog.module.ModuleInfo.prototype.getDependencies = function() {\n  return this.deps_;\n};\ngoog.module.ModuleInfo.prototype.getId = function() {\n  return this.id_;\n};\ngoog.module.ModuleInfo.prototype.setTrustedUris = function(uris) {\n  this.uris_ = uris;\n};\ngoog.module.ModuleInfo.prototype.getUris = function() {\n  if (!this.uris_) {\n    this.uris_ = [];\n  }\n  return this.uris_;\n};\ngoog.module.ModuleInfo.prototype.setModuleConstructor = function(constructor) {\n  if (this.moduleConstructor_ === goog.module.BaseModule) {\n    this.moduleConstructor_ = constructor;\n  } else {\n    throw new Error(\"Cannot set module constructor more than once.\");\n  }\n};\ngoog.module.ModuleInfo.prototype.registerEarlyCallback = function(fn, opt_handler) {\n  return this.registerCallback_(this.earlyOnloadCallbacks_, fn, opt_handler);\n};\ngoog.module.ModuleInfo.prototype.registerCallback = function(fn, opt_handler) {\n  return this.registerCallback_(this.onloadCallbacks_, fn, opt_handler);\n};\ngoog.module.ModuleInfo.prototype.registerErrback = function(fn, opt_handler) {\n  return this.registerCallback_(this.onErrorCallbacks_, fn, opt_handler);\n};\ngoog.module.ModuleInfo.prototype.registerCallback_ = function(callbacks, fn, opt_handler) {\n  var callback = new goog.module.ModuleLoadCallback(fn, opt_handler);\n  callbacks.push(callback);\n  return callback;\n};\ngoog.module.ModuleInfo.prototype.isLoaded = function() {\n  return !!this.module_;\n};\ngoog.module.ModuleInfo.prototype.setLoaded = function() {\n  this.module_ = new goog.module.BaseModule;\n};\ngoog.module.ModuleInfo.prototype.getModule = function() {\n  return this.module_;\n};\ngoog.module.ModuleInfo.prototype.onLoad = function(contextProvider) {\n  var module = new this.moduleConstructor_;\n  module.initialize(contextProvider());\n  this.module_ = module;\n  var errors = !!this.callCallbacks_(this.earlyOnloadCallbacks_, contextProvider());\n  errors = errors || !!this.callCallbacks_(this.onloadCallbacks_, contextProvider());\n  if (!errors) {\n    this.onErrorCallbacks_.length = 0;\n  }\n  return errors;\n};\ngoog.module.ModuleInfo.prototype.onError = function(cause) {\n  var result = this.callCallbacks_(this.onErrorCallbacks_, cause);\n  if (result) {\n    window.setTimeout(goog.functions.error(\"Module errback failures: \" + result), 0);\n  }\n  this.earlyOnloadCallbacks_.length = 0;\n  this.onloadCallbacks_.length = 0;\n};\ngoog.module.ModuleInfo.prototype.callCallbacks_ = function(callbacks, context) {\n  var errors = [];\n  for (var i = 0; i < callbacks.length; i++) {\n    try {\n      callbacks[i].execute(context);\n    } catch (e) {\n      goog.async.throwException(e);\n      errors.push(e);\n    }\n  }\n  callbacks.length = 0;\n  return errors.length ? errors : null;\n};\ngoog.module.ModuleInfo.prototype.disposeInternal = function() {\n  goog.module.ModuleInfo.superClass_.disposeInternal.call(this);\n  goog.dispose(this.module_);\n};\n","~:source","// Copyright 2008 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Defines the goog.module.ModuleInfo class.\n *\n */\n\ngoog.provide('goog.module.ModuleInfo');\n\ngoog.forwardDeclare('goog.loader.AbstractModuleManager.FailureType');\ngoog.require('goog.Disposable');\ngoog.require('goog.async.throwException');\ngoog.require('goog.functions');\ngoog.require('goog.html.TrustedResourceUrl');\n/** @suppress {extraRequire} */\ngoog.require('goog.module');\ngoog.require('goog.module.BaseModule');\ngoog.require('goog.module.ModuleLoadCallback');\n\n\n\n/**\n * A ModuleInfo object is used by the ModuleManager to hold information about a\n * module of js code that may or may not yet be loaded into the environment.\n *\n * @param {Array<string>} deps Ids of the modules that must be loaded before\n *     this one. The ids must be in dependency order (i.e. if the ith module\n *     depends on the jth module, then i > j).\n * @param {string} id The module's ID.\n * @constructor\n * @extends {goog.Disposable}\n * @final\n */\ngoog.module.ModuleInfo = function(deps, id) {\n  goog.Disposable.call(this);\n\n  /**\n   * A list of the ids of the modules that must be loaded before this module.\n   * @type {Array<string>}\n   * @private\n   */\n  this.deps_ = deps;\n\n  /**\n   * The module's ID.\n   * @type {string}\n   * @private\n   */\n  this.id_ = id;\n\n  /**\n   * Callbacks to execute once this module is loaded.\n   * @type {Array<goog.module.ModuleLoadCallback>}\n   * @private\n   */\n  this.onloadCallbacks_ = [];\n\n  /**\n   * Callbacks to execute if the module load errors.\n   * @type {Array<goog.module.ModuleLoadCallback>}\n   * @private\n   */\n  this.onErrorCallbacks_ = [];\n\n  /**\n   * Early callbacks to execute once this module is loaded. Called after\n   * module initialization but before regular onload callbacks.\n   * @type {Array<goog.module.ModuleLoadCallback>}\n   * @private\n   */\n  this.earlyOnloadCallbacks_ = [];\n};\ngoog.inherits(goog.module.ModuleInfo, goog.Disposable);\n\n\n/**\n * The uris that can be used to retrieve this module's code.\n * @type {?Array<!goog.html.TrustedResourceUrl>}\n * @private\n */\ngoog.module.ModuleInfo.prototype.uris_ = null;\n\n\n/**\n * The constructor to use to instantiate the module object after the module\n * code is loaded. This must be either goog.module.BaseModule or a subclass of\n * it.\n * @type {Function}\n * @private\n */\ngoog.module.ModuleInfo.prototype.moduleConstructor_ = goog.module.BaseModule;\n\n\n/**\n * The module object. This will be null until the module is loaded.\n * @type {goog.module.BaseModule?}\n * @private\n */\ngoog.module.ModuleInfo.prototype.module_ = null;\n\n\n/**\n * Gets the dependencies of this module.\n * @return {Array<string>} The ids of the modules that this module depends on.\n */\ngoog.module.ModuleInfo.prototype.getDependencies = function() {\n  return this.deps_;\n};\n\n\n/**\n * Gets the ID of this module.\n * @return {string} The ID.\n */\ngoog.module.ModuleInfo.prototype.getId = function() {\n  return this.id_;\n};\n\n\n/**\n * Sets the uris of this module.\n * @param {!Array<!goog.html.TrustedResourceUrl>} uris Uris for this module's\n *     code.\n */\ngoog.module.ModuleInfo.prototype.setTrustedUris = function(uris) {\n  this.uris_ = uris;\n};\n\n\n/**\n * Gets the uris of this module.\n * @return {!Array<!goog.html.TrustedResourceUrl>} Uris for this module's code.\n */\ngoog.module.ModuleInfo.prototype.getUris = function() {\n  if (!this.uris_) {\n    this.uris_ = [];\n  }\n  return this.uris_;\n};\n\n\n/**\n * Sets the constructor to use to instantiate the module object after the\n * module code is loaded.\n * @param {Function} constructor The constructor of a goog.module.BaseModule\n *     subclass.\n */\ngoog.module.ModuleInfo.prototype.setModuleConstructor = function(constructor) {\n  if (this.moduleConstructor_ === goog.module.BaseModule) {\n    this.moduleConstructor_ = constructor;\n  } else {\n    throw new Error('Cannot set module constructor more than once.');\n  }\n};\n\n\n/**\n * Registers a function that should be called after the module is loaded. These\n * early callbacks are called after {@link Module#initialize} is called but\n * before the other callbacks are called.\n * @param {Function} fn A callback function that takes a single argument which\n *    is the module context.\n * @param {Object=} opt_handler Optional handler under whose scope to execute\n *     the callback.\n * @return {!goog.module.ModuleLoadCallback} Reference to the callback\n *     object.\n */\ngoog.module.ModuleInfo.prototype.registerEarlyCallback = function(\n    fn, opt_handler) {\n  return this.registerCallback_(this.earlyOnloadCallbacks_, fn, opt_handler);\n};\n\n\n/**\n * Registers a function that should be called after the module is loaded.\n * @param {Function} fn A callback function that takes a single argument which\n *    is the module context.\n * @param {Object=} opt_handler Optional handler under whose scope to execute\n *     the callback.\n * @return {!goog.module.ModuleLoadCallback} Reference to the callback\n *     object.\n */\ngoog.module.ModuleInfo.prototype.registerCallback = function(fn, opt_handler) {\n  return this.registerCallback_(this.onloadCallbacks_, fn, opt_handler);\n};\n\n\n/**\n * Registers a function that should be called if the module load fails.\n * @param {Function} fn A callback function that takes a single argument which\n *    is the failure type.\n * @param {Object=} opt_handler Optional handler under whose scope to execute\n *     the callback.\n * @return {!goog.module.ModuleLoadCallback} Reference to the callback\n *     object.\n */\ngoog.module.ModuleInfo.prototype.registerErrback = function(fn, opt_handler) {\n  return this.registerCallback_(this.onErrorCallbacks_, fn, opt_handler);\n};\n\n\n/**\n * Registers a function that should be called after the module is loaded.\n * @param {Array<goog.module.ModuleLoadCallback>} callbacks The array to\n *     add the callback to.\n * @param {Function} fn A callback function that takes a single argument which\n *     is the module context.\n * @param {Object=} opt_handler Optional handler under whose scope to execute\n *     the callback.\n * @return {!goog.module.ModuleLoadCallback} Reference to the callback\n *     object.\n * @private\n */\ngoog.module.ModuleInfo.prototype.registerCallback_ = function(\n    callbacks, fn, opt_handler) {\n  var callback = new goog.module.ModuleLoadCallback(fn, opt_handler);\n  callbacks.push(callback);\n  return callback;\n};\n\n\n/**\n * Determines whether the module has been loaded.\n * @return {boolean} Whether the module has been loaded.\n */\ngoog.module.ModuleInfo.prototype.isLoaded = function() {\n  return !!this.module_;\n};\n\n\n/**\n * Marks the current module as loaded. This is useful for subtractive module\n * loading, where occasionally we need to fallback to normal module loading,\n * and re-fetch the module graph. In this case, we need a way to tell the module\n * manager to mark all modules that are already loaded.\n */\ngoog.module.ModuleInfo.prototype.setLoaded = function() {\n  this.module_ = new goog.module.BaseModule();\n};\n\n\n/**\n * Gets the module.\n * @return {goog.module.BaseModule?} The module if it has been loaded.\n *     Otherwise, null.\n */\ngoog.module.ModuleInfo.prototype.getModule = function() {\n  return this.module_;\n};\n\n\n/**\n * Sets this module as loaded.\n * @param {function() : Object} contextProvider A function that provides the\n *     module context.\n * @return {boolean} Whether any errors occurred while executing the onload\n *     callbacks.\n */\ngoog.module.ModuleInfo.prototype.onLoad = function(contextProvider) {\n  // Instantiate and initialize the module object.\n  var module = new this.moduleConstructor_;\n  module.initialize(contextProvider());\n\n  // Keep an internal reference to the module.\n  this.module_ = module;\n\n  // Fire any early callbacks that were waiting for the module to be loaded.\n  var errors =\n      !!this.callCallbacks_(this.earlyOnloadCallbacks_, contextProvider());\n\n  // Fire any callbacks that were waiting for the module to be loaded.\n  errors =\n      errors || !!this.callCallbacks_(this.onloadCallbacks_, contextProvider());\n\n  if (!errors) {\n    // Clear the errbacks.\n    this.onErrorCallbacks_.length = 0;\n  }\n\n  return errors;\n};\n\n\n/**\n * Calls the error callbacks for the module.\n * @param {goog.loader.AbstractModuleManager.FailureType} cause What caused the\n *     error.\n */\ngoog.module.ModuleInfo.prototype.onError = function(cause) {\n  var result = this.callCallbacks_(this.onErrorCallbacks_, cause);\n  if (result) {\n    // Throw an exception asynchronously. Do not let the exception leak\n    // up to the caller, or it will blow up the module loading framework.\n    window.setTimeout(\n        goog.functions.error('Module errback failures: ' + result), 0);\n  }\n  this.earlyOnloadCallbacks_.length = 0;\n  this.onloadCallbacks_.length = 0;\n};\n\n\n/**\n * Helper to call the callbacks after module load.\n * @param {Array<goog.module.ModuleLoadCallback>} callbacks The callbacks\n *     to call and then clear.\n * @param {*} context The module context.\n * @return {Array<*>} Any errors encountered while calling the callbacks,\n *     or null if there were no errors.\n * @private\n */\ngoog.module.ModuleInfo.prototype.callCallbacks_ = function(callbacks, context) {\n  // NOTE(nicksantos):\n  // In practice, there are two error-handling scenarios:\n  // 1) The callback does some mandatory initialization of the module.\n  // 2) The callback is for completion of some optional UI event.\n  // There's no good way to handle both scenarios.\n  //\n  // Our strategy here is to protect module manager from exceptions, so that\n  // the failure of one module doesn't affect the loading of other modules.\n  // Errors are thrown outside of the current stack frame, so they still\n  // get reported but don't interrupt execution.\n\n  // Call each callback in the order they were registered\n  var errors = [];\n  for (var i = 0; i < callbacks.length; i++) {\n    try {\n      callbacks[i].execute(context);\n    } catch (e) {\n      goog.async.throwException(e);\n      errors.push(e);\n    }\n  }\n\n  // Clear the list of callbacks.\n  callbacks.length = 0;\n  return errors.length ? errors : null;\n};\n\n\n/** @override */\ngoog.module.ModuleInfo.prototype.disposeInternal = function() {\n  goog.module.ModuleInfo.superClass_.disposeInternal.call(this);\n  goog.dispose(this.module_);\n};\n","~:compiled-at",1622535515694,"~:source-map-json","{\n\"version\":3,\n\"file\":\"goog.module.moduleinfo.js\",\n\"lineCount\":103,\n\"mappings\":\"AAmBAA,IAAAC,QAAA,CAAa,wBAAb,CAAA;AAEAD,IAAAE,eAAA,CAAoB,+CAApB,CAAA;AACAF,IAAAG,QAAA,CAAa,iBAAb,CAAA;AACAH,IAAAG,QAAA,CAAa,2BAAb,CAAA;AACAH,IAAAG,QAAA,CAAa,gBAAb,CAAA;AACAH,IAAAG,QAAA,CAAa,8BAAb,CAAA;AAEAH,IAAAG,QAAA,CAAa,aAAb,CAAA;AACAH,IAAAG,QAAA,CAAa,wBAAb,CAAA;AACAH,IAAAG,QAAA,CAAa,gCAAb,CAAA;AAgBAH,IAAAI,OAAAC,WAAA,GAAyBC,QAAQ,CAACC,IAAD,EAAOC,EAAP,CAAW;AAC1CR,MAAAS,WAAAC,KAAA,CAAqB,IAArB,CAAA;AAOA,MAAAC,MAAA,GAAaJ,IAAb;AAOA,MAAAK,IAAA,GAAWJ,EAAX;AAOA,MAAAK,iBAAA,GAAwB,EAAxB;AAOA,MAAAC,kBAAA,GAAyB,EAAzB;AAQA,MAAAC,sBAAA,GAA6B,EAA7B;AArC0C,CAA5C;AAuCAf,IAAAgB,SAAA,CAAchB,IAAAI,OAAAC,WAAd,EAAsCL,IAAAS,WAAtC,CAAA;AAQAT,IAAAI,OAAAC,WAAAY,UAAAC,MAAA,GAAyC,IAAzC;AAUAlB,IAAAI,OAAAC,WAAAY,UAAAE,mBAAA,GAAsDnB,IAAAI,OAAAgB,WAAtD;AAQApB,IAAAI,OAAAC,WAAAY,UAAAI,QAAA,GAA2C,IAA3C;AAOArB,IAAAI,OAAAC,WAAAY,UAAAK,gBAAA,GAAmDC,QAAQ,EAAG;AAC5D,SAAO,IAAAZ,MAAP;AAD4D,CAA9D;AASAX,IAAAI,OAAAC,WAAAY,UAAAO,MAAA,GAAyCC,QAAQ,EAAG;AAClD,SAAO,IAAAb,IAAP;AADkD,CAApD;AAUAZ,IAAAI,OAAAC,WAAAY,UAAAS,eAAA,GAAkDC,QAAQ,CAACC,IAAD,CAAO;AAC/D,MAAAV,MAAA,GAAaU,IAAb;AAD+D,CAAjE;AASA5B,IAAAI,OAAAC,WAAAY,UAAAY,QAAA,GAA2CC,QAAQ,EAAG;AACpD,MAAI,CAAC,IAAAZ,MAAL;AACE,QAAAA,MAAA,GAAa,EAAb;AADF;AAGA,SAAO,IAAAA,MAAP;AAJoD,CAAtD;AAcAlB,IAAAI,OAAAC,WAAAY,UAAAc,qBAAA,GAAwDC,QAAQ,CAACC,WAAD,CAAc;AAC5E,MAAI,IAAAd,mBAAJ,KAAgCnB,IAAAI,OAAAgB,WAAhC;AACE,QAAAD,mBAAA,GAA0Bc,WAA1B;AADF;AAGE,UAAM,IAAIC,KAAJ,CAAU,+CAAV,CAAN;AAHF;AAD4E,CAA9E;AAoBAlC,IAAAI,OAAAC,WAAAY,UAAAkB,sBAAA,GAAyDC,QAAQ,CAC7DC,EAD6D,EACzDC,WADyD,CAC5C;AACnB,SAAO,IAAAC,kBAAA,CAAuB,IAAAxB,sBAAvB,EAAmDsB,EAAnD,EAAuDC,WAAvD,CAAP;AADmB,CADrB;AAeAtC,IAAAI,OAAAC,WAAAY,UAAAuB,iBAAA,GAAoDC,QAAQ,CAACJ,EAAD,EAAKC,WAAL,CAAkB;AAC5E,SAAO,IAAAC,kBAAA,CAAuB,IAAA1B,iBAAvB,EAA8CwB,EAA9C,EAAkDC,WAAlD,CAAP;AAD4E,CAA9E;AAcAtC,IAAAI,OAAAC,WAAAY,UAAAyB,gBAAA,GAAmDC,QAAQ,CAACN,EAAD,EAAKC,WAAL,CAAkB;AAC3E,SAAO,IAAAC,kBAAA,CAAuB,IAAAzB,kBAAvB,EAA+CuB,EAA/C,EAAmDC,WAAnD,CAAP;AAD2E,CAA7E;AAiBAtC,IAAAI,OAAAC,WAAAY,UAAAsB,kBAAA,GAAqDK,QAAQ,CACzDC,SADyD,EAC9CR,EAD8C,EAC1CC,WAD0C,CAC7B;AAC9B,MAAIQ,WAAW,IAAI9C,IAAAI,OAAA2C,mBAAJ,CAAmCV,EAAnC,EAAuCC,WAAvC,CAAf;AACAO,WAAAG,KAAA,CAAeF,QAAf,CAAA;AACA,SAAOA,QAAP;AAH8B,CADhC;AAYA9C,IAAAI,OAAAC,WAAAY,UAAAgC,SAAA,GAA4CC,QAAQ,EAAG;AACrD,SAAO,CAAC,CAAC,IAAA7B,QAAT;AADqD,CAAvD;AAWArB,IAAAI,OAAAC,WAAAY,UAAAkC,UAAA,GAA6CC,QAAQ,EAAG;AACtD,MAAA/B,QAAA,GAAe,IAAIrB,IAAAI,OAAAgB,WAAnB;AADsD,CAAxD;AAUApB,IAAAI,OAAAC,WAAAY,UAAAoC,UAAA,GAA6CC,QAAQ,EAAG;AACtD,SAAO,IAAAjC,QAAP;AADsD,CAAxD;AAYArB,IAAAI,OAAAC,WAAAY,UAAAsC,OAAA,GAA0CC,QAAQ,CAACC,eAAD,CAAkB;AAElE,MAAIrD,SAAS,IAAI,IAAAe,mBAAjB;AACAf,QAAAsD,WAAA,CAAkBD,eAAA,EAAlB,CAAA;AAGA,MAAApC,QAAA,GAAejB,MAAf;AAGA,MAAIuD,SACA,CAAC,CAAC,IAAAC,eAAA,CAAoB,IAAA7C,sBAApB,EAAgD0C,eAAA,EAAhD,CADN;AAIAE,QAAA,GACIA,MADJ,IACc,CAAC,CAAC,IAAAC,eAAA,CAAoB,IAAA/C,iBAApB,EAA2C4C,eAAA,EAA3C,CADhB;AAGA,MAAI,CAACE,MAAL;AAEE,QAAA7C,kBAAA+C,OAAA,GAAgC,CAAhC;AAFF;AAKA,SAAOF,MAAP;AArBkE,CAApE;AA8BA3D,IAAAI,OAAAC,WAAAY,UAAA6C,QAAA,GAA2CC,QAAQ,CAACC,KAAD,CAAQ;AACzD,MAAIC,SAAS,IAAAL,eAAA,CAAoB,IAAA9C,kBAApB,EAA4CkD,KAA5C,CAAb;AACA,MAAIC,MAAJ;AAGEC,UAAAC,WAAA,CACInE,IAAAoE,UAAAC,MAAA,CAAqB,2BAArB,GAAmDJ,MAAnD,CADJ,EACgE,CADhE,CAAA;AAHF;AAMA,MAAAlD,sBAAA8C,OAAA,GAAoC,CAApC;AACA,MAAAhD,iBAAAgD,OAAA,GAA+B,CAA/B;AATyD,CAA3D;AAsBA7D,IAAAI,OAAAC,WAAAY,UAAA2C,eAAA,GAAkDU,QAAQ,CAACzB,SAAD,EAAY0B,OAAZ,CAAqB;AAa7E,MAAIZ,SAAS,EAAb;AACA,OAAK,IAAIa,IAAI,CAAb,EAAgBA,CAAhB,GAAoB3B,SAAAgB,OAApB,EAAsCW,CAAA,EAAtC;AACE,OAAI;AACF3B,eAAA,CAAU2B,CAAV,CAAAC,QAAA,CAAqBF,OAArB,CAAA;AADE,KAEF,QAAOG,CAAP,CAAU;AACV1E,UAAA2E,MAAAC,eAAA,CAA0BF,CAA1B,CAAA;AACAf,YAAAX,KAAA,CAAY0B,CAAZ,CAAA;AAFU;AAHd;AAUA7B,WAAAgB,OAAA,GAAmB,CAAnB;AACA,SAAOF,MAAAE,OAAA,GAAgBF,MAAhB,GAAyB,IAAhC;AAzB6E,CAA/E;AA8BA3D,IAAAI,OAAAC,WAAAY,UAAA4D,gBAAA,GAAmDC,QAAQ,EAAG;AAC5D9E,MAAAI,OAAAC,WAAA0E,YAAAF,gBAAAnE,KAAA,CAAwD,IAAxD,CAAA;AACAV,MAAAgF,QAAA,CAAa,IAAA3D,QAAb,CAAA;AAF4D,CAA9D;;\",\n\"sources\":[\"goog/module/moduleinfo.js\"],\n\"sourcesContent\":[\"// Copyright 2008 The Closure Library Authors. All Rights Reserved.\\n//\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n// you may not use this file except in compliance with the License.\\n// You may obtain a copy of the License at\\n//\\n//      http://www.apache.org/licenses/LICENSE-2.0\\n//\\n// Unless required by applicable law or agreed to in writing, software\\n// distributed under the License is distributed on an \\\"AS-IS\\\" BASIS,\\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n// See the License for the specific language governing permissions and\\n// limitations under the License.\\n\\n/**\\n * @fileoverview Defines the goog.module.ModuleInfo class.\\n *\\n */\\n\\ngoog.provide('goog.module.ModuleInfo');\\n\\ngoog.forwardDeclare('goog.loader.AbstractModuleManager.FailureType');\\ngoog.require('goog.Disposable');\\ngoog.require('goog.async.throwException');\\ngoog.require('goog.functions');\\ngoog.require('goog.html.TrustedResourceUrl');\\n/** @suppress {extraRequire} */\\ngoog.require('goog.module');\\ngoog.require('goog.module.BaseModule');\\ngoog.require('goog.module.ModuleLoadCallback');\\n\\n\\n\\n/**\\n * A ModuleInfo object is used by the ModuleManager to hold information about a\\n * module of js code that may or may not yet be loaded into the environment.\\n *\\n * @param {Array<string>} deps Ids of the modules that must be loaded before\\n *     this one. The ids must be in dependency order (i.e. if the ith module\\n *     depends on the jth module, then i > j).\\n * @param {string} id The module's ID.\\n * @constructor\\n * @extends {goog.Disposable}\\n * @final\\n */\\ngoog.module.ModuleInfo = function(deps, id) {\\n  goog.Disposable.call(this);\\n\\n  /**\\n   * A list of the ids of the modules that must be loaded before this module.\\n   * @type {Array<string>}\\n   * @private\\n   */\\n  this.deps_ = deps;\\n\\n  /**\\n   * The module's ID.\\n   * @type {string}\\n   * @private\\n   */\\n  this.id_ = id;\\n\\n  /**\\n   * Callbacks to execute once this module is loaded.\\n   * @type {Array<goog.module.ModuleLoadCallback>}\\n   * @private\\n   */\\n  this.onloadCallbacks_ = [];\\n\\n  /**\\n   * Callbacks to execute if the module load errors.\\n   * @type {Array<goog.module.ModuleLoadCallback>}\\n   * @private\\n   */\\n  this.onErrorCallbacks_ = [];\\n\\n  /**\\n   * Early callbacks to execute once this module is loaded. Called after\\n   * module initialization but before regular onload callbacks.\\n   * @type {Array<goog.module.ModuleLoadCallback>}\\n   * @private\\n   */\\n  this.earlyOnloadCallbacks_ = [];\\n};\\ngoog.inherits(goog.module.ModuleInfo, goog.Disposable);\\n\\n\\n/**\\n * The uris that can be used to retrieve this module's code.\\n * @type {?Array<!goog.html.TrustedResourceUrl>}\\n * @private\\n */\\ngoog.module.ModuleInfo.prototype.uris_ = null;\\n\\n\\n/**\\n * The constructor to use to instantiate the module object after the module\\n * code is loaded. This must be either goog.module.BaseModule or a subclass of\\n * it.\\n * @type {Function}\\n * @private\\n */\\ngoog.module.ModuleInfo.prototype.moduleConstructor_ = goog.module.BaseModule;\\n\\n\\n/**\\n * The module object. This will be null until the module is loaded.\\n * @type {goog.module.BaseModule?}\\n * @private\\n */\\ngoog.module.ModuleInfo.prototype.module_ = null;\\n\\n\\n/**\\n * Gets the dependencies of this module.\\n * @return {Array<string>} The ids of the modules that this module depends on.\\n */\\ngoog.module.ModuleInfo.prototype.getDependencies = function() {\\n  return this.deps_;\\n};\\n\\n\\n/**\\n * Gets the ID of this module.\\n * @return {string} The ID.\\n */\\ngoog.module.ModuleInfo.prototype.getId = function() {\\n  return this.id_;\\n};\\n\\n\\n/**\\n * Sets the uris of this module.\\n * @param {!Array<!goog.html.TrustedResourceUrl>} uris Uris for this module's\\n *     code.\\n */\\ngoog.module.ModuleInfo.prototype.setTrustedUris = function(uris) {\\n  this.uris_ = uris;\\n};\\n\\n\\n/**\\n * Gets the uris of this module.\\n * @return {!Array<!goog.html.TrustedResourceUrl>} Uris for this module's code.\\n */\\ngoog.module.ModuleInfo.prototype.getUris = function() {\\n  if (!this.uris_) {\\n    this.uris_ = [];\\n  }\\n  return this.uris_;\\n};\\n\\n\\n/**\\n * Sets the constructor to use to instantiate the module object after the\\n * module code is loaded.\\n * @param {Function} constructor The constructor of a goog.module.BaseModule\\n *     subclass.\\n */\\ngoog.module.ModuleInfo.prototype.setModuleConstructor = function(constructor) {\\n  if (this.moduleConstructor_ === goog.module.BaseModule) {\\n    this.moduleConstructor_ = constructor;\\n  } else {\\n    throw new Error('Cannot set module constructor more than once.');\\n  }\\n};\\n\\n\\n/**\\n * Registers a function that should be called after the module is loaded. These\\n * early callbacks are called after {@link Module#initialize} is called but\\n * before the other callbacks are called.\\n * @param {Function} fn A callback function that takes a single argument which\\n *    is the module context.\\n * @param {Object=} opt_handler Optional handler under whose scope to execute\\n *     the callback.\\n * @return {!goog.module.ModuleLoadCallback} Reference to the callback\\n *     object.\\n */\\ngoog.module.ModuleInfo.prototype.registerEarlyCallback = function(\\n    fn, opt_handler) {\\n  return this.registerCallback_(this.earlyOnloadCallbacks_, fn, opt_handler);\\n};\\n\\n\\n/**\\n * Registers a function that should be called after the module is loaded.\\n * @param {Function} fn A callback function that takes a single argument which\\n *    is the module context.\\n * @param {Object=} opt_handler Optional handler under whose scope to execute\\n *     the callback.\\n * @return {!goog.module.ModuleLoadCallback} Reference to the callback\\n *     object.\\n */\\ngoog.module.ModuleInfo.prototype.registerCallback = function(fn, opt_handler) {\\n  return this.registerCallback_(this.onloadCallbacks_, fn, opt_handler);\\n};\\n\\n\\n/**\\n * Registers a function that should be called if the module load fails.\\n * @param {Function} fn A callback function that takes a single argument which\\n *    is the failure type.\\n * @param {Object=} opt_handler Optional handler under whose scope to execute\\n *     the callback.\\n * @return {!goog.module.ModuleLoadCallback} Reference to the callback\\n *     object.\\n */\\ngoog.module.ModuleInfo.prototype.registerErrback = function(fn, opt_handler) {\\n  return this.registerCallback_(this.onErrorCallbacks_, fn, opt_handler);\\n};\\n\\n\\n/**\\n * Registers a function that should be called after the module is loaded.\\n * @param {Array<goog.module.ModuleLoadCallback>} callbacks The array to\\n *     add the callback to.\\n * @param {Function} fn A callback function that takes a single argument which\\n *     is the module context.\\n * @param {Object=} opt_handler Optional handler under whose scope to execute\\n *     the callback.\\n * @return {!goog.module.ModuleLoadCallback} Reference to the callback\\n *     object.\\n * @private\\n */\\ngoog.module.ModuleInfo.prototype.registerCallback_ = function(\\n    callbacks, fn, opt_handler) {\\n  var callback = new goog.module.ModuleLoadCallback(fn, opt_handler);\\n  callbacks.push(callback);\\n  return callback;\\n};\\n\\n\\n/**\\n * Determines whether the module has been loaded.\\n * @return {boolean} Whether the module has been loaded.\\n */\\ngoog.module.ModuleInfo.prototype.isLoaded = function() {\\n  return !!this.module_;\\n};\\n\\n\\n/**\\n * Marks the current module as loaded. This is useful for subtractive module\\n * loading, where occasionally we need to fallback to normal module loading,\\n * and re-fetch the module graph. In this case, we need a way to tell the module\\n * manager to mark all modules that are already loaded.\\n */\\ngoog.module.ModuleInfo.prototype.setLoaded = function() {\\n  this.module_ = new goog.module.BaseModule();\\n};\\n\\n\\n/**\\n * Gets the module.\\n * @return {goog.module.BaseModule?} The module if it has been loaded.\\n *     Otherwise, null.\\n */\\ngoog.module.ModuleInfo.prototype.getModule = function() {\\n  return this.module_;\\n};\\n\\n\\n/**\\n * Sets this module as loaded.\\n * @param {function() : Object} contextProvider A function that provides the\\n *     module context.\\n * @return {boolean} Whether any errors occurred while executing the onload\\n *     callbacks.\\n */\\ngoog.module.ModuleInfo.prototype.onLoad = function(contextProvider) {\\n  // Instantiate and initialize the module object.\\n  var module = new this.moduleConstructor_;\\n  module.initialize(contextProvider());\\n\\n  // Keep an internal reference to the module.\\n  this.module_ = module;\\n\\n  // Fire any early callbacks that were waiting for the module to be loaded.\\n  var errors =\\n      !!this.callCallbacks_(this.earlyOnloadCallbacks_, contextProvider());\\n\\n  // Fire any callbacks that were waiting for the module to be loaded.\\n  errors =\\n      errors || !!this.callCallbacks_(this.onloadCallbacks_, contextProvider());\\n\\n  if (!errors) {\\n    // Clear the errbacks.\\n    this.onErrorCallbacks_.length = 0;\\n  }\\n\\n  return errors;\\n};\\n\\n\\n/**\\n * Calls the error callbacks for the module.\\n * @param {goog.loader.AbstractModuleManager.FailureType} cause What caused the\\n *     error.\\n */\\ngoog.module.ModuleInfo.prototype.onError = function(cause) {\\n  var result = this.callCallbacks_(this.onErrorCallbacks_, cause);\\n  if (result) {\\n    // Throw an exception asynchronously. Do not let the exception leak\\n    // up to the caller, or it will blow up the module loading framework.\\n    window.setTimeout(\\n        goog.functions.error('Module errback failures: ' + result), 0);\\n  }\\n  this.earlyOnloadCallbacks_.length = 0;\\n  this.onloadCallbacks_.length = 0;\\n};\\n\\n\\n/**\\n * Helper to call the callbacks after module load.\\n * @param {Array<goog.module.ModuleLoadCallback>} callbacks The callbacks\\n *     to call and then clear.\\n * @param {*} context The module context.\\n * @return {Array<*>} Any errors encountered while calling the callbacks,\\n *     or null if there were no errors.\\n * @private\\n */\\ngoog.module.ModuleInfo.prototype.callCallbacks_ = function(callbacks, context) {\\n  // NOTE(nicksantos):\\n  // In practice, there are two error-handling scenarios:\\n  // 1) The callback does some mandatory initialization of the module.\\n  // 2) The callback is for completion of some optional UI event.\\n  // There's no good way to handle both scenarios.\\n  //\\n  // Our strategy here is to protect module manager from exceptions, so that\\n  // the failure of one module doesn't affect the loading of other modules.\\n  // Errors are thrown outside of the current stack frame, so they still\\n  // get reported but don't interrupt execution.\\n\\n  // Call each callback in the order they were registered\\n  var errors = [];\\n  for (var i = 0; i < callbacks.length; i++) {\\n    try {\\n      callbacks[i].execute(context);\\n    } catch (e) {\\n      goog.async.throwException(e);\\n      errors.push(e);\\n    }\\n  }\\n\\n  // Clear the list of callbacks.\\n  callbacks.length = 0;\\n  return errors.length ? errors : null;\\n};\\n\\n\\n/** @override */\\ngoog.module.ModuleInfo.prototype.disposeInternal = function() {\\n  goog.module.ModuleInfo.superClass_.disposeInternal.call(this);\\n  goog.dispose(this.module_);\\n};\\n\"],\n\"names\":[\"goog\",\"provide\",\"forwardDeclare\",\"require\",\"module\",\"ModuleInfo\",\"goog.module.ModuleInfo\",\"deps\",\"id\",\"Disposable\",\"call\",\"deps_\",\"id_\",\"onloadCallbacks_\",\"onErrorCallbacks_\",\"earlyOnloadCallbacks_\",\"inherits\",\"prototype\",\"uris_\",\"moduleConstructor_\",\"BaseModule\",\"module_\",\"getDependencies\",\"goog.module.ModuleInfo.prototype.getDependencies\",\"getId\",\"goog.module.ModuleInfo.prototype.getId\",\"setTrustedUris\",\"goog.module.ModuleInfo.prototype.setTrustedUris\",\"uris\",\"getUris\",\"goog.module.ModuleInfo.prototype.getUris\",\"setModuleConstructor\",\"goog.module.ModuleInfo.prototype.setModuleConstructor\",\"constructor\",\"Error\",\"registerEarlyCallback\",\"goog.module.ModuleInfo.prototype.registerEarlyCallback\",\"fn\",\"opt_handler\",\"registerCallback_\",\"registerCallback\",\"goog.module.ModuleInfo.prototype.registerCallback\",\"registerErrback\",\"goog.module.ModuleInfo.prototype.registerErrback\",\"goog.module.ModuleInfo.prototype.registerCallback_\",\"callbacks\",\"callback\",\"ModuleLoadCallback\",\"push\",\"isLoaded\",\"goog.module.ModuleInfo.prototype.isLoaded\",\"setLoaded\",\"goog.module.ModuleInfo.prototype.setLoaded\",\"getModule\",\"goog.module.ModuleInfo.prototype.getModule\",\"onLoad\",\"goog.module.ModuleInfo.prototype.onLoad\",\"contextProvider\",\"initialize\",\"errors\",\"callCallbacks_\",\"length\",\"onError\",\"goog.module.ModuleInfo.prototype.onError\",\"cause\",\"result\",\"window\",\"setTimeout\",\"functions\",\"error\",\"goog.module.ModuleInfo.prototype.callCallbacks_\",\"context\",\"i\",\"execute\",\"e\",\"async\",\"throwException\",\"disposeInternal\",\"goog.module.ModuleInfo.prototype.disposeInternal\",\"superClass_\",\"dispose\"]\n}\n"]