["^ ","~:resource-id",["~:shadow.build.classpath/resource","goog/module/module.js"],"~:js","goog.provide(\"goog.module\");\ngoog.module = goog.module || {};\n","~:source","// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n *\n * @fileoverview This class supports the dynamic loading of compiled\n * javascript modules at runtime, as described in the designdoc.\n *\n *   <http://go/js_modules_design>\n *\n */\n\ngoog.provide('goog.module');\n\n// TODO(johnlenz): Here we explicitly initialize the namespace to avoid\n// problems with the goog.module method in base.js. We should rename this\n// entire package to goog.loader and then we can delete this file.\n//\n// However, note that it is tricky to do that without breaking the world.\n/**\n * @suppress {duplicate}\n * @type {function(string):void}\n */\ngoog.module = goog.module || {};\n","~:compiled-at",1622535515691,"~:source-map-json","{\n\"version\":3,\n\"file\":\"goog.module.module.js\",\n\"lineCount\":3,\n\"mappings\":\"AAuBAA,IAAAC,QAAA,CAAa,aAAb,CAAA;AAWAD,IAAAE,OAAA,GAAcF,IAAAE,OAAd,IAA6B,EAA7B;;\",\n\"sources\":[\"goog/module/module.js\"],\n\"sourcesContent\":[\"// Copyright 2006 The Closure Library Authors. All Rights Reserved.\\n//\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n// you may not use this file except in compliance with the License.\\n// You may obtain a copy of the License at\\n//\\n//      http://www.apache.org/licenses/LICENSE-2.0\\n//\\n// Unless required by applicable law or agreed to in writing, software\\n// distributed under the License is distributed on an \\\"AS-IS\\\" BASIS,\\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n// See the License for the specific language governing permissions and\\n// limitations under the License.\\n\\n/**\\n *\\n * @fileoverview This class supports the dynamic loading of compiled\\n * javascript modules at runtime, as described in the designdoc.\\n *\\n *   <http://go/js_modules_design>\\n *\\n */\\n\\ngoog.provide('goog.module');\\n\\n// TODO(johnlenz): Here we explicitly initialize the namespace to avoid\\n// problems with the goog.module method in base.js. We should rename this\\n// entire package to goog.loader and then we can delete this file.\\n//\\n// However, note that it is tricky to do that without breaking the world.\\n/**\\n * @suppress {duplicate}\\n * @type {function(string):void}\\n */\\ngoog.module = goog.module || {};\\n\"],\n\"names\":[\"goog\",\"provide\",\"module\"]\n}\n"]